{"ast":null,"code":"'use strict';\n\nconst MongooseError = require('../../error/mongooseError');\n\nconst util = require('util');\n\nmodule.exports = validateRef;\n\nfunction validateRef(ref, path) {\n  if (typeof ref === 'string') {\n    return;\n  }\n\n  if (typeof ref === 'function') {\n    return;\n  }\n\n  throw new MongooseError('Invalid ref at path \"' + path + '\". Got ' + util.inspect(ref, {\n    depth: 0\n  }));\n}","map":{"version":3,"names":["MongooseError","require","util","module","exports","validateRef","ref","path","inspect","depth"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/populate/validateRef.js"],"sourcesContent":["'use strict';\n\nconst MongooseError = require('../../error/mongooseError');\nconst util = require('util');\n\nmodule.exports = validateRef;\n\nfunction validateRef(ref, path) {\n  if (typeof ref === 'string') {\n    return;\n  }\n\n  if (typeof ref === 'function') {\n    return;\n  }\n\n  throw new MongooseError('Invalid ref at path \"' + path + '\". Got ' +\n    util.inspect(ref, { depth: 0 }));\n}"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,2BAAD,CAA7B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,WAAjB;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;EAC9B,IAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;IAC3B;EACD;;EAED,IAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;IAC7B;EACD;;EAED,MAAM,IAAIN,aAAJ,CAAkB,0BAA0BO,IAA1B,GAAiC,SAAjC,GACtBL,IAAI,CAACM,OAAL,CAAaF,GAAb,EAAkB;IAAEG,KAAK,EAAE;EAAT,CAAlB,CADI,CAAN;AAED"},"metadata":{},"sourceType":"script"}