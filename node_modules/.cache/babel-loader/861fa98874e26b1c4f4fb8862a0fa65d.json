{"ast":null,"code":"'use strict';\n\nmodule.exports = getVirtual;\n/*!\n * ignore\n */\n\nfunction getVirtual(schema, name) {\n  if (schema.virtuals[name]) {\n    return {\n      virtual: schema.virtuals[name],\n      path: void 0\n    };\n  }\n\n  const parts = name.split('.');\n  let cur = '';\n  let nestedSchemaPath = '';\n\n  for (let i = 0; i < parts.length; ++i) {\n    cur += (cur.length > 0 ? '.' : '') + parts[i];\n\n    if (schema.virtuals[cur]) {\n      if (i === parts.length - 1) {\n        return {\n          virtual: schema.virtuals[cur],\n          path: nestedSchemaPath\n        };\n      }\n\n      continue;\n    }\n\n    if (schema.nested[cur]) {\n      continue;\n    }\n\n    if (schema.paths[cur] && schema.paths[cur].schema) {\n      schema = schema.paths[cur].schema;\n      const rest = parts.slice(i + 1).join('.');\n\n      if (schema.virtuals[rest]) {\n        if (i === parts.length - 2) {\n          return {\n            virtual: schema.virtuals[rest],\n            nestedSchemaPath: [nestedSchemaPath, cur].filter(v => !!v).join('.')\n          };\n        }\n\n        continue;\n      }\n\n      if (i + 1 < parts.length && schema.discriminators) {\n        for (const key of Object.keys(schema.discriminators)) {\n          const res = getVirtual(schema.discriminators[key], rest);\n\n          if (res != null) {\n            const _path = [nestedSchemaPath, cur, res.nestedSchemaPath].filter(v => !!v).join('.');\n\n            return {\n              virtual: res.virtual,\n              nestedSchemaPath: _path\n            };\n          }\n        }\n      }\n\n      nestedSchemaPath += (nestedSchemaPath.length > 0 ? '.' : '') + cur;\n      cur = '';\n      continue;\n    }\n\n    if (schema.discriminators) {\n      for (const discriminatorKey of Object.keys(schema.discriminators)) {\n        const virtualFromDiscriminator = getVirtual(schema.discriminators[discriminatorKey], name);\n        if (virtualFromDiscriminator) return virtualFromDiscriminator;\n      }\n    }\n\n    return null;\n  }\n}","map":{"version":3,"names":["module","exports","getVirtual","schema","name","virtuals","virtual","path","parts","split","cur","nestedSchemaPath","i","length","nested","paths","rest","slice","join","filter","v","discriminators","key","Object","keys","res","_path","discriminatorKey","virtualFromDiscriminator"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/populate/getVirtual.js"],"sourcesContent":["'use strict';\n\nmodule.exports = getVirtual;\n\n/*!\n * ignore\n */\n\nfunction getVirtual(schema, name) {\n  if (schema.virtuals[name]) {\n    return { virtual: schema.virtuals[name], path: void 0 };\n  }\n\n  const parts = name.split('.');\n  let cur = '';\n  let nestedSchemaPath = '';\n  for (let i = 0; i < parts.length; ++i) {\n    cur += (cur.length > 0 ? '.' : '') + parts[i];\n    if (schema.virtuals[cur]) {\n      if (i === parts.length - 1) {\n        return { virtual: schema.virtuals[cur], path: nestedSchemaPath };\n      }\n      continue;\n    }\n\n    if (schema.nested[cur]) {\n      continue;\n    }\n\n    if (schema.paths[cur] && schema.paths[cur].schema) {\n      schema = schema.paths[cur].schema;\n      const rest = parts.slice(i + 1).join('.');\n\n      if (schema.virtuals[rest]) {\n        if (i === parts.length - 2) {\n          return {\n            virtual: schema.virtuals[rest],\n            nestedSchemaPath: [nestedSchemaPath, cur].filter(v => !!v).join('.')\n          };\n        }\n        continue;\n      }\n\n      if (i + 1 < parts.length && schema.discriminators) {\n        for (const key of Object.keys(schema.discriminators)) {\n          const res = getVirtual(schema.discriminators[key], rest);\n          if (res != null) {\n            const _path = [nestedSchemaPath, cur, res.nestedSchemaPath].\n              filter(v => !!v).join('.');\n            return {\n              virtual: res.virtual,\n              nestedSchemaPath: _path\n            };\n          }\n        }\n      }\n\n      nestedSchemaPath += (nestedSchemaPath.length > 0 ? '.' : '') + cur;\n      cur = '';\n      continue;\n    }\n\n    if (schema.discriminators) {\n      for (const discriminatorKey of Object.keys(schema.discriminators)) {\n        const virtualFromDiscriminator = getVirtual(schema.discriminators[discriminatorKey], name);\n        if (virtualFromDiscriminator) return virtualFromDiscriminator;\n      }\n    }\n\n    return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}