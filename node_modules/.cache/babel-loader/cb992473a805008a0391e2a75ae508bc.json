{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nconst ms = require('ms');\n\nconst mpath = require('mpath');\n\nconst ObjectId = require('./types/objectid');\n\nconst PopulateOptions = require('./options/PopulateOptions');\n\nconst clone = require('./helpers/clone');\n\nconst immediate = require('./helpers/immediate');\n\nconst isObject = require('./helpers/isObject');\n\nconst isMongooseArray = require('./types/array/isMongooseArray');\n\nconst isMongooseDocumentArray = require('./types/DocumentArray/isMongooseDocumentArray');\n\nconst isBsonType = require('./helpers/isBsonType');\n\nconst getFunctionName = require('./helpers/getFunctionName');\n\nconst isMongooseObject = require('./helpers/isMongooseObject');\n\nconst promiseOrCallback = require('./helpers/promiseOrCallback');\n\nconst schemaMerge = require('./helpers/schema/merge');\n\nconst specialProperties = require('./helpers/specialProperties');\n\nconst {\n  trustedSymbol\n} = require('./helpers/query/trusted');\n\nlet Document;\nexports.specialProperties = specialProperties;\nexports.isMongooseArray = isMongooseArray.isMongooseArray;\nexports.isMongooseDocumentArray = isMongooseDocumentArray.isMongooseDocumentArray;\nexports.registerMongooseArray = isMongooseArray.registerMongooseArray;\nexports.registerMongooseDocumentArray = isMongooseDocumentArray.registerMongooseDocumentArray;\n/*!\n * Produces a collection name from model `name`. By default, just returns\n * the model name\n *\n * @param {String} name a model name\n * @param {Function} pluralize function that pluralizes the collection name\n * @return {String} a collection name\n * @api private\n */\n\nexports.toCollectionName = function (name, pluralize) {\n  if (name === 'system.profile') {\n    return name;\n  }\n\n  if (name === 'system.indexes') {\n    return name;\n  }\n\n  if (typeof pluralize === 'function') {\n    return pluralize(name);\n  }\n\n  return name;\n};\n/*!\n * Determines if `a` and `b` are deep equal.\n *\n * Modified from node/lib/assert.js\n *\n * @param {any} a a value to compare to `b`\n * @param {any} b a value to compare to `a`\n * @return {Boolean}\n * @api private\n */\n\n\nexports.deepEqual = function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || typeof b !== 'object') {\n    return a === b;\n  }\n\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n\n  if (isBsonType(a, 'ObjectID') && isBsonType(b, 'ObjectID') || isBsonType(a, 'Decimal128') && isBsonType(b, 'Decimal128')) {\n    return a.toString() === b.toString();\n  }\n\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.global === b.global && a.dotAll === b.dotAll && a.unicode === b.unicode && a.sticky === b.sticky && a.hasIndices === b.hasIndices;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  if (a instanceof Map || b instanceof Map) {\n    if (!(a instanceof Map) || !(b instanceof Map)) {\n      return false;\n    }\n\n    return deepEqual(Array.from(a.keys()), Array.from(b.keys())) && deepEqual(Array.from(a.values()), Array.from(b.values()));\n  } // Handle MongooseNumbers\n\n\n  if (a instanceof Number && b instanceof Number) {\n    return a.valueOf() === b.valueOf();\n  }\n\n  if (Buffer.isBuffer(a)) {\n    return exports.buffer.areEqual(a, b);\n  }\n\n  if (Array.isArray(a) || Array.isArray(b)) {\n    if (!Array.isArray(a) || !Array.isArray(b)) {\n      return false;\n    }\n\n    const len = a.length;\n\n    if (len !== b.length) {\n      return false;\n    }\n\n    for (let i = 0; i < len; ++i) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (a.$__ != null) {\n    a = a._doc;\n  } else if (isMongooseObject(a)) {\n    a = a.toObject();\n  }\n\n  if (b.$__ != null) {\n    b = b._doc;\n  } else if (isMongooseObject(b)) {\n    b = b.toObject();\n  }\n\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  const kaLength = ka.length; // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n\n  if (kaLength !== kb.length) {\n    return false;\n  } // ~~~cheap key test\n\n\n  for (let i = kaLength - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) {\n      return false;\n    }\n  } // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n\n\n  for (const key of ka) {\n    if (!deepEqual(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/*!\n * Get the last element of an array\n */\n\n\nexports.last = function (arr) {\n  if (arr.length > 0) {\n    return arr[arr.length - 1];\n  }\n\n  return void 0;\n};\n\nexports.clone = clone;\n/*!\n * ignore\n */\n\nexports.promiseOrCallback = promiseOrCallback;\n/*!\n * ignore\n */\n\nexports.cloneArrays = function cloneArrays(arr) {\n  if (!Array.isArray(arr)) {\n    return arr;\n  }\n\n  return arr.map(el => exports.cloneArrays(el));\n};\n/*!\n * ignore\n */\n\n\nexports.omit = function omit(obj, keys) {\n  if (keys == null) {\n    return Object.assign({}, obj);\n  }\n\n  if (!Array.isArray(keys)) {\n    keys = [keys];\n  }\n\n  const ret = Object.assign({}, obj);\n\n  for (const key of keys) {\n    delete ret[key];\n  }\n\n  return ret;\n};\n/*!\n * Shallow copies defaults into options.\n *\n * @param {Object} defaults\n * @param {Object} options\n * @return {Object} the merged object\n * @api private\n */\n\n\nexports.options = function (defaults, options) {\n  const keys = Object.keys(defaults);\n  let i = keys.length;\n  let k;\n  options = options || {};\n\n  while (i--) {\n    k = keys[i];\n\n    if (!(k in options)) {\n      options[k] = defaults[k];\n    }\n  }\n\n  return options;\n};\n/*!\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\n\nexports.merge = function merge(to, from, options, path) {\n  options = options || {};\n  const keys = Object.keys(from);\n  let i = 0;\n  const len = keys.length;\n  let key;\n\n  if (from[trustedSymbol]) {\n    to[trustedSymbol] = from[trustedSymbol];\n  }\n\n  path = path || '';\n  const omitNested = options.omitNested || {};\n\n  while (i < len) {\n    key = keys[i++];\n\n    if (options.omit && options.omit[key]) {\n      continue;\n    }\n\n    if (omitNested[path]) {\n      continue;\n    }\n\n    if (specialProperties.has(key)) {\n      continue;\n    }\n\n    if (to[key] == null) {\n      to[key] = from[key];\n    } else if (exports.isObject(from[key])) {\n      if (!exports.isObject(to[key])) {\n        to[key] = {};\n      }\n\n      if (from[key] != null) {\n        // Skip merging schemas if we're creating a discriminator schema and\n        // base schema has a given path as a single nested but discriminator schema\n        // has the path as a document array, or vice versa (gh-9534)\n        if (options.isDiscriminatorSchemaMerge && from[key].$isSingleNested && to[key].$isMongooseDocumentArray || from[key].$isMongooseDocumentArray && to[key].$isSingleNested) {\n          continue;\n        } else if (from[key].instanceOfSchema) {\n          if (to[key].instanceOfSchema) {\n            schemaMerge(to[key], from[key].clone(), options.isDiscriminatorSchemaMerge);\n          } else {\n            to[key] = from[key].clone();\n          }\n\n          continue;\n        } else if (isBsonType(from[key], 'ObjectID')) {\n          to[key] = new ObjectId(from[key]);\n          continue;\n        }\n      }\n\n      merge(to[key], from[key], options, path ? path + '.' + key : key);\n    } else if (options.overwrite) {\n      to[key] = from[key];\n    }\n  }\n};\n/*!\n * Applies toObject recursively.\n *\n * @param {Document|Array|Object} obj\n * @return {Object}\n * @api private\n */\n\n\nexports.toObject = function toObject(obj) {\n  Document || (Document = require('./document'));\n  let ret;\n\n  if (obj == null) {\n    return obj;\n  }\n\n  if (obj instanceof Document) {\n    return obj.toObject();\n  }\n\n  if (Array.isArray(obj)) {\n    ret = [];\n\n    for (const doc of obj) {\n      ret.push(toObject(doc));\n    }\n\n    return ret;\n  }\n\n  if (exports.isPOJO(obj)) {\n    ret = {};\n\n    if (obj[trustedSymbol]) {\n      ret[trustedSymbol] = obj[trustedSymbol];\n    }\n\n    for (const k of Object.keys(obj)) {\n      if (specialProperties.has(k)) {\n        continue;\n      }\n\n      ret[k] = toObject(obj[k]);\n    }\n\n    return ret;\n  }\n\n  return obj;\n};\n\nexports.isObject = isObject;\n/*!\n * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,\n * `arg` must be an object but not an instance of any special class, like String,\n * ObjectId, etc.\n *\n * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nexports.isPOJO = function isPOJO(arg) {\n  if (arg == null || typeof arg !== 'object') {\n    return false;\n  }\n\n  const proto = Object.getPrototypeOf(arg); // Prototype may be null if you used `Object.create(null)`\n  // Checking `proto`'s constructor is safe because `getPrototypeOf()`\n  // explicitly crosses the boundary from object data to object metadata\n\n  return !proto || proto.constructor.name === 'Object';\n};\n/*!\n * Determines if `arg` is an object that isn't an instance of a built-in value\n * class, like Array, Buffer, ObjectId, etc.\n */\n\n\nexports.isNonBuiltinObject = function isNonBuiltinObject(val) {\n  return typeof val === 'object' && !exports.isNativeObject(val) && !exports.isMongooseType(val) && val != null;\n};\n/*!\n * Determines if `obj` is a built-in object like an array, date, boolean,\n * etc.\n */\n\n\nexports.isNativeObject = function (arg) {\n  return Array.isArray(arg) || arg instanceof Date || arg instanceof Boolean || arg instanceof Number || arg instanceof String;\n};\n/*!\n * Determines if `val` is an object that has no own keys\n */\n\n\nexports.isEmptyObject = function (val) {\n  return val != null && typeof val === 'object' && Object.keys(val).length === 0;\n};\n/*!\n * Search if `obj` or any POJOs nested underneath `obj` has a property named\n * `key`\n */\n\n\nexports.hasKey = function hasKey(obj, key) {\n  const props = Object.keys(obj);\n\n  for (const prop of props) {\n    if (prop === key) {\n      return true;\n    }\n\n    if (exports.isPOJO(obj[prop]) && exports.hasKey(obj[prop], key)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/*!\n * process.nextTick helper.\n *\n * Wraps `callback` in a try/catch + nextTick.\n *\n * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.\n *\n * @param {Function} callback\n * @api private\n */\n\n\nexports.tick = function tick(callback) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  return function () {\n    try {\n      callback.apply(this, arguments);\n    } catch (err) {\n      // only nextTick on err to get out of\n      // the event loop and avoid state corruption.\n      immediate(function () {\n        throw err;\n      });\n    }\n  };\n};\n/*!\n * Returns true if `v` is an object that can be serialized as a primitive in\n * MongoDB\n */\n\n\nexports.isMongooseType = function (v) {\n  return isBsonType(v, 'ObjectID') || isBsonType(v, 'Decimal128') || v instanceof Buffer;\n};\n\nexports.isMongooseObject = isMongooseObject;\n/*!\n * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.\n *\n * @param {Object} object\n * @api private\n */\n\nexports.expires = function expires(object) {\n  if (!(object && object.constructor.name === 'Object')) {\n    return;\n  }\n\n  if (!('expires' in object)) {\n    return;\n  }\n\n  object.expireAfterSeconds = typeof object.expires !== 'string' ? object.expires : Math.round(ms(object.expires) / 1000);\n  delete object.expires;\n};\n/*!\n * populate helper\n */\n\n\nexports.populate = function populate(path, select, model, match, options, subPopulate, justOne, count) {\n  // might have passed an object specifying all arguments\n  let obj = null;\n\n  if (arguments.length === 1) {\n    if (path instanceof PopulateOptions) {\n      // If reusing old populate docs, avoid reusing `_docs` because that may\n      // lead to bugs and memory leaks. See gh-11641\n      path._docs = [];\n      path._childDocs = [];\n      return [path];\n    }\n\n    if (Array.isArray(path)) {\n      const singles = makeSingles(path);\n      return singles.map(o => exports.populate(o)[0]);\n    }\n\n    if (exports.isObject(path)) {\n      obj = Object.assign({}, path);\n    } else {\n      obj = {\n        path: path\n      };\n    }\n  } else if (typeof model === 'object') {\n    obj = {\n      path: path,\n      select: select,\n      match: model,\n      options: match\n    };\n  } else {\n    obj = {\n      path: path,\n      select: select,\n      model: model,\n      match: match,\n      options: options,\n      populate: subPopulate,\n      justOne: justOne,\n      count: count\n    };\n  }\n\n  if (typeof obj.path !== 'string') {\n    throw new TypeError('utils.populate: invalid path. Expected string. Got typeof `' + typeof path + '`');\n  }\n\n  return _populateObj(obj); // The order of select/conditions args is opposite Model.find but\n  // necessary to keep backward compatibility (select could be\n  // an array, string, or object literal).\n\n  function makeSingles(arr) {\n    const ret = [];\n    arr.forEach(function (obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const paths = obj.path.split(' ');\n        paths.forEach(function (p) {\n          const copy = Object.assign({}, obj);\n          copy.path = p;\n          ret.push(copy);\n        });\n      } else {\n        ret.push(obj);\n      }\n    });\n    return ret;\n  }\n};\n\nfunction _populateObj(obj) {\n  if (Array.isArray(obj.populate)) {\n    const ret = [];\n    obj.populate.forEach(function (obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const copy = Object.assign({}, obj);\n        const paths = copy.path.split(' ');\n        paths.forEach(function (p) {\n          copy.path = p;\n          ret.push(exports.populate(copy)[0]);\n        });\n      } else {\n        ret.push(exports.populate(obj)[0]);\n      }\n    });\n    obj.populate = exports.populate(ret);\n  } else if (obj.populate != null && typeof obj.populate === 'object') {\n    obj.populate = exports.populate(obj.populate);\n  }\n\n  const ret = [];\n  const paths = obj.path.split(' ');\n\n  if (obj.options != null) {\n    obj.options = exports.clone(obj.options);\n  }\n\n  for (const path of paths) {\n    ret.push(new PopulateOptions(Object.assign({}, obj, {\n      path: path\n    })));\n  }\n\n  return ret;\n}\n/*!\n * Return the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Object} obj\n */\n\n\nexports.getValue = function (path, obj, map) {\n  return mpath.get(path, obj, '_doc', map);\n};\n/*!\n * Sets the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} obj\n */\n\n\nexports.setValue = function (path, val, obj, map, _copying) {\n  mpath.set(path, val, obj, '_doc', map, _copying);\n};\n/*!\n * Returns an array of values from object `o`.\n *\n * @param {Object} o\n * @return {Array}\n * @private\n */\n\n\nexports.object = {};\n\nexports.object.vals = function vals(o) {\n  const keys = Object.keys(o);\n  let i = keys.length;\n  const ret = [];\n\n  while (i--) {\n    ret.push(o[keys[i]]);\n  }\n\n  return ret;\n};\n/*!\n * @see exports.options\n */\n\n\nexports.object.shallowCopy = exports.options;\n/*!\n * Safer helper for hasOwnProperty checks\n *\n * @param {Object} obj\n * @param {String} prop\n */\n\nconst hop = Object.prototype.hasOwnProperty;\n\nexports.object.hasOwnProperty = function (obj, prop) {\n  return hop.call(obj, prop);\n};\n/*!\n * Determine if `val` is null or undefined\n *\n * @return {Boolean}\n */\n\n\nexports.isNullOrUndefined = function (val) {\n  return val === null || val === undefined;\n};\n/*!\n * ignore\n */\n\n\nexports.array = {};\n/*!\n * Flattens an array.\n *\n * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]\n *\n * @param {Array} arr\n * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.\n * @return {Array}\n * @private\n */\n\nexports.array.flatten = function flatten(arr, filter, ret) {\n  ret || (ret = []);\n  arr.forEach(function (item) {\n    if (Array.isArray(item)) {\n      flatten(item, filter, ret);\n    } else {\n      if (!filter || filter(item)) {\n        ret.push(item);\n      }\n    }\n  });\n  return ret;\n};\n/*!\n * ignore\n */\n\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexports.hasUserDefinedProperty = function (obj, key) {\n  if (obj == null) {\n    return false;\n  }\n\n  if (Array.isArray(key)) {\n    for (const k of key) {\n      if (exports.hasUserDefinedProperty(obj, k)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (_hasOwnProperty.call(obj, key)) {\n    return true;\n  }\n\n  if (typeof obj === 'object' && key in obj) {\n    const v = obj[key];\n    return v !== Object.prototype[key] && v !== Array.prototype[key];\n  }\n\n  return false;\n};\n/*!\n * ignore\n */\n\n\nconst MAX_ARRAY_INDEX = Math.pow(2, 32) - 1;\n\nexports.isArrayIndex = function (val) {\n  if (typeof val === 'number') {\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n\n  if (typeof val === 'string') {\n    if (!/^\\d+$/.test(val)) {\n      return false;\n    }\n\n    val = +val;\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n\n  return false;\n};\n/*!\n * Removes duplicate values from an array\n *\n * [1, 2, 3, 3, 5] => [1, 2, 3, 5]\n * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]\n *    => [ObjectId(\"550988ba0c19d57f697dc45e\")]\n *\n * @param {Array} arr\n * @return {Array}\n * @private\n */\n\n\nexports.array.unique = function (arr) {\n  const primitives = new Set();\n  const ids = new Set();\n  const ret = [];\n\n  for (const item of arr) {\n    if (typeof item === 'number' || typeof item === 'string' || item == null) {\n      if (primitives.has(item)) {\n        continue;\n      }\n\n      ret.push(item);\n      primitives.add(item);\n    } else if (isBsonType(item, 'ObjectID')) {\n      if (ids.has(item.toString())) {\n        continue;\n      }\n\n      ret.push(item);\n      ids.add(item.toString());\n    } else {\n      ret.push(item);\n    }\n  }\n\n  return ret;\n};\n/*!\n * Determines if two buffers are equal.\n *\n * @param {Buffer} a\n * @param {Object} b\n */\n\n\nexports.buffer = {};\n\nexports.buffer.areEqual = function (a, b) {\n  if (!Buffer.isBuffer(a)) {\n    return false;\n  }\n\n  if (!Buffer.isBuffer(b)) {\n    return false;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0, len = a.length; i < len; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexports.getFunctionName = getFunctionName;\n/*!\n * Decorate buffers\n */\n\nexports.decorate = function (destination, source) {\n  for (const key in source) {\n    if (specialProperties.has(key)) {\n      continue;\n    }\n\n    destination[key] = source[key];\n  }\n};\n/**\n * merges to with a copy of from\n *\n * @param {Object} to\n * @param {Object} fromObj\n * @api private\n */\n\n\nexports.mergeClone = function (to, fromObj) {\n  if (isMongooseObject(fromObj)) {\n    fromObj = fromObj.toObject({\n      transform: false,\n      virtuals: false,\n      depopulate: true,\n      getters: false,\n      flattenDecimals: false\n    });\n  }\n\n  const keys = Object.keys(fromObj);\n  const len = keys.length;\n  let i = 0;\n  let key;\n\n  while (i < len) {\n    key = keys[i++];\n\n    if (specialProperties.has(key)) {\n      continue;\n    }\n\n    if (typeof to[key] === 'undefined') {\n      to[key] = exports.clone(fromObj[key], {\n        transform: false,\n        virtuals: false,\n        depopulate: true,\n        getters: false,\n        flattenDecimals: false\n      });\n    } else {\n      let val = fromObj[key];\n\n      if (val != null && val.valueOf && !(val instanceof Date)) {\n        val = val.valueOf();\n      }\n\n      if (exports.isObject(val)) {\n        let obj = val;\n\n        if (isMongooseObject(val) && !val.isMongooseBuffer) {\n          obj = obj.toObject({\n            transform: false,\n            virtuals: false,\n            depopulate: true,\n            getters: false,\n            flattenDecimals: false\n          });\n        }\n\n        if (val.isMongooseBuffer) {\n          obj = Buffer.from(obj);\n        }\n\n        exports.mergeClone(to[key], obj);\n      } else {\n        to[key] = exports.clone(val, {\n          flattenDecimals: false\n        });\n      }\n    }\n  }\n};\n/**\n * Executes a function on each element of an array (like _.each)\n *\n * @param {Array} arr\n * @param {Function} fn\n * @api private\n */\n\n\nexports.each = function (arr, fn) {\n  for (const item of arr) {\n    fn(item);\n  }\n};\n/*!\n * ignore\n */\n\n\nexports.getOption = function (name) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n\n  for (const source of sources) {\n    if (source[name] != null) {\n      return source[name];\n    }\n  }\n\n  return null;\n};\n/*!\n * ignore\n */\n\n\nexports.noop = function () {};\n\nexports.errorToPOJO = function errorToPOJO(error) {\n  const isError = error instanceof Error;\n\n  if (!isError) {\n    throw new Error('`error` must be `instanceof Error`.');\n  }\n\n  const ret = {};\n\n  for (const properyName of Object.getOwnPropertyNames(error)) {\n    ret[properyName] = error[properyName];\n  }\n\n  return ret;\n};\n/*!\n * ignore\n */\n\n\nexports.warn = function warn(message) {\n  return process.emitWarning(message, {\n    code: 'MONGOOSE'\n  });\n};","map":{"version":3,"names":["ms","require","mpath","ObjectId","PopulateOptions","clone","immediate","isObject","isMongooseArray","isMongooseDocumentArray","isBsonType","getFunctionName","isMongooseObject","promiseOrCallback","schemaMerge","specialProperties","trustedSymbol","Document","exports","registerMongooseArray","registerMongooseDocumentArray","toCollectionName","name","pluralize","deepEqual","a","b","Date","getTime","toString","RegExp","source","ignoreCase","multiline","global","dotAll","unicode","sticky","hasIndices","prototype","Map","Array","from","keys","values","Number","valueOf","Buffer","isBuffer","buffer","areEqual","isArray","len","length","i","$__","_doc","toObject","ka","Object","kb","kaLength","key","last","arr","cloneArrays","map","el","omit","obj","assign","ret","options","defaults","k","merge","to","path","omitNested","has","isDiscriminatorSchemaMerge","$isSingleNested","$isMongooseDocumentArray","instanceOfSchema","overwrite","doc","push","isPOJO","arg","proto","getPrototypeOf","constructor","isNonBuiltinObject","val","isNativeObject","isMongooseType","Boolean","String","isEmptyObject","hasKey","props","prop","tick","callback","apply","arguments","err","v","expires","object","expireAfterSeconds","Math","round","populate","select","model","match","subPopulate","justOne","count","_docs","_childDocs","singles","makeSingles","o","TypeError","_populateObj","forEach","test","paths","split","p","copy","getValue","get","setValue","_copying","set","vals","shallowCopy","hop","hasOwnProperty","call","isNullOrUndefined","undefined","array","flatten","filter","item","_hasOwnProperty","hasUserDefinedProperty","MAX_ARRAY_INDEX","pow","isArrayIndex","unique","primitives","Set","ids","add","decorate","destination","mergeClone","fromObj","transform","virtuals","depopulate","getters","flattenDecimals","isMongooseBuffer","each","fn","getOption","sources","slice","noop","errorToPOJO","error","isError","Error","properyName","getOwnPropertyNames","warn","message","process","emitWarning","code"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/utils.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst ms = require('ms');\nconst mpath = require('mpath');\nconst ObjectId = require('./types/objectid');\nconst PopulateOptions = require('./options/PopulateOptions');\nconst clone = require('./helpers/clone');\nconst immediate = require('./helpers/immediate');\nconst isObject = require('./helpers/isObject');\nconst isMongooseArray = require('./types/array/isMongooseArray');\nconst isMongooseDocumentArray = require('./types/DocumentArray/isMongooseDocumentArray');\nconst isBsonType = require('./helpers/isBsonType');\nconst getFunctionName = require('./helpers/getFunctionName');\nconst isMongooseObject = require('./helpers/isMongooseObject');\nconst promiseOrCallback = require('./helpers/promiseOrCallback');\nconst schemaMerge = require('./helpers/schema/merge');\nconst specialProperties = require('./helpers/specialProperties');\nconst { trustedSymbol } = require('./helpers/query/trusted');\n\nlet Document;\n\nexports.specialProperties = specialProperties;\n\nexports.isMongooseArray = isMongooseArray.isMongooseArray;\nexports.isMongooseDocumentArray = isMongooseDocumentArray.isMongooseDocumentArray;\nexports.registerMongooseArray = isMongooseArray.registerMongooseArray;\nexports.registerMongooseDocumentArray = isMongooseDocumentArray.registerMongooseDocumentArray;\n\n/*!\n * Produces a collection name from model `name`. By default, just returns\n * the model name\n *\n * @param {String} name a model name\n * @param {Function} pluralize function that pluralizes the collection name\n * @return {String} a collection name\n * @api private\n */\n\nexports.toCollectionName = function(name, pluralize) {\n  if (name === 'system.profile') {\n    return name;\n  }\n  if (name === 'system.indexes') {\n    return name;\n  }\n  if (typeof pluralize === 'function') {\n    return pluralize(name);\n  }\n  return name;\n};\n\n/*!\n * Determines if `a` and `b` are deep equal.\n *\n * Modified from node/lib/assert.js\n *\n * @param {any} a a value to compare to `b`\n * @param {any} b a value to compare to `a`\n * @return {Boolean}\n * @api private\n */\n\nexports.deepEqual = function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || typeof b !== 'object') {\n    return a === b;\n  }\n\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n\n  if ((isBsonType(a, 'ObjectID') && isBsonType(b, 'ObjectID')) ||\n      (isBsonType(a, 'Decimal128') && isBsonType(b, 'Decimal128'))) {\n    return a.toString() === b.toString();\n  }\n\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source &&\n        a.ignoreCase === b.ignoreCase &&\n        a.multiline === b.multiline &&\n        a.global === b.global &&\n        a.dotAll === b.dotAll &&\n        a.unicode === b.unicode &&\n        a.sticky === b.sticky &&\n        a.hasIndices === b.hasIndices;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  if (a instanceof Map || b instanceof Map) {\n    if (!(a instanceof Map) || !(b instanceof Map)) {\n      return false;\n    }\n    return deepEqual(Array.from(a.keys()), Array.from(b.keys())) &&\n      deepEqual(Array.from(a.values()), Array.from(b.values()));\n  }\n\n  // Handle MongooseNumbers\n  if (a instanceof Number && b instanceof Number) {\n    return a.valueOf() === b.valueOf();\n  }\n\n  if (Buffer.isBuffer(a)) {\n    return exports.buffer.areEqual(a, b);\n  }\n\n  if (Array.isArray(a) || Array.isArray(b)) {\n    if (!Array.isArray(a) || !Array.isArray(b)) {\n      return false;\n    }\n    const len = a.length;\n    if (len !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < len; ++i) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if (a.$__ != null) {\n    a = a._doc;\n  } else if (isMongooseObject(a)) {\n    a = a.toObject();\n  }\n\n  if (b.$__ != null) {\n    b = b._doc;\n  } else if (isMongooseObject(b)) {\n    b = b.toObject();\n  }\n\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  const kaLength = ka.length;\n\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (kaLength !== kb.length) {\n    return false;\n  }\n\n  // ~~~cheap key test\n  for (let i = kaLength - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) {\n      return false;\n    }\n  }\n\n  // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n  for (const key of ka) {\n    if (!deepEqual(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/*!\n * Get the last element of an array\n */\n\nexports.last = function(arr) {\n  if (arr.length > 0) {\n    return arr[arr.length - 1];\n  }\n  return void 0;\n};\n\nexports.clone = clone;\n\n/*!\n * ignore\n */\n\nexports.promiseOrCallback = promiseOrCallback;\n\n/*!\n * ignore\n */\n\nexports.cloneArrays = function cloneArrays(arr) {\n  if (!Array.isArray(arr)) {\n    return arr;\n  }\n\n  return arr.map(el => exports.cloneArrays(el));\n};\n\n/*!\n * ignore\n */\n\nexports.omit = function omit(obj, keys) {\n  if (keys == null) {\n    return Object.assign({}, obj);\n  }\n  if (!Array.isArray(keys)) {\n    keys = [keys];\n  }\n\n  const ret = Object.assign({}, obj);\n  for (const key of keys) {\n    delete ret[key];\n  }\n  return ret;\n};\n\n\n/*!\n * Shallow copies defaults into options.\n *\n * @param {Object} defaults\n * @param {Object} options\n * @return {Object} the merged object\n * @api private\n */\n\nexports.options = function(defaults, options) {\n  const keys = Object.keys(defaults);\n  let i = keys.length;\n  let k;\n\n  options = options || {};\n\n  while (i--) {\n    k = keys[i];\n    if (!(k in options)) {\n      options[k] = defaults[k];\n    }\n  }\n\n  return options;\n};\n\n/*!\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\nexports.merge = function merge(to, from, options, path) {\n  options = options || {};\n\n  const keys = Object.keys(from);\n  let i = 0;\n  const len = keys.length;\n  let key;\n\n  if (from[trustedSymbol]) {\n    to[trustedSymbol] = from[trustedSymbol];\n  }\n\n  path = path || '';\n  const omitNested = options.omitNested || {};\n\n  while (i < len) {\n    key = keys[i++];\n    if (options.omit && options.omit[key]) {\n      continue;\n    }\n    if (omitNested[path]) {\n      continue;\n    }\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (to[key] == null) {\n      to[key] = from[key];\n    } else if (exports.isObject(from[key])) {\n      if (!exports.isObject(to[key])) {\n        to[key] = {};\n      }\n      if (from[key] != null) {\n        // Skip merging schemas if we're creating a discriminator schema and\n        // base schema has a given path as a single nested but discriminator schema\n        // has the path as a document array, or vice versa (gh-9534)\n        if (options.isDiscriminatorSchemaMerge &&\n            (from[key].$isSingleNested && to[key].$isMongooseDocumentArray) ||\n            (from[key].$isMongooseDocumentArray && to[key].$isSingleNested)) {\n          continue;\n        } else if (from[key].instanceOfSchema) {\n          if (to[key].instanceOfSchema) {\n            schemaMerge(to[key], from[key].clone(), options.isDiscriminatorSchemaMerge);\n          } else {\n            to[key] = from[key].clone();\n          }\n          continue;\n        } else if (isBsonType(from[key], 'ObjectID')) {\n          to[key] = new ObjectId(from[key]);\n          continue;\n        }\n      }\n      merge(to[key], from[key], options, path ? path + '.' + key : key);\n    } else if (options.overwrite) {\n      to[key] = from[key];\n    }\n  }\n};\n\n/*!\n * Applies toObject recursively.\n *\n * @param {Document|Array|Object} obj\n * @return {Object}\n * @api private\n */\n\nexports.toObject = function toObject(obj) {\n  Document || (Document = require('./document'));\n  let ret;\n\n  if (obj == null) {\n    return obj;\n  }\n\n  if (obj instanceof Document) {\n    return obj.toObject();\n  }\n\n  if (Array.isArray(obj)) {\n    ret = [];\n\n    for (const doc of obj) {\n      ret.push(toObject(doc));\n    }\n\n    return ret;\n  }\n\n  if (exports.isPOJO(obj)) {\n    ret = {};\n\n    if (obj[trustedSymbol]) {\n      ret[trustedSymbol] = obj[trustedSymbol];\n    }\n\n    for (const k of Object.keys(obj)) {\n      if (specialProperties.has(k)) {\n        continue;\n      }\n      ret[k] = toObject(obj[k]);\n    }\n\n    return ret;\n  }\n\n  return obj;\n};\n\nexports.isObject = isObject;\n\n/*!\n * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,\n * `arg` must be an object but not an instance of any special class, like String,\n * ObjectId, etc.\n *\n * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nexports.isPOJO = function isPOJO(arg) {\n  if (arg == null || typeof arg !== 'object') {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(arg);\n  // Prototype may be null if you used `Object.create(null)`\n  // Checking `proto`'s constructor is safe because `getPrototypeOf()`\n  // explicitly crosses the boundary from object data to object metadata\n  return !proto || proto.constructor.name === 'Object';\n};\n\n/*!\n * Determines if `arg` is an object that isn't an instance of a built-in value\n * class, like Array, Buffer, ObjectId, etc.\n */\n\nexports.isNonBuiltinObject = function isNonBuiltinObject(val) {\n  return typeof val === 'object' &&\n    !exports.isNativeObject(val) &&\n    !exports.isMongooseType(val) &&\n    val != null;\n};\n\n/*!\n * Determines if `obj` is a built-in object like an array, date, boolean,\n * etc.\n */\n\nexports.isNativeObject = function(arg) {\n  return Array.isArray(arg) ||\n    arg instanceof Date ||\n    arg instanceof Boolean ||\n    arg instanceof Number ||\n    arg instanceof String;\n};\n\n/*!\n * Determines if `val` is an object that has no own keys\n */\n\nexports.isEmptyObject = function(val) {\n  return val != null &&\n    typeof val === 'object' &&\n    Object.keys(val).length === 0;\n};\n\n/*!\n * Search if `obj` or any POJOs nested underneath `obj` has a property named\n * `key`\n */\n\nexports.hasKey = function hasKey(obj, key) {\n  const props = Object.keys(obj);\n  for (const prop of props) {\n    if (prop === key) {\n      return true;\n    }\n    if (exports.isPOJO(obj[prop]) && exports.hasKey(obj[prop], key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/*!\n * process.nextTick helper.\n *\n * Wraps `callback` in a try/catch + nextTick.\n *\n * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.\n *\n * @param {Function} callback\n * @api private\n */\n\nexports.tick = function tick(callback) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n  return function() {\n    try {\n      callback.apply(this, arguments);\n    } catch (err) {\n      // only nextTick on err to get out of\n      // the event loop and avoid state corruption.\n      immediate(function() {\n        throw err;\n      });\n    }\n  };\n};\n\n/*!\n * Returns true if `v` is an object that can be serialized as a primitive in\n * MongoDB\n */\n\nexports.isMongooseType = function(v) {\n  return isBsonType(v, 'ObjectID') || isBsonType(v, 'Decimal128') || v instanceof Buffer;\n};\n\nexports.isMongooseObject = isMongooseObject;\n\n/*!\n * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.\n *\n * @param {Object} object\n * @api private\n */\n\nexports.expires = function expires(object) {\n  if (!(object && object.constructor.name === 'Object')) {\n    return;\n  }\n  if (!('expires' in object)) {\n    return;\n  }\n\n  object.expireAfterSeconds = (typeof object.expires !== 'string')\n    ? object.expires\n    : Math.round(ms(object.expires) / 1000);\n  delete object.expires;\n};\n\n/*!\n * populate helper\n */\n\nexports.populate = function populate(path, select, model, match, options, subPopulate, justOne, count) {\n  // might have passed an object specifying all arguments\n  let obj = null;\n  if (arguments.length === 1) {\n    if (path instanceof PopulateOptions) {\n      // If reusing old populate docs, avoid reusing `_docs` because that may\n      // lead to bugs and memory leaks. See gh-11641\n      path._docs = [];\n      path._childDocs = [];\n      return [path];\n    }\n\n    if (Array.isArray(path)) {\n      const singles = makeSingles(path);\n      return singles.map(o => exports.populate(o)[0]);\n    }\n\n    if (exports.isObject(path)) {\n      obj = Object.assign({}, path);\n    } else {\n      obj = { path: path };\n    }\n  } else if (typeof model === 'object') {\n    obj = {\n      path: path,\n      select: select,\n      match: model,\n      options: match\n    };\n  } else {\n    obj = {\n      path: path,\n      select: select,\n      model: model,\n      match: match,\n      options: options,\n      populate: subPopulate,\n      justOne: justOne,\n      count: count\n    };\n  }\n\n  if (typeof obj.path !== 'string') {\n    throw new TypeError('utils.populate: invalid path. Expected string. Got typeof `' + typeof path + '`');\n  }\n\n  return _populateObj(obj);\n\n  // The order of select/conditions args is opposite Model.find but\n  // necessary to keep backward compatibility (select could be\n  // an array, string, or object literal).\n  function makeSingles(arr) {\n    const ret = [];\n    arr.forEach(function(obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const paths = obj.path.split(' ');\n        paths.forEach(function(p) {\n          const copy = Object.assign({}, obj);\n          copy.path = p;\n          ret.push(copy);\n        });\n      } else {\n        ret.push(obj);\n      }\n    });\n\n    return ret;\n  }\n};\n\nfunction _populateObj(obj) {\n  if (Array.isArray(obj.populate)) {\n    const ret = [];\n    obj.populate.forEach(function(obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const copy = Object.assign({}, obj);\n        const paths = copy.path.split(' ');\n        paths.forEach(function(p) {\n          copy.path = p;\n          ret.push(exports.populate(copy)[0]);\n        });\n      } else {\n        ret.push(exports.populate(obj)[0]);\n      }\n    });\n    obj.populate = exports.populate(ret);\n  } else if (obj.populate != null && typeof obj.populate === 'object') {\n    obj.populate = exports.populate(obj.populate);\n  }\n\n  const ret = [];\n  const paths = obj.path.split(' ');\n  if (obj.options != null) {\n    obj.options = exports.clone(obj.options);\n  }\n\n  for (const path of paths) {\n    ret.push(new PopulateOptions(Object.assign({}, obj, { path: path })));\n  }\n\n  return ret;\n}\n\n/*!\n * Return the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Object} obj\n */\n\nexports.getValue = function(path, obj, map) {\n  return mpath.get(path, obj, '_doc', map);\n};\n\n/*!\n * Sets the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} obj\n */\n\nexports.setValue = function(path, val, obj, map, _copying) {\n  mpath.set(path, val, obj, '_doc', map, _copying);\n};\n\n/*!\n * Returns an array of values from object `o`.\n *\n * @param {Object} o\n * @return {Array}\n * @private\n */\n\nexports.object = {};\nexports.object.vals = function vals(o) {\n  const keys = Object.keys(o);\n  let i = keys.length;\n  const ret = [];\n\n  while (i--) {\n    ret.push(o[keys[i]]);\n  }\n\n  return ret;\n};\n\n/*!\n * @see exports.options\n */\n\nexports.object.shallowCopy = exports.options;\n\n/*!\n * Safer helper for hasOwnProperty checks\n *\n * @param {Object} obj\n * @param {String} prop\n */\n\nconst hop = Object.prototype.hasOwnProperty;\nexports.object.hasOwnProperty = function(obj, prop) {\n  return hop.call(obj, prop);\n};\n\n/*!\n * Determine if `val` is null or undefined\n *\n * @return {Boolean}\n */\n\nexports.isNullOrUndefined = function(val) {\n  return val === null || val === undefined;\n};\n\n/*!\n * ignore\n */\n\nexports.array = {};\n\n/*!\n * Flattens an array.\n *\n * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]\n *\n * @param {Array} arr\n * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.\n * @return {Array}\n * @private\n */\n\nexports.array.flatten = function flatten(arr, filter, ret) {\n  ret || (ret = []);\n\n  arr.forEach(function(item) {\n    if (Array.isArray(item)) {\n      flatten(item, filter, ret);\n    } else {\n      if (!filter || filter(item)) {\n        ret.push(item);\n      }\n    }\n  });\n\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexports.hasUserDefinedProperty = function(obj, key) {\n  if (obj == null) {\n    return false;\n  }\n\n  if (Array.isArray(key)) {\n    for (const k of key) {\n      if (exports.hasUserDefinedProperty(obj, k)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if (_hasOwnProperty.call(obj, key)) {\n    return true;\n  }\n  if (typeof obj === 'object' && key in obj) {\n    const v = obj[key];\n    return v !== Object.prototype[key] && v !== Array.prototype[key];\n  }\n\n  return false;\n};\n\n/*!\n * ignore\n */\n\nconst MAX_ARRAY_INDEX = Math.pow(2, 32) - 1;\n\nexports.isArrayIndex = function(val) {\n  if (typeof val === 'number') {\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n  if (typeof val === 'string') {\n    if (!/^\\d+$/.test(val)) {\n      return false;\n    }\n    val = +val;\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n\n  return false;\n};\n\n/*!\n * Removes duplicate values from an array\n *\n * [1, 2, 3, 3, 5] => [1, 2, 3, 5]\n * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]\n *    => [ObjectId(\"550988ba0c19d57f697dc45e\")]\n *\n * @param {Array} arr\n * @return {Array}\n * @private\n */\n\nexports.array.unique = function(arr) {\n  const primitives = new Set();\n  const ids = new Set();\n  const ret = [];\n\n  for (const item of arr) {\n    if (typeof item === 'number' || typeof item === 'string' || item == null) {\n      if (primitives.has(item)) {\n        continue;\n      }\n      ret.push(item);\n      primitives.add(item);\n    } else if (isBsonType(item, 'ObjectID')) {\n      if (ids.has(item.toString())) {\n        continue;\n      }\n      ret.push(item);\n      ids.add(item.toString());\n    } else {\n      ret.push(item);\n    }\n  }\n\n  return ret;\n};\n\n/*!\n * Determines if two buffers are equal.\n *\n * @param {Buffer} a\n * @param {Object} b\n */\n\nexports.buffer = {};\nexports.buffer.areEqual = function(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    return false;\n  }\n  if (!Buffer.isBuffer(b)) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0, len = a.length; i < len; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.getFunctionName = getFunctionName;\n/*!\n * Decorate buffers\n */\n\nexports.decorate = function(destination, source) {\n  for (const key in source) {\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    destination[key] = source[key];\n  }\n};\n\n/**\n * merges to with a copy of from\n *\n * @param {Object} to\n * @param {Object} fromObj\n * @api private\n */\n\nexports.mergeClone = function(to, fromObj) {\n  if (isMongooseObject(fromObj)) {\n    fromObj = fromObj.toObject({\n      transform: false,\n      virtuals: false,\n      depopulate: true,\n      getters: false,\n      flattenDecimals: false\n    });\n  }\n  const keys = Object.keys(fromObj);\n  const len = keys.length;\n  let i = 0;\n  let key;\n\n  while (i < len) {\n    key = keys[i++];\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (typeof to[key] === 'undefined') {\n      to[key] = exports.clone(fromObj[key], {\n        transform: false,\n        virtuals: false,\n        depopulate: true,\n        getters: false,\n        flattenDecimals: false\n      });\n    } else {\n      let val = fromObj[key];\n      if (val != null && val.valueOf && !(val instanceof Date)) {\n        val = val.valueOf();\n      }\n      if (exports.isObject(val)) {\n        let obj = val;\n        if (isMongooseObject(val) && !val.isMongooseBuffer) {\n          obj = obj.toObject({\n            transform: false,\n            virtuals: false,\n            depopulate: true,\n            getters: false,\n            flattenDecimals: false\n          });\n        }\n        if (val.isMongooseBuffer) {\n          obj = Buffer.from(obj);\n        }\n        exports.mergeClone(to[key], obj);\n      } else {\n        to[key] = exports.clone(val, {\n          flattenDecimals: false\n        });\n      }\n    }\n  }\n};\n\n/**\n * Executes a function on each element of an array (like _.each)\n *\n * @param {Array} arr\n * @param {Function} fn\n * @api private\n */\n\nexports.each = function(arr, fn) {\n  for (const item of arr) {\n    fn(item);\n  }\n};\n\n/*!\n * ignore\n */\n\nexports.getOption = function(name) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n\n  for (const source of sources) {\n    if (source[name] != null) {\n      return source[name];\n    }\n  }\n\n  return null;\n};\n\n/*!\n * ignore\n */\n\nexports.noop = function() {};\n\nexports.errorToPOJO = function errorToPOJO(error) {\n  const isError = error instanceof Error;\n  if (!isError) {\n    throw new Error('`error` must be `instanceof Error`.');\n  }\n\n  const ret = {};\n  for (const properyName of Object.getOwnPropertyNames(error)) {\n    ret[properyName] = error[properyName];\n  }\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nexports.warn = function warn(message) {\n  return process.emitWarning(message, { code: 'MONGOOSE' });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}