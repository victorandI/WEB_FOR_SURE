{"ast":null,"code":"'use strict';\n\nconst middlewareFunctions = require('../query/applyQueryMiddleware').middlewareFunctions;\n\nconst promiseOrCallback = require('../promiseOrCallback');\n\nmodule.exports = function applyStaticHooks(model, hooks, statics) {\n  const kareemOptions = {\n    useErrorHandlers: true,\n    numCallbackParams: 1\n  };\n  hooks = hooks.filter(hook => {\n    // If the custom static overwrites an existing query middleware, don't apply\n    // middleware to it by default. This avoids a potential backwards breaking\n    // change with plugins like `mongoose-delete` that use statics to overwrite\n    // built-in Mongoose functions.\n    if (middlewareFunctions.indexOf(hook.name) !== -1) {\n      return !!hook.model;\n    }\n\n    return hook.model !== false;\n  });\n  model.$__insertMany = hooks.createWrapper('insertMany', model.$__insertMany, model, kareemOptions);\n\n  for (const key of Object.keys(statics)) {\n    if (hooks.hasHooks(key)) {\n      const original = model[key];\n\n      model[key] = function () {\n        const numArgs = arguments.length;\n        const lastArg = numArgs > 0 ? arguments[numArgs - 1] : null;\n        const cb = typeof lastArg === 'function' ? lastArg : null;\n        const args = Array.prototype.slice.call(arguments, 0, cb == null ? numArgs : numArgs - 1); // Special case: can't use `Kareem#wrap()` because it doesn't currently\n        // support wrapped functions that return a promise.\n\n        return promiseOrCallback(cb, callback => {\n          hooks.execPre(key, model, args, function (err) {\n            if (err != null) {\n              return callback(err);\n            }\n\n            let postCalled = 0;\n            const ret = original.apply(model, args.concat(post));\n\n            if (ret != null && typeof ret.then === 'function') {\n              ret.then(res => post(null, res), err => post(err));\n            }\n\n            function post(error, res) {\n              if (postCalled++ > 0) {\n                return;\n              }\n\n              if (error != null) {\n                return callback(error);\n              }\n\n              hooks.execPost(key, model, [res], function (error) {\n                if (error != null) {\n                  return callback(error);\n                }\n\n                callback(null, res);\n              });\n            }\n          });\n        }, model.events);\n      };\n    }\n  }\n};","map":{"version":3,"names":["middlewareFunctions","require","promiseOrCallback","module","exports","applyStaticHooks","model","hooks","statics","kareemOptions","useErrorHandlers","numCallbackParams","filter","hook","indexOf","name","$__insertMany","createWrapper","key","Object","keys","hasHooks","original","numArgs","arguments","length","lastArg","cb","args","Array","prototype","slice","call","callback","execPre","err","postCalled","ret","apply","concat","post","then","res","error","execPost","events"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/model/applyStaticHooks.js"],"sourcesContent":["'use strict';\n\nconst middlewareFunctions = require('../query/applyQueryMiddleware').middlewareFunctions;\nconst promiseOrCallback = require('../promiseOrCallback');\n\nmodule.exports = function applyStaticHooks(model, hooks, statics) {\n  const kareemOptions = {\n    useErrorHandlers: true,\n    numCallbackParams: 1\n  };\n\n  hooks = hooks.filter(hook => {\n    // If the custom static overwrites an existing query middleware, don't apply\n    // middleware to it by default. This avoids a potential backwards breaking\n    // change with plugins like `mongoose-delete` that use statics to overwrite\n    // built-in Mongoose functions.\n    if (middlewareFunctions.indexOf(hook.name) !== -1) {\n      return !!hook.model;\n    }\n    return hook.model !== false;\n  });\n\n  model.$__insertMany = hooks.createWrapper('insertMany',\n    model.$__insertMany, model, kareemOptions);\n\n  for (const key of Object.keys(statics)) {\n    if (hooks.hasHooks(key)) {\n      const original = model[key];\n\n      model[key] = function() {\n        const numArgs = arguments.length;\n        const lastArg = numArgs > 0 ? arguments[numArgs - 1] : null;\n        const cb = typeof lastArg === 'function' ? lastArg : null;\n        const args = Array.prototype.slice.\n          call(arguments, 0, cb == null ? numArgs : numArgs - 1);\n        // Special case: can't use `Kareem#wrap()` because it doesn't currently\n        // support wrapped functions that return a promise.\n        return promiseOrCallback(cb, callback => {\n          hooks.execPre(key, model, args, function(err) {\n            if (err != null) {\n              return callback(err);\n            }\n\n            let postCalled = 0;\n            const ret = original.apply(model, args.concat(post));\n            if (ret != null && typeof ret.then === 'function') {\n              ret.then(res => post(null, res), err => post(err));\n            }\n\n            function post(error, res) {\n              if (postCalled++ > 0) {\n                return;\n              }\n\n              if (error != null) {\n                return callback(error);\n              }\n\n              hooks.execPost(key, model, [res], function(error) {\n                if (error != null) {\n                  return callback(error);\n                }\n                callback(null, res);\n              });\n            }\n          });\n        }, model.events);\n      };\n    }\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}