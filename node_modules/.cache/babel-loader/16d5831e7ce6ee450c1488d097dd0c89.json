{"ast":null,"code":"'use strict';\n\nconst utils = require('../../utils');\n/*!\n * If populating a path within a document array, make sure each\n * subdoc within the array knows its subpaths are populated.\n *\n * #### Example:\n *     const doc = await Article.findOne().populate('comments.author');\n *     doc.comments[0].populated('author'); // Should be set\n */\n\n\nmodule.exports = function markArraySubdocsPopulated(doc, populated) {\n  if (doc._id == null || populated == null || populated.length === 0) {\n    return;\n  }\n\n  const id = String(doc._id);\n\n  for (const item of populated) {\n    if (item.isVirtual) {\n      continue;\n    }\n\n    const path = item.path;\n    const pieces = path.split('.');\n\n    for (let i = 0; i < pieces.length - 1; ++i) {\n      const subpath = pieces.slice(0, i + 1).join('.');\n      const rest = pieces.slice(i + 1).join('.');\n      const val = doc.get(subpath);\n\n      if (val == null) {\n        continue;\n      }\n\n      if (utils.isMongooseDocumentArray(val)) {\n        for (let j = 0; j < val.length; ++j) {\n          val[j].populated(rest, item._docs[id] == null ? void 0 : item._docs[id][j], item);\n        }\n\n        break;\n      }\n    }\n  }\n};","map":{"version":3,"names":["utils","require","module","exports","markArraySubdocsPopulated","doc","populated","_id","length","id","String","item","isVirtual","path","pieces","split","i","subpath","slice","join","rest","val","get","isMongooseDocumentArray","j","_docs"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/populate/markArraySubdocsPopulated.js"],"sourcesContent":["'use strict';\n\nconst utils = require('../../utils');\n\n/*!\n * If populating a path within a document array, make sure each\n * subdoc within the array knows its subpaths are populated.\n *\n * #### Example:\n *     const doc = await Article.findOne().populate('comments.author');\n *     doc.comments[0].populated('author'); // Should be set\n */\n\nmodule.exports = function markArraySubdocsPopulated(doc, populated) {\n  if (doc._id == null || populated == null || populated.length === 0) {\n    return;\n  }\n\n  const id = String(doc._id);\n  for (const item of populated) {\n    if (item.isVirtual) {\n      continue;\n    }\n    const path = item.path;\n    const pieces = path.split('.');\n    for (let i = 0; i < pieces.length - 1; ++i) {\n      const subpath = pieces.slice(0, i + 1).join('.');\n      const rest = pieces.slice(i + 1).join('.');\n      const val = doc.get(subpath);\n      if (val == null) {\n        continue;\n      }\n\n      if (utils.isMongooseDocumentArray(val)) {\n        for (let j = 0; j < val.length; ++j) {\n          val[j].populated(rest, item._docs[id] == null ? void 0 : item._docs[id][j], item);\n        }\n        break;\n      }\n    }\n  }\n};"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,yBAAT,CAAmCC,GAAnC,EAAwCC,SAAxC,EAAmD;EAClE,IAAID,GAAG,CAACE,GAAJ,IAAW,IAAX,IAAmBD,SAAS,IAAI,IAAhC,IAAwCA,SAAS,CAACE,MAAV,KAAqB,CAAjE,EAAoE;IAClE;EACD;;EAED,MAAMC,EAAE,GAAGC,MAAM,CAACL,GAAG,CAACE,GAAL,CAAjB;;EACA,KAAK,MAAMI,IAAX,IAAmBL,SAAnB,EAA8B;IAC5B,IAAIK,IAAI,CAACC,SAAT,EAAoB;MAClB;IACD;;IACD,MAAMC,IAAI,GAAGF,IAAI,CAACE,IAAlB;IACA,MAAMC,MAAM,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAf;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACN,MAAP,GAAgB,CAApC,EAAuC,EAAEQ,CAAzC,EAA4C;MAC1C,MAAMC,OAAO,GAAGH,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBF,CAAC,GAAG,CAApB,EAAuBG,IAAvB,CAA4B,GAA5B,CAAhB;MACA,MAAMC,IAAI,GAAGN,MAAM,CAACI,KAAP,CAAaF,CAAC,GAAG,CAAjB,EAAoBG,IAApB,CAAyB,GAAzB,CAAb;MACA,MAAME,GAAG,GAAGhB,GAAG,CAACiB,GAAJ,CAAQL,OAAR,CAAZ;;MACA,IAAII,GAAG,IAAI,IAAX,EAAiB;QACf;MACD;;MAED,IAAIrB,KAAK,CAACuB,uBAAN,CAA8BF,GAA9B,CAAJ,EAAwC;QACtC,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACb,MAAxB,EAAgC,EAAEgB,CAAlC,EAAqC;UACnCH,GAAG,CAACG,CAAD,CAAH,CAAOlB,SAAP,CAAiBc,IAAjB,EAAuBT,IAAI,CAACc,KAAL,CAAWhB,EAAX,KAAkB,IAAlB,GAAyB,KAAK,CAA9B,GAAkCE,IAAI,CAACc,KAAL,CAAWhB,EAAX,EAAee,CAAf,CAAzD,EAA4Eb,IAA5E;QACD;;QACD;MACD;IACF;EACF;AACF,CA5BD"},"metadata":{},"sourceType":"script"}