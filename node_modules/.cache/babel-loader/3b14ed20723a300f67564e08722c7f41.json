{"ast":null,"code":"'use strict';\n/*!\n * Behaves like `Schema#path()`, except for it also digs into arrays without\n * needing to put `.0.`, so `getPath(schema, 'docArr.elProp')` works.\n */\n\nconst numberRE = /^\\d+$/;\n\nmodule.exports = function getPath(schema, path) {\n  let schematype = schema.path(path);\n\n  if (schematype != null) {\n    return schematype;\n  }\n\n  const pieces = path.split('.');\n  let cur = '';\n  let isArray = false;\n\n  for (const piece of pieces) {\n    if (isArray && numberRE.test(piece)) {\n      continue;\n    }\n\n    cur = cur.length === 0 ? piece : cur + '.' + piece;\n    schematype = schema.path(cur);\n\n    if (schematype != null && schematype.schema) {\n      schema = schematype.schema;\n      cur = '';\n\n      if (!isArray && schematype.$isMongooseDocumentArray) {\n        isArray = true;\n      }\n    }\n  }\n\n  return schematype;\n};","map":{"version":3,"names":["numberRE","module","exports","getPath","schema","path","schematype","pieces","split","cur","isArray","piece","test","length","$isMongooseDocumentArray"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/schema/getPath.js"],"sourcesContent":["'use strict';\n\n/*!\n * Behaves like `Schema#path()`, except for it also digs into arrays without\n * needing to put `.0.`, so `getPath(schema, 'docArr.elProp')` works.\n */\n\nconst numberRE = /^\\d+$/;\n\nmodule.exports = function getPath(schema, path) {\n  let schematype = schema.path(path);\n  if (schematype != null) {\n    return schematype;\n  }\n\n  const pieces = path.split('.');\n  let cur = '';\n  let isArray = false;\n\n  for (const piece of pieces) {\n    if (isArray && numberRE.test(piece)) {\n      continue;\n    }\n    cur = cur.length === 0 ? piece : cur + '.' + piece;\n\n    schematype = schema.path(cur);\n    if (schematype != null && schematype.schema) {\n      schema = schematype.schema;\n      cur = '';\n      if (!isArray && schematype.$isMongooseDocumentArray) {\n        isArray = true;\n      }\n    }\n  }\n\n  return schematype;\n};"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAG,OAAjB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+B;EAC9C,IAAIC,UAAU,GAAGF,MAAM,CAACC,IAAP,CAAYA,IAAZ,CAAjB;;EACA,IAAIC,UAAU,IAAI,IAAlB,EAAwB;IACtB,OAAOA,UAAP;EACD;;EAED,MAAMC,MAAM,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAf;EACA,IAAIC,GAAG,GAAG,EAAV;EACA,IAAIC,OAAO,GAAG,KAAd;;EAEA,KAAK,MAAMC,KAAX,IAAoBJ,MAApB,EAA4B;IAC1B,IAAIG,OAAO,IAAIV,QAAQ,CAACY,IAAT,CAAcD,KAAd,CAAf,EAAqC;MACnC;IACD;;IACDF,GAAG,GAAGA,GAAG,CAACI,MAAJ,KAAe,CAAf,GAAmBF,KAAnB,GAA2BF,GAAG,GAAG,GAAN,GAAYE,KAA7C;IAEAL,UAAU,GAAGF,MAAM,CAACC,IAAP,CAAYI,GAAZ,CAAb;;IACA,IAAIH,UAAU,IAAI,IAAd,IAAsBA,UAAU,CAACF,MAArC,EAA6C;MAC3CA,MAAM,GAAGE,UAAU,CAACF,MAApB;MACAK,GAAG,GAAG,EAAN;;MACA,IAAI,CAACC,OAAD,IAAYJ,UAAU,CAACQ,wBAA3B,EAAqD;QACnDJ,OAAO,GAAG,IAAV;MACD;IACF;EACF;;EAED,OAAOJ,UAAP;AACD,CA3BD"},"metadata":{},"sourceType":"script"}