{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\web_car_react-main (2)\\\\web_car_react-main\\\\src\\\\component\\\\login\\\\login.js\",\n    _s = $RefreshSig$();\n\n/*import './login.css';\nimport { useState, useEffect } from 'react';\n\nconst Login = (props) => {\n    const [login, setLogin] = useState();\n    const [password, setPassword] = useState();\n    const [passwordValid, setPasswordValid] = useState(false);\n\n    const onChangeLogin = (event) => {\n        setLogin(event.target.value);\n    }\n\n    const onChangePassword = (event) => {\n        setPassword(event.target.value);\n    }\n    \n    useEffect(() => {\n        setPasswordValid(false);\n    }, [password])\n\n    const find_user_id = async (login) => {\n        \n        //console.log(data)\n        const res = await fetch(\"http://127.0.0.1:5000/\" + login, \n        {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }});\n        let lol2 = '';\n        if(res.ok){\n            lol2 = await res.json();\n            console.log(lol2.idUser)\n            localStorage.setItem('idUser', lol2.idUser);\n            localStorage.setItem('user_status', lol2.user_status);\n            window.location.reload();\n        }else{\n            alert(\"Could not verify\")\n        }  \n    }\n    const sentRequest = async () => {\n        if (password.length >= 5) {\n            const data = new URLSearchParams();\n            data.append('login', login);\n            data.append('password', password);\n            const res = await fetch(\"http://127.0.0.1:5000/login\",\n                {\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/x-www-form-urlencoded'\n                    },\n                    body: data.toString()\n                });\n            let lol = '';\n            if (res.ok) {\n                lol = await res.json();\n                localStorage.setItem('token', lol);\n                find_user_id(login)\n                //window.location.reload();\n            } else {\n                localStorage.setItem('token', null);\n                alert(\"Could not verify\")\n            }\n            console.log(lol);\n        }\n    }\n\n\n    /*const sentRequest = async () => {\n       if(password.length >= 5){\n            const data = { \"login\":login, \"password\":password};\n            //console.log(data)\n           const res = await fetch(\"http://127.0.0.1:5000/login\", \n            {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body:JSON.stringify(data)});\n            let lol = '';\n            if(res.ok){\n                lol = await res.json();\n                localStorage.setItem('token', lol);\n                find_user_id(login)\n                //window.location.reload();\n            }else{\n                localStorage.setItem('token', null);\n                alert(\"Could not verify\")\n            }  \n            console.log(lol);\n        }\n\n    }*/\n\n/*return (\n    <main className=\"main_login\">\n        <div className=\"main_head_login\">\n            <div className=\"main_section_login\">\n                <div className=\"login\">\n                <h2>Welcome back</h2>\n                <input id = \"login\" type=\"text\" placeholder=\"Username\" onChange={onChangeLogin}/>\n                <input id = \"password\" type=\"password\" placeholder=\"Password\" onChange={onChangePassword}/>\n                {passwordValid && <p>Please enter your password &gt; 4</p>}\n                <button type='submit' id = \"log_button\" onClick={sentRequest}>Login</button>\n                </div>\n            </div>\n        </div>\n    </main>\n)\n}\nexport default Login;\n*/\nimport './login.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordValid, setPasswordValid] = useState(false);\n\n  const onChangeLogin = event => {\n    setLogin(event.target.value);\n  };\n\n  const onChangePassword = event => {\n    setPassword(event.target.value);\n    setPasswordValid(event.target.value.length < 5);\n  };\n\n  const findUserId = async login => {\n    const res = await fetch(`http://127.0.0.1:5000/${login}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n\n    if (res.ok) {\n      const {\n        idUser,\n        user_status\n      } = await res.json();\n      localStorage.setItem('idUser', idUser);\n      localStorage.setItem('user_status', user_status);\n      window.location.reload();\n    } else {\n      alert(\"Could not verify\");\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password.length >= 5) {\n      const data = new URLSearchParams();\n      data.append('login', login);\n      data.append('password', password);\n      const res = await fetch(\"http://127.0.0.1:5000/login\", {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        body: data.toString()\n      });\n\n      if (res.ok) {\n        const token = await res.json();\n        localStorage.setItem('token', token);\n        findUserId(login);\n      } else {\n        localStorage.setItem('token', null);\n        alert(\"Could not verify\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main_login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_head_login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_section_login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"login\",\n            type: \"text\",\n            placeholder: \"Username\",\n            onChange: onChangeLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            onChange: onChangePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), passwordValid && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter your password > 4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"log_button\",\n            onClick: sentRequest,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"fr5wk40Sy9XUh0P2wIFWyn37yHQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Login","props","login","setLogin","password","setPassword","passwordValid","setPasswordValid","onChangeLogin","event","target","value","onChangePassword","length","findUserId","res","fetch","method","headers","localStorage","getItem","ok","idUser","user_status","json","setItem","window","location","reload","alert","handleSubmit","preventDefault","data","URLSearchParams","append","body","toString","token","sentRequest"],"sources":["C:/Users/User/Downloads/web_car_react-main (2)/web_car_react-main/src/component/login/login.js"],"sourcesContent":["/*import './login.css';\nimport { useState, useEffect } from 'react';\n\nconst Login = (props) => {\n    const [login, setLogin] = useState();\n    const [password, setPassword] = useState();\n    const [passwordValid, setPasswordValid] = useState(false);\n\n    const onChangeLogin = (event) => {\n        setLogin(event.target.value);\n    }\n\n    const onChangePassword = (event) => {\n        setPassword(event.target.value);\n    }\n    \n    useEffect(() => {\n        setPasswordValid(false);\n    }, [password])\n\n    const find_user_id = async (login) => {\n        \n        //console.log(data)\n        const res = await fetch(\"http://127.0.0.1:5000/\" + login, \n        {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }});\n        let lol2 = '';\n        if(res.ok){\n            lol2 = await res.json();\n            console.log(lol2.idUser)\n            localStorage.setItem('idUser', lol2.idUser);\n            localStorage.setItem('user_status', lol2.user_status);\n            window.location.reload();\n        }else{\n            alert(\"Could not verify\")\n        }  \n    }\n    const sentRequest = async () => {\n        if (password.length >= 5) {\n            const data = new URLSearchParams();\n            data.append('login', login);\n            data.append('password', password);\n            const res = await fetch(\"http://127.0.0.1:5000/login\",\n                {\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/x-www-form-urlencoded'\n                    },\n                    body: data.toString()\n                });\n            let lol = '';\n            if (res.ok) {\n                lol = await res.json();\n                localStorage.setItem('token', lol);\n                find_user_id(login)\n                //window.location.reload();\n            } else {\n                localStorage.setItem('token', null);\n                alert(\"Could not verify\")\n            }\n            console.log(lol);\n        }\n    }\n\n\n    /*const sentRequest = async () => {\n       if(password.length >= 5){\n            const data = { \"login\":login, \"password\":password};\n            //console.log(data)\n           const res = await fetch(\"http://127.0.0.1:5000/login\", \n            {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body:JSON.stringify(data)});\n            let lol = '';\n            if(res.ok){\n                lol = await res.json();\n                localStorage.setItem('token', lol);\n                find_user_id(login)\n                //window.location.reload();\n            }else{\n                localStorage.setItem('token', null);\n                alert(\"Could not verify\")\n            }  \n            console.log(lol);\n        }\n\n    }*/\n    /*return (\n        <main className=\"main_login\">\n            <div className=\"main_head_login\">\n                <div className=\"main_section_login\">\n                    <div className=\"login\">\n                    <h2>Welcome back</h2>\n                    <input id = \"login\" type=\"text\" placeholder=\"Username\" onChange={onChangeLogin}/>\n                    <input id = \"password\" type=\"password\" placeholder=\"Password\" onChange={onChangePassword}/>\n                    {passwordValid && <p>Please enter your password &gt; 4</p>}\n                    <button type='submit' id = \"log_button\" onClick={sentRequest}>Login</button>\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Login;\n*/\n\nimport './login.css';\nimport { useState } from 'react';\n\nconst Login = (props) => {\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordValid, setPasswordValid] = useState(false);\n\n    const onChangeLogin = (event) => {\n        setLogin(event.target.value);\n    };\n\n    const onChangePassword = (event) => {\n        setPassword(event.target.value);\n        setPasswordValid(event.target.value.length < 5);\n    };\n\n    const findUserId = async (login) => {\n        const res = await fetch(`http://127.0.0.1:5000/${login}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        });\n\n        if (res.ok) {\n            const { idUser, user_status } = await res.json();\n            localStorage.setItem('idUser', idUser);\n            localStorage.setItem('user_status', user_status);\n            window.location.reload();\n        } else {\n            alert(\"Could not verify\");\n        }\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (password.length >= 5) {\n            const data = new URLSearchParams();\n            data.append('login', login);\n            data.append('password', password);\n            const res = await fetch(\"http://127.0.0.1:5000/login\", {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/x-www-form-urlencoded'\n                },\n                body: data.toString()\n            });\n\n            if (res.ok) {\n                const token = await res.json();\n                localStorage.setItem('token', token);\n                findUserId(login);\n            } else {\n                localStorage.setItem('token', null);\n                alert(\"Could not verify\");\n            }\n        }\n    };\n\n    return (\n        <main className=\"main_login\">\n            <div className=\"main_head_login\">\n                <div className=\"main_section_login\">\n                    <div className=\"login\">\n                        <h2>Welcome back</h2>\n                        <input id=\"login\" type=\"text\" placeholder=\"Username\" onChange={onChangeLogin} />\n                        <input id=\"password\" type=\"password\" placeholder=\"Password\" onChange={onChangePassword} />\n                        {passwordValid && <p>Please enter your password &gt; 4</p>}\n                        <button type='submit' id=\"log_button\" onClick={sentRequest}>Login</button>\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Login;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAO,aAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAAA;;EACrB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;;EAEA,MAAMS,aAAa,GAAIC,KAAD,IAAW;IAC7BN,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;EACH,CAFD;;EAIA,MAAMC,gBAAgB,GAAIH,KAAD,IAAW;IAChCJ,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;IACAJ,gBAAgB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBE,MAAnB,GAA4B,CAA7B,CAAhB;EACH,CAHD;;EAKA,MAAMC,UAAU,GAAG,MAAOZ,KAAP,IAAiB;IAChC,MAAMa,GAAG,GAAG,MAAMC,KAAK,CAAE,yBAAwBd,KAAM,EAAhC,EAAmC;MACtDe,MAAM,EAAE,KAD8C;MAEtDC,OAAO,EAAE;QACL,iBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;MADpD;IAF6C,CAAnC,CAAvB;;IAOA,IAAIL,GAAG,CAACM,EAAR,EAAY;MACR,MAAM;QAAEC,MAAF;QAAUC;MAAV,IAA0B,MAAMR,GAAG,CAACS,IAAJ,EAAtC;MACAL,YAAY,CAACM,OAAb,CAAqB,QAArB,EAA+BH,MAA/B;MACAH,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoCF,WAApC;MACAG,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACH,CALD,MAKO;MACHC,KAAK,CAAC,kBAAD,CAAL;IACH;EACJ,CAhBD;;EAkBA,MAAMC,YAAY,GAAG,MAAOrB,KAAP,IAAiB;IAClCA,KAAK,CAACsB,cAAN;;IACA,IAAI3B,QAAQ,CAACS,MAAT,IAAmB,CAAvB,EAA0B;MACtB,MAAMmB,IAAI,GAAG,IAAIC,eAAJ,EAAb;MACAD,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBhC,KAArB;MACA8B,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwB9B,QAAxB;MACA,MAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;QACnDC,MAAM,EAAE,MAD2C;QAEnDC,OAAO,EAAE;UACL,gBAAgB;QADX,CAF0C;QAKnDiB,IAAI,EAAEH,IAAI,CAACI,QAAL;MAL6C,CAAhC,CAAvB;;MAQA,IAAIrB,GAAG,CAACM,EAAR,EAAY;QACR,MAAMgB,KAAK,GAAG,MAAMtB,GAAG,CAACS,IAAJ,EAApB;QACAL,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BY,KAA9B;QACAvB,UAAU,CAACZ,KAAD,CAAV;MACH,CAJD,MAIO;QACHiB,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8B,IAA9B;QACAI,KAAK,CAAC,kBAAD,CAAL;MACH;IACJ;EACJ,CAvBD;;EAyBA,oBACI;IAAM,SAAS,EAAC,YAAhB;IAAA,uBACI;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACI;QAAK,SAAS,EAAC,oBAAf;QAAA,uBACI;UAAK,SAAS,EAAC,OAAf;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAO,EAAE,EAAC,OAAV;YAAkB,IAAI,EAAC,MAAvB;YAA8B,WAAW,EAAC,UAA1C;YAAqD,QAAQ,EAAErB;UAA/D;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAO,EAAE,EAAC,UAAV;YAAqB,IAAI,EAAC,UAA1B;YAAqC,WAAW,EAAC,UAAjD;YAA4D,QAAQ,EAAEI;UAAtE;YAAA;YAAA;YAAA;UAAA,QAHJ,EAIKN,aAAa,iBAAI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJtB,eAKI;YAAQ,IAAI,EAAC,QAAb;YAAsB,EAAE,EAAC,YAAzB;YAAsC,OAAO,EAAEgC,WAA/C;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CAxED;;GAAMtC,K;;KAAAA,K;AA0EN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}