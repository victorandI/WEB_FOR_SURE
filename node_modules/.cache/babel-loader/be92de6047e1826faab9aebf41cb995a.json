{"ast":null,"code":"'use strict';\n\nconst SkipPopulateValue = require('./SkipPopulateValue');\n\nconst parentPaths = require('../path/parentPaths');\n\nconst {\n  trusted\n} = require('../query/trusted');\n\nmodule.exports = function createPopulateQueryFilter(ids, _match, _foreignField, model, skipInvalidIds) {\n  const match = _formatMatch(_match);\n\n  if (_foreignField.size === 1) {\n    const foreignField = Array.from(_foreignField)[0];\n    const foreignSchemaType = model.schema.path(foreignField);\n\n    if (foreignField !== '_id' || !match['_id']) {\n      ids = _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds);\n      match[foreignField] = trusted({\n        $in: ids\n      });\n    }\n\n    const _parentPaths = parentPaths(foreignField);\n\n    for (let i = 0; i < _parentPaths.length - 1; ++i) {\n      const cur = _parentPaths[i];\n\n      if (match[cur] != null && match[cur].$elemMatch != null) {\n        match[cur].$elemMatch[foreignField.slice(cur.length + 1)] = trusted({\n          $in: ids\n        });\n        delete match[foreignField];\n        break;\n      }\n    }\n  } else {\n    const $or = [];\n\n    if (Array.isArray(match.$or)) {\n      match.$and = [{\n        $or: match.$or\n      }, {\n        $or: $or\n      }];\n      delete match.$or;\n    } else {\n      match.$or = $or;\n    }\n\n    for (const foreignField of _foreignField) {\n      if (foreignField !== '_id' || !match['_id']) {\n        const foreignSchemaType = model.schema.path(foreignField);\n        ids = _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds);\n        $or.push({\n          [foreignField]: {\n            $in: ids\n          }\n        });\n      }\n    }\n  }\n\n  return match;\n};\n/*!\n * Optionally filter out invalid ids that don't conform to foreign field's schema\n * to avoid cast errors (gh-7706)\n */\n\n\nfunction _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds) {\n  ids = ids.filter(v => !(v instanceof SkipPopulateValue));\n\n  if (!skipInvalidIds) {\n    return ids;\n  }\n\n  return ids.filter(id => {\n    try {\n      foreignSchemaType.cast(id);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  });\n}\n/*!\n * Format `mod.match` given that it may be an array that we need to $or if\n * the client has multiple docs with match functions\n */\n\n\nfunction _formatMatch(match) {\n  if (Array.isArray(match)) {\n    if (match.length > 1) {\n      return {\n        $or: [].concat(match.map(m => Object.assign({}, m)))\n      };\n    }\n\n    return Object.assign({}, match[0]);\n  }\n\n  return Object.assign({}, match);\n}","map":{"version":3,"names":["SkipPopulateValue","require","parentPaths","trusted","module","exports","createPopulateQueryFilter","ids","_match","_foreignField","model","skipInvalidIds","match","_formatMatch","size","foreignField","Array","from","foreignSchemaType","schema","path","_filterInvalidIds","$in","_parentPaths","i","length","cur","$elemMatch","slice","$or","isArray","$and","push","filter","v","id","cast","err","concat","map","m","Object","assign"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/populate/createPopulateQueryFilter.js"],"sourcesContent":["'use strict';\n\nconst SkipPopulateValue = require('./SkipPopulateValue');\nconst parentPaths = require('../path/parentPaths');\nconst { trusted } = require('../query/trusted');\n\nmodule.exports = function createPopulateQueryFilter(ids, _match, _foreignField, model, skipInvalidIds) {\n  const match = _formatMatch(_match);\n\n  if (_foreignField.size === 1) {\n    const foreignField = Array.from(_foreignField)[0];\n    const foreignSchemaType = model.schema.path(foreignField);\n    if (foreignField !== '_id' || !match['_id']) {\n      ids = _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds);\n      match[foreignField] = trusted({ $in: ids });\n    }\n\n    const _parentPaths = parentPaths(foreignField);\n    for (let i = 0; i < _parentPaths.length - 1; ++i) {\n      const cur = _parentPaths[i];\n      if (match[cur] != null && match[cur].$elemMatch != null) {\n        match[cur].$elemMatch[foreignField.slice(cur.length + 1)] = trusted({ $in: ids });\n        delete match[foreignField];\n        break;\n      }\n    }\n  } else {\n    const $or = [];\n    if (Array.isArray(match.$or)) {\n      match.$and = [{ $or: match.$or }, { $or: $or }];\n      delete match.$or;\n    } else {\n      match.$or = $or;\n    }\n    for (const foreignField of _foreignField) {\n      if (foreignField !== '_id' || !match['_id']) {\n        const foreignSchemaType = model.schema.path(foreignField);\n        ids = _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds);\n        $or.push({ [foreignField]: { $in: ids } });\n      }\n    }\n  }\n\n  return match;\n};\n\n/*!\n * Optionally filter out invalid ids that don't conform to foreign field's schema\n * to avoid cast errors (gh-7706)\n */\n\nfunction _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds) {\n  ids = ids.filter(v => !(v instanceof SkipPopulateValue));\n  if (!skipInvalidIds) {\n    return ids;\n  }\n  return ids.filter(id => {\n    try {\n      foreignSchemaType.cast(id);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  });\n}\n\n/*!\n * Format `mod.match` given that it may be an array that we need to $or if\n * the client has multiple docs with match functions\n */\n\nfunction _formatMatch(match) {\n  if (Array.isArray(match)) {\n    if (match.length > 1) {\n      return { $or: [].concat(match.map(m => Object.assign({}, m))) };\n    }\n    return Object.assign({}, match[0]);\n  }\n  return Object.assign({}, match);\n}"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,qBAAD,CAA3B;;AACA,MAAM;EAAEE;AAAF,IAAcF,OAAO,CAAC,kBAAD,CAA3B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,yBAAT,CAAmCC,GAAnC,EAAwCC,MAAxC,EAAgDC,aAAhD,EAA+DC,KAA/D,EAAsEC,cAAtE,EAAsF;EACrG,MAAMC,KAAK,GAAGC,YAAY,CAACL,MAAD,CAA1B;;EAEA,IAAIC,aAAa,CAACK,IAAd,KAAuB,CAA3B,EAA8B;IAC5B,MAAMC,YAAY,GAAGC,KAAK,CAACC,IAAN,CAAWR,aAAX,EAA0B,CAA1B,CAArB;IACA,MAAMS,iBAAiB,GAAGR,KAAK,CAACS,MAAN,CAAaC,IAAb,CAAkBL,YAAlB,CAA1B;;IACA,IAAIA,YAAY,KAAK,KAAjB,IAA0B,CAACH,KAAK,CAAC,KAAD,CAApC,EAA6C;MAC3CL,GAAG,GAAGc,iBAAiB,CAACd,GAAD,EAAMW,iBAAN,EAAyBP,cAAzB,CAAvB;MACAC,KAAK,CAACG,YAAD,CAAL,GAAsBZ,OAAO,CAAC;QAAEmB,GAAG,EAAEf;MAAP,CAAD,CAA7B;IACD;;IAED,MAAMgB,YAAY,GAAGrB,WAAW,CAACa,YAAD,CAAhC;;IACA,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACE,MAAb,GAAsB,CAA1C,EAA6C,EAAED,CAA/C,EAAkD;MAChD,MAAME,GAAG,GAAGH,YAAY,CAACC,CAAD,CAAxB;;MACA,IAAIZ,KAAK,CAACc,GAAD,CAAL,IAAc,IAAd,IAAsBd,KAAK,CAACc,GAAD,CAAL,CAAWC,UAAX,IAAyB,IAAnD,EAAyD;QACvDf,KAAK,CAACc,GAAD,CAAL,CAAWC,UAAX,CAAsBZ,YAAY,CAACa,KAAb,CAAmBF,GAAG,CAACD,MAAJ,GAAa,CAAhC,CAAtB,IAA4DtB,OAAO,CAAC;UAAEmB,GAAG,EAAEf;QAAP,CAAD,CAAnE;QACA,OAAOK,KAAK,CAACG,YAAD,CAAZ;QACA;MACD;IACF;EACF,CAjBD,MAiBO;IACL,MAAMc,GAAG,GAAG,EAAZ;;IACA,IAAIb,KAAK,CAACc,OAAN,CAAclB,KAAK,CAACiB,GAApB,CAAJ,EAA8B;MAC5BjB,KAAK,CAACmB,IAAN,GAAa,CAAC;QAAEF,GAAG,EAAEjB,KAAK,CAACiB;MAAb,CAAD,EAAqB;QAAEA,GAAG,EAAEA;MAAP,CAArB,CAAb;MACA,OAAOjB,KAAK,CAACiB,GAAb;IACD,CAHD,MAGO;MACLjB,KAAK,CAACiB,GAAN,GAAYA,GAAZ;IACD;;IACD,KAAK,MAAMd,YAAX,IAA2BN,aAA3B,EAA0C;MACxC,IAAIM,YAAY,KAAK,KAAjB,IAA0B,CAACH,KAAK,CAAC,KAAD,CAApC,EAA6C;QAC3C,MAAMM,iBAAiB,GAAGR,KAAK,CAACS,MAAN,CAAaC,IAAb,CAAkBL,YAAlB,CAA1B;QACAR,GAAG,GAAGc,iBAAiB,CAACd,GAAD,EAAMW,iBAAN,EAAyBP,cAAzB,CAAvB;QACAkB,GAAG,CAACG,IAAJ,CAAS;UAAE,CAACjB,YAAD,GAAgB;YAAEO,GAAG,EAAEf;UAAP;QAAlB,CAAT;MACD;IACF;EACF;;EAED,OAAOK,KAAP;AACD,CAtCD;AAwCA;AACA;AACA;AACA;;;AAEA,SAASS,iBAAT,CAA2Bd,GAA3B,EAAgCW,iBAAhC,EAAmDP,cAAnD,EAAmE;EACjEJ,GAAG,GAAGA,GAAG,CAAC0B,MAAJ,CAAWC,CAAC,IAAI,EAAEA,CAAC,YAAYlC,iBAAf,CAAhB,CAAN;;EACA,IAAI,CAACW,cAAL,EAAqB;IACnB,OAAOJ,GAAP;EACD;;EACD,OAAOA,GAAG,CAAC0B,MAAJ,CAAWE,EAAE,IAAI;IACtB,IAAI;MACFjB,iBAAiB,CAACkB,IAAlB,CAAuBD,EAAvB;MACA,OAAO,IAAP;IACD,CAHD,CAGE,OAAOE,GAAP,EAAY;MACZ,OAAO,KAAP;IACD;EACF,CAPM,CAAP;AAQD;AAED;AACA;AACA;AACA;;;AAEA,SAASxB,YAAT,CAAsBD,KAAtB,EAA6B;EAC3B,IAAII,KAAK,CAACc,OAAN,CAAclB,KAAd,CAAJ,EAA0B;IACxB,IAAIA,KAAK,CAACa,MAAN,GAAe,CAAnB,EAAsB;MACpB,OAAO;QAAEI,GAAG,EAAE,GAAGS,MAAH,CAAU1B,KAAK,CAAC2B,GAAN,CAAUC,CAAC,IAAIC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,CAAlB,CAAf,CAAV;MAAP,CAAP;IACD;;IACD,OAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB9B,KAAK,CAAC,CAAD,CAAvB,CAAP;EACD;;EACD,OAAO6B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB9B,KAAlB,CAAP;AACD"},"metadata":{},"sourceType":"script"}