{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst STATES = require('./connectionstate');\n\nconst immediate = require('./helpers/immediate');\n/**\n * Abstract Collection constructor\n *\n * This is the base class that drivers inherit from and implement.\n *\n * @param {String} name name of the collection\n * @param {Connection} conn A MongooseConnection instance\n * @param {Object} opts optional collection options\n * @api public\n */\n\n\nfunction Collection(name, conn, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  this.opts = opts;\n  this.name = name;\n  this.collectionName = name;\n  this.conn = conn;\n  this.queue = [];\n  this.buffer = true;\n  this.emitter = new EventEmitter();\n\n  if (STATES.connected === this.conn.readyState) {\n    this.onOpen();\n  }\n}\n/**\n * The collection name\n *\n * @api public\n * @property name\n */\n\n\nCollection.prototype.name;\n/**\n * The collection name\n *\n * @api public\n * @property collectionName\n */\n\nCollection.prototype.collectionName;\n/**\n * The Connection instance\n *\n * @api public\n * @property conn\n */\n\nCollection.prototype.conn;\n/**\n * Called when the database connects\n *\n * @api private\n */\n\nCollection.prototype.onOpen = function () {\n  this.buffer = false;\n  immediate(() => this.doQueue());\n};\n/**\n * Called when the database disconnects\n *\n * @api private\n */\n\n\nCollection.prototype.onClose = function () {};\n/**\n * Queues a method for later execution when its\n * database connection opens.\n *\n * @param {String} name name of the method to queue\n * @param {Array} args arguments to pass to the method when executed\n * @api private\n */\n\n\nCollection.prototype.addQueue = function (name, args) {\n  this.queue.push([name, args]);\n  return this;\n};\n/**\n * Removes a queued method\n *\n * @param {String} name name of the method to queue\n * @param {Array} args arguments to pass to the method when executed\n * @api private\n */\n\n\nCollection.prototype.removeQueue = function (name, args) {\n  const index = this.queue.findIndex(v => v[0] === name && v[1] === args);\n\n  if (index === -1) {\n    return false;\n  }\n\n  this.queue.splice(index, 1);\n  return true;\n};\n/**\n * Executes all queued methods and clears the queue.\n *\n * @api private\n */\n\n\nCollection.prototype.doQueue = function () {\n  for (const method of this.queue) {\n    if (typeof method[0] === 'function') {\n      method[0].apply(this, method[1]);\n    } else {\n      this[method[0]].apply(this, method[1]);\n    }\n  }\n\n  this.queue = [];\n\n  const _this = this;\n\n  immediate(function () {\n    _this.emitter.emit('queue');\n  });\n  return this;\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.ensureIndex = function () {\n  throw new Error('Collection#ensureIndex unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.createIndex = function () {\n  throw new Error('Collection#createIndex unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.findAndModify = function () {\n  throw new Error('Collection#findAndModify unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.findOneAndUpdate = function () {\n  throw new Error('Collection#findOneAndUpdate unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.findOneAndDelete = function () {\n  throw new Error('Collection#findOneAndDelete unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.findOneAndReplace = function () {\n  throw new Error('Collection#findOneAndReplace unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.findOne = function () {\n  throw new Error('Collection#findOne unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.find = function () {\n  throw new Error('Collection#find unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.insert = function () {\n  throw new Error('Collection#insert unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.insertOne = function () {\n  throw new Error('Collection#insertOne unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.insertMany = function () {\n  throw new Error('Collection#insertMany unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.save = function () {\n  throw new Error('Collection#save unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.update = function () {\n  throw new Error('Collection#update unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.getIndexes = function () {\n  throw new Error('Collection#getIndexes unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.mapReduce = function () {\n  throw new Error('Collection#mapReduce unimplemented by driver');\n};\n/**\n * Abstract method that drivers must implement.\n */\n\n\nCollection.prototype.watch = function () {\n  throw new Error('Collection#watch unimplemented by driver');\n};\n/*!\n * ignore\n */\n\n\nCollection.prototype._shouldBufferCommands = function _shouldBufferCommands() {\n  const opts = this.opts;\n\n  if (opts.bufferCommands != null) {\n    return opts.bufferCommands;\n  }\n\n  if (opts && opts.schemaUserProvidedOptions != null && opts.schemaUserProvidedOptions.bufferCommands != null) {\n    return opts.schemaUserProvidedOptions.bufferCommands;\n  }\n\n  return this.conn._shouldBufferCommands();\n};\n/*!\n * ignore\n */\n\n\nCollection.prototype._getBufferTimeoutMS = function _getBufferTimeoutMS() {\n  const conn = this.conn;\n  const opts = this.opts;\n\n  if (opts.bufferTimeoutMS != null) {\n    return opts.bufferTimeoutMS;\n  }\n\n  if (opts && opts.schemaUserProvidedOptions != null && opts.schemaUserProvidedOptions.bufferTimeoutMS != null) {\n    return opts.schemaUserProvidedOptions.bufferTimeoutMS;\n  }\n\n  if (conn.config.bufferTimeoutMS != null) {\n    return conn.config.bufferTimeoutMS;\n  }\n\n  if (conn.base != null && conn.base.get('bufferTimeoutMS') != null) {\n    return conn.base.get('bufferTimeoutMS');\n  }\n\n  return 10000;\n};\n/*!\n * Module exports.\n */\n\n\nmodule.exports = Collection;","map":{"version":3,"names":["EventEmitter","require","STATES","immediate","Collection","name","conn","opts","collectionName","queue","buffer","emitter","connected","readyState","onOpen","prototype","doQueue","onClose","addQueue","args","push","removeQueue","index","findIndex","v","splice","method","apply","_this","emit","ensureIndex","Error","createIndex","findAndModify","findOneAndUpdate","findOneAndDelete","findOneAndReplace","findOne","find","insert","insertOne","insertMany","save","update","getIndexes","mapReduce","watch","_shouldBufferCommands","bufferCommands","schemaUserProvidedOptions","_getBufferTimeoutMS","bufferTimeoutMS","config","base","get","module","exports"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/collection.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst EventEmitter = require('events').EventEmitter;\nconst STATES = require('./connectionstate');\nconst immediate = require('./helpers/immediate');\n\n/**\n * Abstract Collection constructor\n *\n * This is the base class that drivers inherit from and implement.\n *\n * @param {String} name name of the collection\n * @param {Connection} conn A MongooseConnection instance\n * @param {Object} opts optional collection options\n * @api public\n */\n\nfunction Collection(name, conn, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  this.opts = opts;\n  this.name = name;\n  this.collectionName = name;\n  this.conn = conn;\n  this.queue = [];\n  this.buffer = true;\n  this.emitter = new EventEmitter();\n\n  if (STATES.connected === this.conn.readyState) {\n    this.onOpen();\n  }\n}\n\n/**\n * The collection name\n *\n * @api public\n * @property name\n */\n\nCollection.prototype.name;\n\n/**\n * The collection name\n *\n * @api public\n * @property collectionName\n */\n\nCollection.prototype.collectionName;\n\n/**\n * The Connection instance\n *\n * @api public\n * @property conn\n */\n\nCollection.prototype.conn;\n\n/**\n * Called when the database connects\n *\n * @api private\n */\n\nCollection.prototype.onOpen = function() {\n  this.buffer = false;\n  immediate(() => this.doQueue());\n};\n\n/**\n * Called when the database disconnects\n *\n * @api private\n */\n\nCollection.prototype.onClose = function() {};\n\n/**\n * Queues a method for later execution when its\n * database connection opens.\n *\n * @param {String} name name of the method to queue\n * @param {Array} args arguments to pass to the method when executed\n * @api private\n */\n\nCollection.prototype.addQueue = function(name, args) {\n  this.queue.push([name, args]);\n  return this;\n};\n\n/**\n * Removes a queued method\n *\n * @param {String} name name of the method to queue\n * @param {Array} args arguments to pass to the method when executed\n * @api private\n */\n\nCollection.prototype.removeQueue = function(name, args) {\n  const index = this.queue.findIndex(v => v[0] === name && v[1] === args);\n  if (index === -1) {\n    return false;\n  }\n  this.queue.splice(index, 1);\n  return true;\n};\n\n/**\n * Executes all queued methods and clears the queue.\n *\n * @api private\n */\n\nCollection.prototype.doQueue = function() {\n  for (const method of this.queue) {\n    if (typeof method[0] === 'function') {\n      method[0].apply(this, method[1]);\n    } else {\n      this[method[0]].apply(this, method[1]);\n    }\n  }\n  this.queue = [];\n  const _this = this;\n  immediate(function() {\n    _this.emitter.emit('queue');\n  });\n  return this;\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.ensureIndex = function() {\n  throw new Error('Collection#ensureIndex unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.createIndex = function() {\n  throw new Error('Collection#createIndex unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findAndModify = function() {\n  throw new Error('Collection#findAndModify unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findOneAndUpdate = function() {\n  throw new Error('Collection#findOneAndUpdate unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findOneAndDelete = function() {\n  throw new Error('Collection#findOneAndDelete unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findOneAndReplace = function() {\n  throw new Error('Collection#findOneAndReplace unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findOne = function() {\n  throw new Error('Collection#findOne unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.find = function() {\n  throw new Error('Collection#find unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.insert = function() {\n  throw new Error('Collection#insert unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.insertOne = function() {\n  throw new Error('Collection#insertOne unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.insertMany = function() {\n  throw new Error('Collection#insertMany unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.save = function() {\n  throw new Error('Collection#save unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.update = function() {\n  throw new Error('Collection#update unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.getIndexes = function() {\n  throw new Error('Collection#getIndexes unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.mapReduce = function() {\n  throw new Error('Collection#mapReduce unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.watch = function() {\n  throw new Error('Collection#watch unimplemented by driver');\n};\n\n/*!\n * ignore\n */\n\nCollection.prototype._shouldBufferCommands = function _shouldBufferCommands() {\n  const opts = this.opts;\n\n  if (opts.bufferCommands != null) {\n    return opts.bufferCommands;\n  }\n  if (opts && opts.schemaUserProvidedOptions != null && opts.schemaUserProvidedOptions.bufferCommands != null) {\n    return opts.schemaUserProvidedOptions.bufferCommands;\n  }\n\n  return this.conn._shouldBufferCommands();\n};\n\n/*!\n * ignore\n */\n\nCollection.prototype._getBufferTimeoutMS = function _getBufferTimeoutMS() {\n  const conn = this.conn;\n  const opts = this.opts;\n\n  if (opts.bufferTimeoutMS != null) {\n    return opts.bufferTimeoutMS;\n  }\n  if (opts && opts.schemaUserProvidedOptions != null && opts.schemaUserProvidedOptions.bufferTimeoutMS != null) {\n    return opts.schemaUserProvidedOptions.bufferTimeoutMS;\n  }\n  if (conn.config.bufferTimeoutMS != null) {\n    return conn.config.bufferTimeoutMS;\n  }\n  if (conn.base != null && conn.base.get('bufferTimeoutMS') != null) {\n    return conn.base.get('bufferTimeoutMS');\n  }\n  return 10000;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = Collection;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}