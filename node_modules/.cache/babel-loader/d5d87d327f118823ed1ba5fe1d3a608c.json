{"ast":null,"code":"'use strict';\n/*!\n * ignore\n */\n\nconst MongooseMap = require('../types/map');\n\nconst SchemaMapOptions = require('../options/SchemaMapOptions');\n\nconst SchemaType = require('../schematype');\n/*!\n * ignore\n */\n\n\nclass Map extends SchemaType {\n  constructor(key, options) {\n    super(key, options, 'Map');\n    this.$isSchemaMap = true;\n  }\n\n  set(option, value) {\n    return SchemaType.set(option, value);\n  }\n\n  cast(val, doc, init) {\n    if (val instanceof MongooseMap) {\n      return val;\n    }\n\n    const path = this.path;\n\n    if (init) {\n      const map = new MongooseMap({}, path, doc, this.$__schemaType);\n\n      if (val instanceof global.Map) {\n        for (const key of val.keys()) {\n          let _val = val.get(key);\n\n          if (_val == null) {\n            _val = map.$__schemaType._castNullish(_val);\n          } else {\n            _val = map.$__schemaType.cast(_val, doc, true, null, {\n              path: path + '.' + key\n            });\n          }\n\n          map.$init(key, _val);\n        }\n      } else {\n        for (const key of Object.keys(val)) {\n          let _val = val[key];\n\n          if (_val == null) {\n            _val = map.$__schemaType._castNullish(_val);\n          } else {\n            _val = map.$__schemaType.cast(_val, doc, true, null, {\n              path: path + '.' + key\n            });\n          }\n\n          map.$init(key, _val);\n        }\n      }\n\n      return map;\n    }\n\n    return new MongooseMap(val, path, doc, this.$__schemaType);\n  }\n\n  clone() {\n    const schematype = super.clone();\n\n    if (this.$__schemaType != null) {\n      schematype.$__schemaType = this.$__schemaType.clone();\n    }\n\n    return schematype;\n  }\n\n}\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\n\n\nMap.schemaName = 'Map';\nMap.prototype.OptionsConstructor = SchemaMapOptions;\nMap.defaultOptions = {};\nmodule.exports = Map;","map":{"version":3,"names":["MongooseMap","require","SchemaMapOptions","SchemaType","Map","constructor","key","options","$isSchemaMap","set","option","value","cast","val","doc","init","path","map","$__schemaType","global","keys","_val","get","_castNullish","$init","Object","clone","schematype","schemaName","prototype","OptionsConstructor","defaultOptions","module","exports"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/schema/map.js"],"sourcesContent":["'use strict';\n\n/*!\n * ignore\n */\n\nconst MongooseMap = require('../types/map');\nconst SchemaMapOptions = require('../options/SchemaMapOptions');\nconst SchemaType = require('../schematype');\n/*!\n * ignore\n */\n\nclass Map extends SchemaType {\n  constructor(key, options) {\n    super(key, options, 'Map');\n    this.$isSchemaMap = true;\n  }\n\n  set(option, value) {\n    return SchemaType.set(option, value);\n  }\n\n  cast(val, doc, init) {\n    if (val instanceof MongooseMap) {\n      return val;\n    }\n\n    const path = this.path;\n\n    if (init) {\n      const map = new MongooseMap({}, path, doc, this.$__schemaType);\n\n      if (val instanceof global.Map) {\n        for (const key of val.keys()) {\n          let _val = val.get(key);\n          if (_val == null) {\n            _val = map.$__schemaType._castNullish(_val);\n          } else {\n            _val = map.$__schemaType.cast(_val, doc, true, null, { path: path + '.' + key });\n          }\n          map.$init(key, _val);\n        }\n      } else {\n        for (const key of Object.keys(val)) {\n          let _val = val[key];\n          if (_val == null) {\n            _val = map.$__schemaType._castNullish(_val);\n          } else {\n            _val = map.$__schemaType.cast(_val, doc, true, null, { path: path + '.' + key });\n          }\n          map.$init(key, _val);\n        }\n      }\n\n      return map;\n    }\n\n    return new MongooseMap(val, path, doc, this.$__schemaType);\n  }\n\n  clone() {\n    const schematype = super.clone();\n\n    if (this.$__schemaType != null) {\n      schematype.$__schemaType = this.$__schemaType.clone();\n    }\n    return schematype;\n  }\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nMap.schemaName = 'Map';\n\nMap.prototype.OptionsConstructor = SchemaMapOptions;\n\nMap.defaultOptions = {};\n\nmodule.exports = Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}