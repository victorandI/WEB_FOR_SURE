{"ast":null,"code":"'use strict';\n\nconst CastError = require('../../error/cast');\n\nconst castBoolean = require('../../cast/boolean');\n\nconst castString = require('../../cast/string');\n/*!\n * Casts val to an object suitable for `$text`. Throws an error if the object\n * can't be casted.\n *\n * @param {Any} val value to cast\n * @param {String} [path] path to associate with any errors that occured\n * @return {Object} casted object\n * @see https://docs.mongodb.com/manual/reference/operator/query/text/\n * @api private\n */\n\n\nmodule.exports = function (val, path) {\n  if (val == null || typeof val !== 'object') {\n    throw new CastError('$text', val, path);\n  }\n\n  if (val.$search != null) {\n    val.$search = castString(val.$search, path + '.$search');\n  }\n\n  if (val.$language != null) {\n    val.$language = castString(val.$language, path + '.$language');\n  }\n\n  if (val.$caseSensitive != null) {\n    val.$caseSensitive = castBoolean(val.$caseSensitive, path + '.$castSensitive');\n  }\n\n  if (val.$diacriticSensitive != null) {\n    val.$diacriticSensitive = castBoolean(val.$diacriticSensitive, path + '.$diacriticSensitive');\n  }\n\n  return val;\n};","map":{"version":3,"names":["CastError","require","castBoolean","castString","module","exports","val","path","$search","$language","$caseSensitive","$diacriticSensitive"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/schema/operators/text.js"],"sourcesContent":["'use strict';\n\nconst CastError = require('../../error/cast');\nconst castBoolean = require('../../cast/boolean');\nconst castString = require('../../cast/string');\n\n/*!\n * Casts val to an object suitable for `$text`. Throws an error if the object\n * can't be casted.\n *\n * @param {Any} val value to cast\n * @param {String} [path] path to associate with any errors that occured\n * @return {Object} casted object\n * @see https://docs.mongodb.com/manual/reference/operator/query/text/\n * @api private\n */\n\nmodule.exports = function(val, path) {\n  if (val == null || typeof val !== 'object') {\n    throw new CastError('$text', val, path);\n  }\n\n  if (val.$search != null) {\n    val.$search = castString(val.$search, path + '.$search');\n  }\n  if (val.$language != null) {\n    val.$language = castString(val.$language, path + '.$language');\n  }\n  if (val.$caseSensitive != null) {\n    val.$caseSensitive = castBoolean(val.$caseSensitive,\n      path + '.$castSensitive');\n  }\n  if (val.$diacriticSensitive != null) {\n    val.$diacriticSensitive = castBoolean(val.$diacriticSensitive,\n      path + '.$diacriticSensitive');\n  }\n\n  return val;\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,mBAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,IAAd,EAAoB;EACnC,IAAID,GAAG,IAAI,IAAP,IAAe,OAAOA,GAAP,KAAe,QAAlC,EAA4C;IAC1C,MAAM,IAAIN,SAAJ,CAAc,OAAd,EAAuBM,GAAvB,EAA4BC,IAA5B,CAAN;EACD;;EAED,IAAID,GAAG,CAACE,OAAJ,IAAe,IAAnB,EAAyB;IACvBF,GAAG,CAACE,OAAJ,GAAcL,UAAU,CAACG,GAAG,CAACE,OAAL,EAAcD,IAAI,GAAG,UAArB,CAAxB;EACD;;EACD,IAAID,GAAG,CAACG,SAAJ,IAAiB,IAArB,EAA2B;IACzBH,GAAG,CAACG,SAAJ,GAAgBN,UAAU,CAACG,GAAG,CAACG,SAAL,EAAgBF,IAAI,GAAG,YAAvB,CAA1B;EACD;;EACD,IAAID,GAAG,CAACI,cAAJ,IAAsB,IAA1B,EAAgC;IAC9BJ,GAAG,CAACI,cAAJ,GAAqBR,WAAW,CAACI,GAAG,CAACI,cAAL,EAC9BH,IAAI,GAAG,iBADuB,CAAhC;EAED;;EACD,IAAID,GAAG,CAACK,mBAAJ,IAA2B,IAA/B,EAAqC;IACnCL,GAAG,CAACK,mBAAJ,GAA0BT,WAAW,CAACI,GAAG,CAACK,mBAAL,EACnCJ,IAAI,GAAG,sBAD4B,CAArC;EAED;;EAED,OAAOD,GAAP;AACD,CArBD"},"metadata":{},"sourceType":"script"}