{"ast":null,"code":"'use strict';\n\nconst getDiscriminatorByValue = require('../../helpers/discriminator/getDiscriminatorByValue');\n\nconst applyTimestampsToChildren = require('../update/applyTimestampsToChildren');\n\nconst applyTimestampsToUpdate = require('../update/applyTimestampsToUpdate');\n\nconst cast = require('../../cast');\n\nconst castUpdate = require('../query/castUpdate');\n\nconst setDefaultsOnInsert = require('../setDefaultsOnInsert');\n/*!\n * Given a model and a bulkWrite op, return a thunk that handles casting and\n * validating the individual op.\n */\n\n\nmodule.exports = function castBulkWrite(originalModel, op, options) {\n  const now = originalModel.base.now();\n\n  if (op['insertOne']) {\n    return callback => {\n      const model = decideModelByObject(originalModel, op['insertOne']['document']);\n      const doc = new model(op['insertOne']['document']);\n\n      if (model.schema.options.timestamps) {\n        doc.initializeTimestamps();\n      }\n\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n\n      op['insertOne']['document'] = doc;\n\n      if (options.skipValidation || op['insertOne'].skipValidation) {\n        callback(null);\n        return;\n      }\n\n      op['insertOne']['document'].$validate({\n        __noPromise: true\n      }, function (error) {\n        if (error) {\n          return callback(error, null);\n        }\n\n        callback(null);\n      });\n    };\n  } else if (op['updateOne']) {\n    return callback => {\n      try {\n        if (!op['updateOne']['filter']) {\n          throw new Error('Must provide a filter object.');\n        }\n\n        if (!op['updateOne']['update']) {\n          throw new Error('Must provide an update object.');\n        }\n\n        const model = decideModelByObject(originalModel, op['updateOne']['filter']);\n        const schema = model.schema;\n        const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n        _addDiscriminatorToObject(schema, op['updateOne']['filter']);\n\n        if (model.schema.$timestamps != null && op['updateOne'].timestamps !== false) {\n          const createdAt = model.schema.$timestamps.createdAt;\n          const updatedAt = model.schema.$timestamps.updatedAt;\n          applyTimestampsToUpdate(now, createdAt, updatedAt, op['updateOne']['update'], {});\n        }\n\n        applyTimestampsToChildren(now, op['updateOne']['update'], model.schema);\n\n        if (op['updateOne'].setDefaultsOnInsert !== false) {\n          setDefaultsOnInsert(op['updateOne']['filter'], model.schema, op['updateOne']['update'], {\n            setDefaultsOnInsert: true,\n            upsert: op['updateOne'].upsert\n          });\n        }\n\n        op['updateOne']['filter'] = cast(model.schema, op['updateOne']['filter'], {\n          strict: strict,\n          upsert: op['updateOne'].upsert\n        });\n        op['updateOne']['update'] = castUpdate(model.schema, op['updateOne']['update'], {\n          strict: strict,\n          overwrite: false,\n          upsert: op['updateOne'].upsert\n        }, model, op['updateOne']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['updateMany']) {\n    return callback => {\n      try {\n        if (!op['updateMany']['filter']) {\n          throw new Error('Must provide a filter object.');\n        }\n\n        if (!op['updateMany']['update']) {\n          throw new Error('Must provide an update object.');\n        }\n\n        const model = decideModelByObject(originalModel, op['updateMany']['filter']);\n        const schema = model.schema;\n        const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n        if (op['updateMany'].setDefaultsOnInsert !== false) {\n          setDefaultsOnInsert(op['updateMany']['filter'], model.schema, op['updateMany']['update'], {\n            setDefaultsOnInsert: true,\n            upsert: op['updateMany'].upsert\n          });\n        }\n\n        if (model.schema.$timestamps != null && op['updateMany'].timestamps !== false) {\n          const createdAt = model.schema.$timestamps.createdAt;\n          const updatedAt = model.schema.$timestamps.updatedAt;\n          applyTimestampsToUpdate(now, createdAt, updatedAt, op['updateMany']['update'], {});\n        }\n\n        applyTimestampsToChildren(now, op['updateMany']['update'], model.schema);\n\n        _addDiscriminatorToObject(schema, op['updateMany']['filter']);\n\n        op['updateMany']['filter'] = cast(model.schema, op['updateMany']['filter'], {\n          strict: strict,\n          upsert: op['updateMany'].upsert\n        });\n        op['updateMany']['update'] = castUpdate(model.schema, op['updateMany']['update'], {\n          strict: strict,\n          overwrite: false,\n          upsert: op['updateMany'].upsert\n        }, model, op['updateMany']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['replaceOne']) {\n    return callback => {\n      const model = decideModelByObject(originalModel, op['replaceOne']['filter']);\n      const schema = model.schema;\n      const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n      _addDiscriminatorToObject(schema, op['replaceOne']['filter']);\n\n      try {\n        op['replaceOne']['filter'] = cast(model.schema, op['replaceOne']['filter'], {\n          strict: strict,\n          upsert: op['replaceOne'].upsert\n        });\n      } catch (error) {\n        return callback(error, null);\n      } // set `skipId`, otherwise we get \"_id field cannot be changed\"\n\n\n      const doc = new model(op['replaceOne']['replacement'], strict, true);\n\n      if (model.schema.options.timestamps) {\n        doc.initializeTimestamps();\n      }\n\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n\n      op['replaceOne']['replacement'] = doc;\n\n      if (options.skipValidation || op['replaceOne'].skipValidation) {\n        op['replaceOne']['replacement'] = op['replaceOne']['replacement'].toBSON();\n        callback(null);\n        return;\n      }\n\n      op['replaceOne']['replacement'].$validate({\n        __noPromise: true\n      }, function (error) {\n        if (error) {\n          return callback(error, null);\n        }\n\n        op['replaceOne']['replacement'] = op['replaceOne']['replacement'].toBSON();\n        callback(null);\n      });\n    };\n  } else if (op['deleteOne']) {\n    return callback => {\n      const model = decideModelByObject(originalModel, op['deleteOne']['filter']);\n      const schema = model.schema;\n\n      _addDiscriminatorToObject(schema, op['deleteOne']['filter']);\n\n      try {\n        op['deleteOne']['filter'] = cast(model.schema, op['deleteOne']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['deleteMany']) {\n    return callback => {\n      const model = decideModelByObject(originalModel, op['deleteMany']['filter']);\n      const schema = model.schema;\n\n      _addDiscriminatorToObject(schema, op['deleteMany']['filter']);\n\n      try {\n        op['deleteMany']['filter'] = cast(model.schema, op['deleteMany']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else {\n    return callback => {\n      callback(new Error('Invalid op passed to `bulkWrite()`'), null);\n    };\n  }\n};\n\nfunction _addDiscriminatorToObject(schema, obj) {\n  if (schema == null) {\n    return;\n  }\n\n  if (schema.discriminatorMapping && !schema.discriminatorMapping.isRoot) {\n    obj[schema.discriminatorMapping.key] = schema.discriminatorMapping.value;\n  }\n}\n/*!\n * gets discriminator model if discriminator key is present in object\n */\n\n\nfunction decideModelByObject(model, object) {\n  const discriminatorKey = model.schema.options.discriminatorKey;\n\n  if (object != null && object.hasOwnProperty(discriminatorKey)) {\n    model = getDiscriminatorByValue(model.discriminators, object[discriminatorKey]) || model;\n  }\n\n  return model;\n}","map":{"version":3,"names":["getDiscriminatorByValue","require","applyTimestampsToChildren","applyTimestampsToUpdate","cast","castUpdate","setDefaultsOnInsert","module","exports","castBulkWrite","originalModel","op","options","now","base","callback","model","decideModelByObject","doc","schema","timestamps","initializeTimestamps","session","$session","skipValidation","$validate","__noPromise","error","Error","strict","_addDiscriminatorToObject","$timestamps","createdAt","updatedAt","upsert","overwrite","toBSON","obj","discriminatorMapping","isRoot","key","value","object","discriminatorKey","hasOwnProperty","discriminators"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/model/castBulkWrite.js"],"sourcesContent":["'use strict';\n\nconst getDiscriminatorByValue = require('../../helpers/discriminator/getDiscriminatorByValue');\nconst applyTimestampsToChildren = require('../update/applyTimestampsToChildren');\nconst applyTimestampsToUpdate = require('../update/applyTimestampsToUpdate');\nconst cast = require('../../cast');\nconst castUpdate = require('../query/castUpdate');\nconst setDefaultsOnInsert = require('../setDefaultsOnInsert');\n\n/*!\n * Given a model and a bulkWrite op, return a thunk that handles casting and\n * validating the individual op.\n */\n\nmodule.exports = function castBulkWrite(originalModel, op, options) {\n  const now = originalModel.base.now();\n\n  if (op['insertOne']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['insertOne']['document']);\n\n      const doc = new model(op['insertOne']['document']);\n      if (model.schema.options.timestamps) {\n        doc.initializeTimestamps();\n      }\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n      op['insertOne']['document'] = doc;\n\n      if (options.skipValidation || op['insertOne'].skipValidation) {\n        callback(null);\n        return;\n      }\n\n      op['insertOne']['document'].$validate({ __noPromise: true }, function(error) {\n        if (error) {\n          return callback(error, null);\n        }\n        callback(null);\n      });\n    };\n  } else if (op['updateOne']) {\n    return (callback) => {\n      try {\n        if (!op['updateOne']['filter']) {\n          throw new Error('Must provide a filter object.');\n        }\n        if (!op['updateOne']['update']) {\n          throw new Error('Must provide an update object.');\n        }\n\n        const model = decideModelByObject(originalModel, op['updateOne']['filter']);\n        const schema = model.schema;\n        const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n        _addDiscriminatorToObject(schema, op['updateOne']['filter']);\n\n        if (model.schema.$timestamps != null && op['updateOne'].timestamps !== false) {\n          const createdAt = model.schema.$timestamps.createdAt;\n          const updatedAt = model.schema.$timestamps.updatedAt;\n          applyTimestampsToUpdate(now, createdAt, updatedAt, op['updateOne']['update'], {});\n        }\n\n        applyTimestampsToChildren(now, op['updateOne']['update'], model.schema);\n\n        if (op['updateOne'].setDefaultsOnInsert !== false) {\n          setDefaultsOnInsert(op['updateOne']['filter'], model.schema, op['updateOne']['update'], {\n            setDefaultsOnInsert: true,\n            upsert: op['updateOne'].upsert\n          });\n        }\n\n        op['updateOne']['filter'] = cast(model.schema, op['updateOne']['filter'], {\n          strict: strict,\n          upsert: op['updateOne'].upsert\n        });\n\n        op['updateOne']['update'] = castUpdate(model.schema, op['updateOne']['update'], {\n          strict: strict,\n          overwrite: false,\n          upsert: op['updateOne'].upsert\n        }, model, op['updateOne']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['updateMany']) {\n    return (callback) => {\n      try {\n        if (!op['updateMany']['filter']) {\n          throw new Error('Must provide a filter object.');\n        }\n        if (!op['updateMany']['update']) {\n          throw new Error('Must provide an update object.');\n        }\n\n        const model = decideModelByObject(originalModel, op['updateMany']['filter']);\n        const schema = model.schema;\n        const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n        if (op['updateMany'].setDefaultsOnInsert !== false) {\n          setDefaultsOnInsert(op['updateMany']['filter'], model.schema, op['updateMany']['update'], {\n            setDefaultsOnInsert: true,\n            upsert: op['updateMany'].upsert\n          });\n        }\n\n        if (model.schema.$timestamps != null && op['updateMany'].timestamps !== false) {\n          const createdAt = model.schema.$timestamps.createdAt;\n          const updatedAt = model.schema.$timestamps.updatedAt;\n          applyTimestampsToUpdate(now, createdAt, updatedAt, op['updateMany']['update'], {});\n        }\n\n        applyTimestampsToChildren(now, op['updateMany']['update'], model.schema);\n\n        _addDiscriminatorToObject(schema, op['updateMany']['filter']);\n\n        op['updateMany']['filter'] = cast(model.schema, op['updateMany']['filter'], {\n          strict: strict,\n          upsert: op['updateMany'].upsert\n        });\n\n        op['updateMany']['update'] = castUpdate(model.schema, op['updateMany']['update'], {\n          strict: strict,\n          overwrite: false,\n          upsert: op['updateMany'].upsert\n        }, model, op['updateMany']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['replaceOne']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['replaceOne']['filter']);\n      const schema = model.schema;\n      const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n      _addDiscriminatorToObject(schema, op['replaceOne']['filter']);\n      try {\n        op['replaceOne']['filter'] = cast(model.schema, op['replaceOne']['filter'], {\n          strict: strict,\n          upsert: op['replaceOne'].upsert\n        });\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      // set `skipId`, otherwise we get \"_id field cannot be changed\"\n      const doc = new model(op['replaceOne']['replacement'], strict, true);\n      if (model.schema.options.timestamps) {\n        doc.initializeTimestamps();\n      }\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n      op['replaceOne']['replacement'] = doc;\n\n      if (options.skipValidation || op['replaceOne'].skipValidation) {\n        op['replaceOne']['replacement'] = op['replaceOne']['replacement'].toBSON();\n        callback(null);\n        return;\n      }\n\n      op['replaceOne']['replacement'].$validate({ __noPromise: true }, function(error) {\n        if (error) {\n          return callback(error, null);\n        }\n        op['replaceOne']['replacement'] = op['replaceOne']['replacement'].toBSON();\n        callback(null);\n      });\n    };\n  } else if (op['deleteOne']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['deleteOne']['filter']);\n      const schema = model.schema;\n\n      _addDiscriminatorToObject(schema, op['deleteOne']['filter']);\n\n      try {\n        op['deleteOne']['filter'] = cast(model.schema,\n          op['deleteOne']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['deleteMany']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['deleteMany']['filter']);\n      const schema = model.schema;\n\n      _addDiscriminatorToObject(schema, op['deleteMany']['filter']);\n\n      try {\n        op['deleteMany']['filter'] = cast(model.schema,\n          op['deleteMany']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else {\n    return (callback) => {\n      callback(new Error('Invalid op passed to `bulkWrite()`'), null);\n    };\n  }\n};\n\nfunction _addDiscriminatorToObject(schema, obj) {\n  if (schema == null) {\n    return;\n  }\n  if (schema.discriminatorMapping && !schema.discriminatorMapping.isRoot) {\n    obj[schema.discriminatorMapping.key] = schema.discriminatorMapping.value;\n  }\n}\n\n/*!\n * gets discriminator model if discriminator key is present in object\n */\n\nfunction decideModelByObject(model, object) {\n  const discriminatorKey = model.schema.options.discriminatorKey;\n  if (object != null && object.hasOwnProperty(discriminatorKey)) {\n    model = getDiscriminatorByValue(model.discriminators, object[discriminatorKey]) || model;\n  }\n  return model;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}