{"ast":null,"code":"'use strict';\n\nmodule.exports = function applyPlugins(schema, plugins, options, cacheKey) {\n  if (schema[cacheKey]) {\n    return;\n  }\n\n  schema[cacheKey] = true;\n\n  if (!options || !options.skipTopLevel) {\n    let pluginTags = null;\n\n    for (const plugin of plugins) {\n      const tags = plugin[1] == null ? null : plugin[1].tags;\n\n      if (!Array.isArray(tags)) {\n        schema.plugin(plugin[0], plugin[1]);\n        continue;\n      }\n\n      pluginTags = pluginTags || new Set(schema.options.pluginTags || []);\n\n      if (!tags.find(tag => pluginTags.has(tag))) {\n        continue;\n      }\n\n      schema.plugin(plugin[0], plugin[1]);\n    }\n  }\n\n  options = Object.assign({}, options);\n  delete options.skipTopLevel;\n\n  if (options.applyPluginsToChildSchemas !== false) {\n    for (const path of Object.keys(schema.paths)) {\n      const type = schema.paths[path];\n\n      if (type.schema != null) {\n        applyPlugins(type.schema, plugins, options, cacheKey); // Recompile schema because plugins may have changed it, see gh-7572\n\n        type.caster.prototype.$__setSchema(type.schema);\n      }\n    }\n  }\n\n  const discriminators = schema.discriminators;\n\n  if (discriminators == null) {\n    return;\n  }\n\n  const applyPluginsToDiscriminators = options.applyPluginsToDiscriminators;\n  const keys = Object.keys(discriminators);\n\n  for (const discriminatorKey of keys) {\n    const discriminatorSchema = discriminators[discriminatorKey];\n    applyPlugins(discriminatorSchema, plugins, {\n      skipTopLevel: !applyPluginsToDiscriminators\n    }, cacheKey);\n  }\n};","map":{"version":3,"names":["module","exports","applyPlugins","schema","plugins","options","cacheKey","skipTopLevel","pluginTags","plugin","tags","Array","isArray","Set","find","tag","has","Object","assign","applyPluginsToChildSchemas","path","keys","paths","type","caster","prototype","$__setSchema","discriminators","applyPluginsToDiscriminators","discriminatorKey","discriminatorSchema"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/schema/applyPlugins.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function applyPlugins(schema, plugins, options, cacheKey) {\n  if (schema[cacheKey]) {\n    return;\n  }\n  schema[cacheKey] = true;\n\n  if (!options || !options.skipTopLevel) {\n    let pluginTags = null;\n    for (const plugin of plugins) {\n      const tags = plugin[1] == null ? null : plugin[1].tags;\n      if (!Array.isArray(tags)) {\n        schema.plugin(plugin[0], plugin[1]);\n        continue;\n      }\n\n      pluginTags = pluginTags || new Set(schema.options.pluginTags || []);\n      if (!tags.find(tag => pluginTags.has(tag))) {\n        continue;\n      }\n      schema.plugin(plugin[0], plugin[1]);\n    }\n  }\n\n  options = Object.assign({}, options);\n  delete options.skipTopLevel;\n\n  if (options.applyPluginsToChildSchemas !== false) {\n    for (const path of Object.keys(schema.paths)) {\n      const type = schema.paths[path];\n      if (type.schema != null) {\n        applyPlugins(type.schema, plugins, options, cacheKey);\n\n        // Recompile schema because plugins may have changed it, see gh-7572\n        type.caster.prototype.$__setSchema(type.schema);\n      }\n    }\n  }\n\n  const discriminators = schema.discriminators;\n  if (discriminators == null) {\n    return;\n  }\n\n  const applyPluginsToDiscriminators = options.applyPluginsToDiscriminators;\n\n  const keys = Object.keys(discriminators);\n  for (const discriminatorKey of keys) {\n    const discriminatorSchema = discriminators[discriminatorKey];\n\n    applyPlugins(discriminatorSchema, plugins,\n      { skipTopLevel: !applyPluginsToDiscriminators }, cacheKey);\n  }\n};"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgDC,QAAhD,EAA0D;EACzE,IAAIH,MAAM,CAACG,QAAD,CAAV,EAAsB;IACpB;EACD;;EACDH,MAAM,CAACG,QAAD,CAAN,GAAmB,IAAnB;;EAEA,IAAI,CAACD,OAAD,IAAY,CAACA,OAAO,CAACE,YAAzB,EAAuC;IACrC,IAAIC,UAAU,GAAG,IAAjB;;IACA,KAAK,MAAMC,MAAX,IAAqBL,OAArB,EAA8B;MAC5B,MAAMM,IAAI,GAAGD,MAAM,CAAC,CAAD,CAAN,IAAa,IAAb,GAAoB,IAApB,GAA2BA,MAAM,CAAC,CAAD,CAAN,CAAUC,IAAlD;;MACA,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAL,EAA0B;QACxBP,MAAM,CAACM,MAAP,CAAcA,MAAM,CAAC,CAAD,CAApB,EAAyBA,MAAM,CAAC,CAAD,CAA/B;QACA;MACD;;MAEDD,UAAU,GAAGA,UAAU,IAAI,IAAIK,GAAJ,CAAQV,MAAM,CAACE,OAAP,CAAeG,UAAf,IAA6B,EAArC,CAA3B;;MACA,IAAI,CAACE,IAAI,CAACI,IAAL,CAAUC,GAAG,IAAIP,UAAU,CAACQ,GAAX,CAAeD,GAAf,CAAjB,CAAL,EAA4C;QAC1C;MACD;;MACDZ,MAAM,CAACM,MAAP,CAAcA,MAAM,CAAC,CAAD,CAApB,EAAyBA,MAAM,CAAC,CAAD,CAA/B;IACD;EACF;;EAEDJ,OAAO,GAAGY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,OAAlB,CAAV;EACA,OAAOA,OAAO,CAACE,YAAf;;EAEA,IAAIF,OAAO,CAACc,0BAAR,KAAuC,KAA3C,EAAkD;IAChD,KAAK,MAAMC,IAAX,IAAmBH,MAAM,CAACI,IAAP,CAAYlB,MAAM,CAACmB,KAAnB,CAAnB,EAA8C;MAC5C,MAAMC,IAAI,GAAGpB,MAAM,CAACmB,KAAP,CAAaF,IAAb,CAAb;;MACA,IAAIG,IAAI,CAACpB,MAAL,IAAe,IAAnB,EAAyB;QACvBD,YAAY,CAACqB,IAAI,CAACpB,MAAN,EAAcC,OAAd,EAAuBC,OAAvB,EAAgCC,QAAhC,CAAZ,CADuB,CAGvB;;QACAiB,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,YAAtB,CAAmCH,IAAI,CAACpB,MAAxC;MACD;IACF;EACF;;EAED,MAAMwB,cAAc,GAAGxB,MAAM,CAACwB,cAA9B;;EACA,IAAIA,cAAc,IAAI,IAAtB,EAA4B;IAC1B;EACD;;EAED,MAAMC,4BAA4B,GAAGvB,OAAO,CAACuB,4BAA7C;EAEA,MAAMP,IAAI,GAAGJ,MAAM,CAACI,IAAP,CAAYM,cAAZ,CAAb;;EACA,KAAK,MAAME,gBAAX,IAA+BR,IAA/B,EAAqC;IACnC,MAAMS,mBAAmB,GAAGH,cAAc,CAACE,gBAAD,CAA1C;IAEA3B,YAAY,CAAC4B,mBAAD,EAAsB1B,OAAtB,EACV;MAAEG,YAAY,EAAE,CAACqB;IAAjB,CADU,EACuCtB,QADvC,CAAZ;EAED;AACF,CApDD"},"metadata":{},"sourceType":"script"}