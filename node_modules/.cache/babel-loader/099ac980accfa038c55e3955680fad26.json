{"ast":null,"code":"/*!\n * Module dependencies.\n */\n'use strict';\n\nconst SchemaType = require('../schematype');\n\nconst CastError = SchemaType.CastError;\n\nconst castDecimal128 = require('../cast/decimal128');\n\nconst utils = require('../utils');\n\nconst isBsonType = require('../helpers/isBsonType');\n/**\n * Decimal128 SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\n\nfunction Decimal128(key, options) {\n  SchemaType.call(this, key, options, 'Decimal128');\n}\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\n\n\nDecimal128.schemaName = 'Decimal128';\nDecimal128.defaultOptions = {};\n/*!\n * Inherits from SchemaType.\n */\n\nDecimal128.prototype = Object.create(SchemaType.prototype);\nDecimal128.prototype.constructor = Decimal128;\n/*!\n * ignore\n */\n\nDecimal128._cast = castDecimal128;\n/**\n * Sets a default option for all Decimal128 instances.\n *\n * #### Example:\n *\n *     // Make all decimal 128s have `required` of true by default.\n *     mongoose.Schema.Decimal128.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: mongoose.Decimal128 }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option - The option you'd like to set the value for\n * @param {*} value - value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nDecimal128.set = SchemaType.set;\n/**\n * Get/set the function used to cast arbitrary values to decimals.\n *\n * #### Example:\n *\n *     // Make Mongoose only refuse to cast numbers as decimal128\n *     const original = mongoose.Schema.Types.Decimal128.cast();\n *     mongoose.Decimal128.cast(v => {\n *       assert.ok(typeof v !== 'number');\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.Decimal128.cast(false);\n *\n * @param {Function} [caster]\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nDecimal128.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n\n  this._cast = caster;\n  return this._cast;\n};\n/*!\n * ignore\n */\n\n\nDecimal128._defaultCaster = v => {\n  if (v != null && !isBsonType(v, 'Decimal128')) {\n    throw new Error();\n  }\n\n  return v;\n};\n/*!\n * ignore\n */\n\n\nDecimal128._checkRequired = v => isBsonType(v, 'Decimal128');\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\n\nDecimal128.checkRequired = SchemaType.checkRequired;\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nDecimal128.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  } // `require('util').inherits()` does **not** copy static properties, and\n  // plugins like mongoose-float use `inherits()` for pre-ES6.\n\n\n  const _checkRequired = typeof this.constructor.checkRequired === 'function' ? this.constructor.checkRequired() : Decimal128.checkRequired();\n\n  return _checkRequired(value);\n};\n/**\n * Casts to Decimal128\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\n\nDecimal128.prototype.cast = function (value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    if (isBsonType(value, 'Decimal128')) {\n      return value;\n    }\n\n    return this._castRef(value, doc, init);\n  }\n\n  let castDecimal128;\n\n  if (typeof this._castFunction === 'function') {\n    castDecimal128 = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castDecimal128 = this.constructor.cast();\n  } else {\n    castDecimal128 = Decimal128.cast();\n  }\n\n  try {\n    return castDecimal128(value);\n  } catch (error) {\n    throw new CastError('Decimal128', value, this.path, error, this);\n  }\n};\n/*!\n * ignore\n */\n\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nDecimal128.prototype.$conditionalHandlers = utils.options(SchemaType.prototype.$conditionalHandlers, {\n  $gt: handleSingle,\n  $gte: handleSingle,\n  $lt: handleSingle,\n  $lte: handleSingle\n});\n/*!\n * Module exports.\n */\n\nmodule.exports = Decimal128;","map":{"version":3,"names":["SchemaType","require","CastError","castDecimal128","utils","isBsonType","Decimal128","key","options","call","schemaName","defaultOptions","prototype","Object","create","constructor","_cast","set","cast","caster","arguments","length","_defaultCaster","v","Error","_checkRequired","checkRequired","value","doc","_isRef","init","_castRef","_castFunction","error","path","handleSingle","val","$conditionalHandlers","$gt","$gte","$lt","$lte","module","exports"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/schema/decimal128.js"],"sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst SchemaType = require('../schematype');\nconst CastError = SchemaType.CastError;\nconst castDecimal128 = require('../cast/decimal128');\nconst utils = require('../utils');\nconst isBsonType = require('../helpers/isBsonType');\n\n/**\n * Decimal128 SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction Decimal128(key, options) {\n  SchemaType.call(this, key, options, 'Decimal128');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nDecimal128.schemaName = 'Decimal128';\n\nDecimal128.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nDecimal128.prototype = Object.create(SchemaType.prototype);\nDecimal128.prototype.constructor = Decimal128;\n\n/*!\n * ignore\n */\n\nDecimal128._cast = castDecimal128;\n\n/**\n * Sets a default option for all Decimal128 instances.\n *\n * #### Example:\n *\n *     // Make all decimal 128s have `required` of true by default.\n *     mongoose.Schema.Decimal128.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: mongoose.Decimal128 }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option - The option you'd like to set the value for\n * @param {*} value - value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nDecimal128.set = SchemaType.set;\n\n/**\n * Get/set the function used to cast arbitrary values to decimals.\n *\n * #### Example:\n *\n *     // Make Mongoose only refuse to cast numbers as decimal128\n *     const original = mongoose.Schema.Types.Decimal128.cast();\n *     mongoose.Decimal128.cast(v => {\n *       assert.ok(typeof v !== 'number');\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.Decimal128.cast(false);\n *\n * @param {Function} [caster]\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nDecimal128.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/*!\n * ignore\n */\n\nDecimal128._defaultCaster = v => {\n  if (v != null && !isBsonType(v, 'Decimal128')) {\n    throw new Error();\n  }\n  return v;\n};\n\n/*!\n * ignore\n */\n\nDecimal128._checkRequired = v => isBsonType(v, 'Decimal128');\n\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nDecimal128.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nDecimal128.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n\n  // `require('util').inherits()` does **not** copy static properties, and\n  // plugins like mongoose-float use `inherits()` for pre-ES6.\n  const _checkRequired = typeof this.constructor.checkRequired === 'function' ?\n    this.constructor.checkRequired() :\n    Decimal128.checkRequired();\n\n  return _checkRequired(value);\n};\n\n/**\n * Casts to Decimal128\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nDecimal128.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    if (isBsonType(value, 'Decimal128')) {\n      return value;\n    }\n\n    return this._castRef(value, doc, init);\n  }\n\n  let castDecimal128;\n  if (typeof this._castFunction === 'function') {\n    castDecimal128 = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castDecimal128 = this.constructor.cast();\n  } else {\n    castDecimal128 = Decimal128.cast();\n  }\n\n  try {\n    return castDecimal128(value);\n  } catch (error) {\n    throw new CastError('Decimal128', value, this.path, error, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nDecimal128.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/*!\n * Module exports.\n */\n\nmodule.exports = Decimal128;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}