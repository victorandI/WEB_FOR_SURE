{"ast":null,"code":"'use strict';\n\nconst get = require('../get');\n/**\n * Given an update, move all $set on immutable properties to $setOnInsert.\n * This should only be called for upserts, because $setOnInsert bypasses the\n * strictness check for immutable properties.\n */\n\n\nmodule.exports = function moveImmutableProperties(schema, update, ctx) {\n  if (update == null) {\n    return;\n  }\n\n  const keys = Object.keys(update);\n\n  for (const key of keys) {\n    const isDollarKey = key.startsWith('$');\n\n    if (key === '$set') {\n      const updatedPaths = Object.keys(update[key]);\n\n      for (const path of updatedPaths) {\n        _walkUpdatePath(schema, update[key], path, update, ctx);\n      }\n    } else if (!isDollarKey) {\n      _walkUpdatePath(schema, update, key, update, ctx);\n    }\n  }\n};\n\nfunction _walkUpdatePath(schema, op, path, update, ctx) {\n  const schematype = schema.path(path);\n\n  if (schematype == null) {\n    return;\n  }\n\n  let immutable = get(schematype, 'options.immutable', null);\n\n  if (immutable == null) {\n    return;\n  }\n\n  if (typeof immutable === 'function') {\n    immutable = immutable.call(ctx, ctx);\n  }\n\n  if (!immutable) {\n    return;\n  }\n\n  update.$setOnInsert = update.$setOnInsert || {};\n  update.$setOnInsert[path] = op[path];\n  delete op[path];\n}","map":{"version":3,"names":["get","require","module","exports","moveImmutableProperties","schema","update","ctx","keys","Object","key","isDollarKey","startsWith","updatedPaths","path","_walkUpdatePath","op","schematype","immutable","call","$setOnInsert"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/update/moveImmutableProperties.js"],"sourcesContent":["'use strict';\n\nconst get = require('../get');\n\n/**\n * Given an update, move all $set on immutable properties to $setOnInsert.\n * This should only be called for upserts, because $setOnInsert bypasses the\n * strictness check for immutable properties.\n */\n\nmodule.exports = function moveImmutableProperties(schema, update, ctx) {\n  if (update == null) {\n    return;\n  }\n\n  const keys = Object.keys(update);\n  for (const key of keys) {\n    const isDollarKey = key.startsWith('$');\n\n    if (key === '$set') {\n      const updatedPaths = Object.keys(update[key]);\n      for (const path of updatedPaths) {\n        _walkUpdatePath(schema, update[key], path, update, ctx);\n      }\n    } else if (!isDollarKey) {\n      _walkUpdatePath(schema, update, key, update, ctx);\n    }\n\n  }\n};\n\nfunction _walkUpdatePath(schema, op, path, update, ctx) {\n  const schematype = schema.path(path);\n  if (schematype == null) {\n    return;\n  }\n\n  let immutable = get(schematype, 'options.immutable', null);\n  if (immutable == null) {\n    return;\n  }\n  if (typeof immutable === 'function') {\n    immutable = immutable.call(ctx, ctx);\n  }\n\n  if (!immutable) {\n    return;\n  }\n\n  update.$setOnInsert = update.$setOnInsert || {};\n  update.$setOnInsert[path] = op[path];\n  delete op[path];\n}"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,uBAAT,CAAiCC,MAAjC,EAAyCC,MAAzC,EAAiDC,GAAjD,EAAsD;EACrE,IAAID,MAAM,IAAI,IAAd,EAAoB;IAClB;EACD;;EAED,MAAME,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAb;;EACA,KAAK,MAAMI,GAAX,IAAkBF,IAAlB,EAAwB;IACtB,MAAMG,WAAW,GAAGD,GAAG,CAACE,UAAJ,CAAe,GAAf,CAApB;;IAEA,IAAIF,GAAG,KAAK,MAAZ,EAAoB;MAClB,MAAMG,YAAY,GAAGJ,MAAM,CAACD,IAAP,CAAYF,MAAM,CAACI,GAAD,CAAlB,CAArB;;MACA,KAAK,MAAMI,IAAX,IAAmBD,YAAnB,EAAiC;QAC/BE,eAAe,CAACV,MAAD,EAASC,MAAM,CAACI,GAAD,CAAf,EAAsBI,IAAtB,EAA4BR,MAA5B,EAAoCC,GAApC,CAAf;MACD;IACF,CALD,MAKO,IAAI,CAACI,WAAL,EAAkB;MACvBI,eAAe,CAACV,MAAD,EAASC,MAAT,EAAiBI,GAAjB,EAAsBJ,MAAtB,EAA8BC,GAA9B,CAAf;IACD;EAEF;AACF,CAnBD;;AAqBA,SAASQ,eAAT,CAAyBV,MAAzB,EAAiCW,EAAjC,EAAqCF,IAArC,EAA2CR,MAA3C,EAAmDC,GAAnD,EAAwD;EACtD,MAAMU,UAAU,GAAGZ,MAAM,CAACS,IAAP,CAAYA,IAAZ,CAAnB;;EACA,IAAIG,UAAU,IAAI,IAAlB,EAAwB;IACtB;EACD;;EAED,IAAIC,SAAS,GAAGlB,GAAG,CAACiB,UAAD,EAAa,mBAAb,EAAkC,IAAlC,CAAnB;;EACA,IAAIC,SAAS,IAAI,IAAjB,EAAuB;IACrB;EACD;;EACD,IAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;IACnCA,SAAS,GAAGA,SAAS,CAACC,IAAV,CAAeZ,GAAf,EAAoBA,GAApB,CAAZ;EACD;;EAED,IAAI,CAACW,SAAL,EAAgB;IACd;EACD;;EAEDZ,MAAM,CAACc,YAAP,GAAsBd,MAAM,CAACc,YAAP,IAAuB,EAA7C;EACAd,MAAM,CAACc,YAAP,CAAoBN,IAApB,IAA4BE,EAAE,CAACF,IAAD,CAA9B;EACA,OAAOE,EAAE,CAACF,IAAD,CAAT;AACD"},"metadata":{},"sourceType":"script"}