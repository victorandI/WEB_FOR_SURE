{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\web_car_react-main (2)\\\\web_car_react-main\\\\src\\\\component\\\\login\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport './login.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [login, setLogin] = useState();\n  const [password, setPassword] = useState();\n  const [passwordValid, setPasswordValid] = useState(false);\n\n  const onChangeLogin = event => {\n    setLogin(event.target.value);\n  };\n\n  const onChangePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  useEffect(() => {\n    setPasswordValid(false);\n  }, [password]);\n\n  const find_user_id = async login => {\n    const url = new URL(\"http://127.0.0.1:5000/\" + login);\n    const params = {\n      token: localStorage.getItem('token')\n    };\n    url.search = new URLSearchParams(params).toString();\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n\n    if (res.ok) {\n      const data = await res.json();\n      localStorage.setItem('idUser', data.idUser);\n      localStorage.setItem('user_status', data.user_status);\n      window.location.reload();\n    } else {\n      alert(\"Could not verify\");\n    }\n  };\n\n  const sentRequest = async () => {\n    if (password.length >= 5) {\n      const formData = new URLSearchParams();\n      formData.append('login', login);\n      formData.append('password', password);\n      const res = await fetch('http://127.0.0.1:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        body: formData\n      });\n\n      if (res.ok) {\n        const token = await res.json();\n        localStorage.setItem('token', token);\n        find_user_id(login);\n      } else {\n        localStorage.setItem('token', null);\n        alert('Could not verify');\n      }\n    } else {\n      setPasswordValid(true);\n    }\n  };\n  /*const sentRequest = async () => {\n     if(password.length >= 5){\n          const data = { \"login\":login, \"password\":password};\n          //console.log(data)\n         const res = await fetch(\"http://127.0.0.1:5000/login\", \n          {\n          method: 'POST',\n          headers: {\n              'Content-type': 'application/json',\n              'Accept': 'application/json'\n          },\n          body:JSON.stringify(data)});\n          let lol = '';\n          if(res.ok){\n              lol = await res.json();\n              localStorage.setItem('token', lol);\n              find_user_id(login)\n              //window.location.reload();\n          }else{\n              localStorage.setItem('token', null);\n              alert(\"Could not verify\")\n          }  \n          console.log(lol);\n      }\n   }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main_login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_head_login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_section_login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"login\",\n            type: \"text\",\n            placeholder: \"Username\",\n            onChange: onChangeLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            onChange: onChangePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), passwordValid && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter your password > 4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"log_button\",\n            onClick: sentRequest,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"TKML+k4BtthsnKlExQA+Lo9RgvM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","Login","props","login","setLogin","password","setPassword","passwordValid","setPasswordValid","onChangeLogin","event","target","value","onChangePassword","find_user_id","url","URL","params","token","localStorage","getItem","search","URLSearchParams","toString","res","fetch","method","headers","ok","data","json","setItem","idUser","user_status","window","location","reload","alert","sentRequest","length","formData","append","body"],"sources":["C:/Users/User/Downloads/web_car_react-main (2)/web_car_react-main/src/component/login/login.js"],"sourcesContent":["import './login.css';\nimport { useState, useEffect } from 'react';\n\nconst Login = (props) => {\n    const [login, setLogin] = useState();\n    const [password, setPassword] = useState();\n    const [passwordValid, setPasswordValid] = useState(false);\n\n    const onChangeLogin = (event) => {\n        setLogin(event.target.value);\n    }\n\n    const onChangePassword = (event) => {\n        setPassword(event.target.value);\n    }\n    \n    useEffect(() => {\n        setPasswordValid(false);\n    }, [password])\n\n    const find_user_id = async (login) => {\n        const url = new URL(\"http://127.0.0.1:5000/\" + login);\n        const params = { token: localStorage.getItem('token') };\n        url.search = new URLSearchParams(params).toString();\n\n        const res = await fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        });\n\n        if (res.ok) {\n            const data = await res.json();\n            localStorage.setItem('idUser', data.idUser);\n            localStorage.setItem('user_status', data.user_status);\n            window.location.reload();\n        } else {\n            alert(\"Could not verify\");\n        }\n    };\n\n    const sentRequest = async () => {\n        if (password.length >= 5) {\n            const formData = new URLSearchParams();\n            formData.append('login', login);\n            formData.append('password', password);\n\n            const res = await fetch('http://127.0.0.1:5000/login', {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/x-www-form-urlencoded'\n                },\n                body: formData\n            });\n\n            if (res.ok) {\n                const token = await res.json();\n                localStorage.setItem('token', token);\n                find_user_id(login);\n            } else {\n                localStorage.setItem('token', null);\n                alert('Could not verify');\n            }\n        } else {\n            setPasswordValid(true);\n        }\n    }\n\n\n\n\n    /*const sentRequest = async () => {\n       if(password.length >= 5){\n            const data = { \"login\":login, \"password\":password};\n            //console.log(data)\n           const res = await fetch(\"http://127.0.0.1:5000/login\", \n            {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body:JSON.stringify(data)});\n            let lol = '';\n            if(res.ok){\n                lol = await res.json();\n                localStorage.setItem('token', lol);\n                find_user_id(login)\n                //window.location.reload();\n            }else{\n                localStorage.setItem('token', null);\n                alert(\"Could not verify\")\n            }  \n            console.log(lol);\n        }\n\n    }*/\n    return (\n        <main className=\"main_login\">\n            <div className=\"main_head_login\">\n                <div className=\"main_section_login\">\n                    <div className=\"login\">\n                    <h2>Welcome back</h2>\n                    <input id = \"login\" type=\"text\" placeholder=\"Username\" onChange={onChangeLogin}/>\n                    <input id = \"password\" type=\"password\" placeholder=\"Password\" onChange={onChangePassword}/>\n                    {passwordValid && <p>Please enter your password &gt; 4</p>}\n                    <button type='submit' id = \"log_button\" onClick={sentRequest}>Login</button>\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Login;"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAAA;;EACrB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;EACA,MAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;;EAEA,MAAMU,aAAa,GAAIC,KAAD,IAAW;IAC7BN,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;EACH,CAFD;;EAIA,MAAMC,gBAAgB,GAAIH,KAAD,IAAW;IAChCJ,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;EACH,CAFD;;EAIAZ,SAAS,CAAC,MAAM;IACZQ,gBAAgB,CAAC,KAAD,CAAhB;EACH,CAFQ,EAEN,CAACH,QAAD,CAFM,CAAT;;EAIA,MAAMS,YAAY,GAAG,MAAOX,KAAP,IAAiB;IAClC,MAAMY,GAAG,GAAG,IAAIC,GAAJ,CAAQ,2BAA2Bb,KAAnC,CAAZ;IACA,MAAMc,MAAM,GAAG;MAAEC,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;IAAT,CAAf;IACAL,GAAG,CAACM,MAAJ,GAAa,IAAIC,eAAJ,CAAoBL,MAApB,EAA4BM,QAA5B,EAAb;IAEA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAM;MACzBW,MAAM,EAAE,KADiB;MAEzBC,OAAO,EAAE;QACL,gBAAgB;MADX;IAFgB,CAAN,CAAvB;;IAOA,IAAIH,GAAG,CAACI,EAAR,EAAY;MACR,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;MACAX,YAAY,CAACY,OAAb,CAAqB,QAArB,EAA+BF,IAAI,CAACG,MAApC;MACAb,YAAY,CAACY,OAAb,CAAqB,aAArB,EAAoCF,IAAI,CAACI,WAAzC;MACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACH,CALD,MAKO;MACHC,KAAK,CAAC,kBAAD,CAAL;IACH;EACJ,CApBD;;EAsBA,MAAMC,WAAW,GAAG,YAAY;IAC5B,IAAIjC,QAAQ,CAACkC,MAAT,IAAmB,CAAvB,EAA0B;MACtB,MAAMC,QAAQ,GAAG,IAAIlB,eAAJ,EAAjB;MACAkB,QAAQ,CAACC,MAAT,CAAgB,OAAhB,EAAyBtC,KAAzB;MACAqC,QAAQ,CAACC,MAAT,CAAgB,UAAhB,EAA4BpC,QAA5B;MAEA,MAAMmB,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;QACnDC,MAAM,EAAE,MAD2C;QAEnDC,OAAO,EAAE;UACL,gBAAgB;QADX,CAF0C;QAKnDe,IAAI,EAAEF;MAL6C,CAAhC,CAAvB;;MAQA,IAAIhB,GAAG,CAACI,EAAR,EAAY;QACR,MAAMV,KAAK,GAAG,MAAMM,GAAG,CAACM,IAAJ,EAApB;QACAX,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8Bb,KAA9B;QACAJ,YAAY,CAACX,KAAD,CAAZ;MACH,CAJD,MAIO;QACHgB,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8B,IAA9B;QACAM,KAAK,CAAC,kBAAD,CAAL;MACH;IACJ,CArBD,MAqBO;MACH7B,gBAAgB,CAAC,IAAD,CAAhB;IACH;EACJ,CAzBD;EA8BA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAEI,oBACI;IAAM,SAAS,EAAC,YAAhB;IAAA,uBACI;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACI;QAAK,SAAS,EAAC,oBAAf;QAAA,uBACI;UAAK,SAAS,EAAC,OAAf;UAAA,wBACA;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADA,eAEA;YAAO,EAAE,EAAG,OAAZ;YAAoB,IAAI,EAAC,MAAzB;YAAgC,WAAW,EAAC,UAA5C;YAAuD,QAAQ,EAAEC;UAAjE;YAAA;YAAA;YAAA;UAAA,QAFA,eAGA;YAAO,EAAE,EAAG,UAAZ;YAAuB,IAAI,EAAC,UAA5B;YAAuC,WAAW,EAAC,UAAnD;YAA8D,QAAQ,EAAEI;UAAxE;YAAA;YAAA;YAAA;UAAA,QAHA,EAICN,aAAa,iBAAI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJlB,eAKA;YAAQ,IAAI,EAAC,QAAb;YAAsB,EAAE,EAAG,YAA3B;YAAwC,OAAO,EAAE+B,WAAjD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CA9GD;;GAAMrC,K;;KAAAA,K;AAgHN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}