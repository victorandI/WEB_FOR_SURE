{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nconst MongooseCollection = require('../../collection');\n\nconst MongooseError = require('../../error/mongooseError');\n\nconst Collection = require('mongodb').Collection;\n\nconst ObjectId = require('./objectid');\n\nconst getConstructorName = require('../../helpers/getConstructorName');\n\nconst stream = require('stream');\n\nconst util = require('util');\n/**\n * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) collection implementation.\n *\n * All methods methods from the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver are copied and wrapped in queue management.\n *\n * @inherits Collection\n * @api private\n */\n\n\nfunction NativeCollection(name, conn, options) {\n  this.collection = null;\n  this.Promise = options.Promise || Promise;\n  this.modelName = options.modelName;\n  delete options.modelName;\n  this._closed = false;\n  MongooseCollection.apply(this, arguments);\n}\n/*!\n * Inherit from abstract Collection.\n */\n\n\nNativeCollection.prototype.__proto__ = MongooseCollection.prototype;\n/**\n * Called when the connection opens.\n *\n * @api private\n */\n\nNativeCollection.prototype.onOpen = function () {\n  const _this = this;\n\n  _this.collection = _this.conn.db.collection(_this.name);\n  MongooseCollection.prototype.onOpen.call(_this);\n  return _this.collection;\n};\n/**\n * Called when the connection closes\n *\n * @api private\n */\n\n\nNativeCollection.prototype.onClose = function (force) {\n  MongooseCollection.prototype.onClose.call(this, force);\n};\n/*!\n * ignore\n */\n\n\nconst syncCollectionMethods = {\n  watch: true,\n  find: true,\n  aggregate: true\n};\n/*!\n * Copy the collection methods and make them subject to queues\n */\n\nfunction iter(i) {\n  NativeCollection.prototype[i] = function () {\n    const collection = this.collection;\n    const args = Array.from(arguments);\n\n    const _this = this;\n\n    const debug = _this && _this.conn && _this.conn.base && _this.conn.base.options && _this.conn.base.options.debug;\n    const lastArg = arguments[arguments.length - 1];\n    const opId = new ObjectId(); // If user force closed, queueing will hang forever. See #5664\n\n    if (this.conn.$wasForceClosed) {\n      const error = new MongooseError('Connection was force closed');\n\n      if (args.length > 0 && typeof args[args.length - 1] === 'function') {\n        args[args.length - 1](error);\n        return;\n      } else {\n        throw error;\n      }\n    }\n\n    let _args = args;\n    let callback = null;\n\n    if (this._shouldBufferCommands() && this.buffer) {\n      if (syncCollectionMethods[i] && typeof lastArg !== 'function') {\n        throw new Error('Collection method ' + i + ' is synchronous');\n      }\n\n      this.conn.emit('buffer', {\n        _id: opId,\n        modelName: _this.modelName,\n        collectionName: _this.name,\n        method: i,\n        args: args\n      });\n      let callback;\n      let _args = args;\n      let promise = null;\n      let timeout = null;\n\n      if (syncCollectionMethods[i]) {\n        this.addQueue(() => {\n          lastArg.call(this, null, this[i].apply(this, _args.slice(0, _args.length - 1)));\n        }, []);\n      } else if (typeof lastArg === 'function') {\n        callback = function collectionOperationCallback() {\n          if (timeout != null) {\n            clearTimeout(timeout);\n          }\n\n          return lastArg.apply(this, arguments);\n        };\n\n        _args = args.slice(0, args.length - 1).concat([callback]);\n      } else {\n        promise = new this.Promise((resolve, reject) => {\n          callback = function collectionOperationCallback(err, res) {\n            if (timeout != null) {\n              clearTimeout(timeout);\n            }\n\n            if (err != null) {\n              return reject(err);\n            }\n\n            resolve(res);\n          };\n\n          _args = args.concat([callback]);\n          this.addQueue(i, _args);\n        });\n      }\n\n      const bufferTimeoutMS = this._getBufferTimeoutMS();\n\n      timeout = setTimeout(() => {\n        const removed = this.removeQueue(i, _args);\n\n        if (removed) {\n          const message = 'Operation `' + this.name + '.' + i + '()` buffering timed out after ' + bufferTimeoutMS + 'ms';\n          const err = new MongooseError(message);\n          this.conn.emit('buffer-end', {\n            _id: opId,\n            modelName: _this.modelName,\n            collectionName: _this.name,\n            method: i,\n            error: err\n          });\n          callback(err);\n        }\n      }, bufferTimeoutMS);\n\n      if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n        this.addQueue(i, _args);\n        return;\n      }\n\n      return promise;\n    } else if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n      callback = function collectionOperationCallback(err, res) {\n        if (err != null) {\n          _this.conn.emit('operation-end', {\n            _id: opId,\n            modelName: _this.modelName,\n            collectionName: _this.name,\n            method: i,\n            error: err\n          });\n        } else {\n          _this.conn.emit('operation-end', {\n            _id: opId,\n            modelName: _this.modelName,\n            collectionName: _this.name,\n            method: i,\n            result: res\n          });\n        }\n\n        return lastArg.apply(this, arguments);\n      };\n\n      _args = args.slice(0, args.length - 1).concat([callback]);\n    }\n\n    if (debug) {\n      if (typeof debug === 'function') {\n        debug.apply(_this, [_this.name, i].concat(args.slice(0, args.length - 1)));\n      } else if (debug instanceof stream.Writable) {\n        this.$printToStream(_this.name, i, args, debug);\n      } else {\n        const color = debug.color == null ? true : debug.color;\n        const shell = debug.shell == null ? false : debug.shell;\n        this.$print(_this.name, i, args, color, shell);\n      }\n    }\n\n    this.conn.emit('operation-start', {\n      _id: opId,\n      modelName: _this.modelName,\n      collectionName: this.name,\n      method: i,\n      params: _args\n    });\n\n    try {\n      if (collection == null) {\n        const message = 'Cannot call `' + this.name + '.' + i + '()` before initial connection ' + 'is complete if `bufferCommands = false`. Make sure you `await mongoose.connect()` if ' + 'you have `bufferCommands = false`.';\n        throw new MongooseError(message);\n      }\n\n      if (syncCollectionMethods[i] && typeof lastArg === 'function') {\n        return lastArg.call(this, null, collection[i].apply(collection, _args.slice(0, _args.length - 1)));\n      }\n\n      const ret = collection[i].apply(collection, _args);\n\n      if (ret != null && typeof ret.then === 'function') {\n        return ret.then(res => {\n          this.conn.emit('operation-end', {\n            _id: opId,\n            modelName: this.modelName,\n            collectionName: this.name,\n            method: i,\n            result: res\n          });\n          return res;\n        }, err => {\n          this.conn.emit('operation-end', {\n            _id: opId,\n            modelName: this.modelName,\n            collectionName: this.name,\n            method: i,\n            error: err\n          });\n          throw err;\n        });\n      }\n\n      return ret;\n    } catch (error) {\n      // Collection operation may throw because of max bson size, catch it here\n      // See gh-3906\n      if (typeof lastArg === 'function') {\n        return lastArg(error);\n      } else {\n        this.conn.emit('operation-end', {\n          _id: opId,\n          modelName: _this.modelName,\n          collectionName: this.name,\n          method: i,\n          error: error\n        });\n        throw error;\n      }\n    }\n  };\n}\n\nfor (const key of Object.getOwnPropertyNames(Collection.prototype)) {\n  // Janky hack to work around gh-3005 until we can get rid of the mongoose\n  // collection abstraction\n  const descriptor = Object.getOwnPropertyDescriptor(Collection.prototype, key); // Skip properties with getters because they may throw errors (gh-8528)\n\n  if (descriptor.get !== undefined) {\n    continue;\n  }\n\n  if (typeof Collection.prototype[key] !== 'function') {\n    continue;\n  }\n\n  iter(key);\n}\n/**\n * Debug print helper\n *\n * @api public\n * @method $print\n */\n\n\nNativeCollection.prototype.$print = function (name, i, args, color, shell) {\n  const moduleName = color ? '\\x1B[0;36mMongoose:\\x1B[0m ' : 'Mongoose: ';\n  const functionCall = [name, i].join('.');\n  const _args = [];\n\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j], color, shell));\n    }\n  }\n\n  const params = '(' + _args.join(', ') + ')';\n  console.info(moduleName + functionCall + params);\n};\n/**\n * Debug print helper\n *\n * @api public\n * @method $print\n */\n\n\nNativeCollection.prototype.$printToStream = function (name, i, args, stream) {\n  const functionCall = [name, i].join('.');\n  const _args = [];\n\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j]));\n    }\n  }\n\n  const params = '(' + _args.join(', ') + ')';\n  stream.write(functionCall + params, 'utf8');\n};\n/**\n * Formatter for debug print args\n *\n * @api public\n * @method $format\n */\n\n\nNativeCollection.prototype.$format = function (arg, color, shell) {\n  const type = typeof arg;\n  if (type === 'function' || type === 'undefined') return '';\n  return format(arg, false, color, shell);\n};\n/*!\n * Debug print helper\n */\n\n\nfunction inspectable(representation) {\n  const ret = {\n    inspect: function () {\n      return representation;\n    }\n  };\n\n  if (util.inspect.custom) {\n    ret[util.inspect.custom] = ret.inspect;\n  }\n\n  return ret;\n}\n\nfunction map(o) {\n  return format(o, true);\n}\n\nfunction formatObjectId(x, key) {\n  x[key] = inspectable('ObjectId(\"' + x[key].toHexString() + '\")');\n}\n\nfunction formatDate(x, key, shell) {\n  if (shell) {\n    x[key] = inspectable('ISODate(\"' + x[key].toUTCString() + '\")');\n  } else {\n    x[key] = inspectable('new Date(\"' + x[key].toUTCString() + '\")');\n  }\n}\n\nfunction format(obj, sub, color, shell) {\n  if (obj && typeof obj.toBSON === 'function') {\n    obj = obj.toBSON();\n  }\n\n  if (obj == null) {\n    return obj;\n  }\n\n  const clone = require('../../helpers/clone');\n\n  let x = clone(obj, {\n    transform: false\n  });\n  const constructorName = getConstructorName(x);\n\n  if (constructorName === 'Binary') {\n    x = 'BinData(' + x.sub_type + ', \"' + x.toString('base64') + '\")';\n  } else if (constructorName === 'ObjectID') {\n    x = inspectable('ObjectId(\"' + x.toHexString() + '\")');\n  } else if (constructorName === 'Date') {\n    x = inspectable('new Date(\"' + x.toUTCString() + '\")');\n  } else if (constructorName === 'Object') {\n    const keys = Object.keys(x);\n    const numKeys = keys.length;\n    let key;\n\n    for (let i = 0; i < numKeys; ++i) {\n      key = keys[i];\n\n      if (x[key]) {\n        let error;\n\n        if (typeof x[key].toBSON === 'function') {\n          try {\n            // `session.toBSON()` throws an error. This means we throw errors\n            // in debug mode when using transactions, see gh-6712. As a\n            // workaround, catch `toBSON()` errors, try to serialize without\n            // `toBSON()`, and rethrow if serialization still fails.\n            x[key] = x[key].toBSON();\n          } catch (_error) {\n            error = _error;\n          }\n        }\n\n        const _constructorName = getConstructorName(x[key]);\n\n        if (_constructorName === 'Binary') {\n          x[key] = 'BinData(' + x[key].sub_type + ', \"' + x[key].buffer.toString('base64') + '\")';\n        } else if (_constructorName === 'Object') {\n          x[key] = format(x[key], true);\n        } else if (_constructorName === 'ObjectID') {\n          formatObjectId(x, key);\n        } else if (_constructorName === 'Date') {\n          formatDate(x, key, shell);\n        } else if (_constructorName === 'ClientSession') {\n          x[key] = inspectable('ClientSession(\"' + (x[key] && x[key].id && x[key].id.id && x[key].id.id.buffer || '').toString('hex') + '\")');\n        } else if (Array.isArray(x[key])) {\n          x[key] = x[key].map(map);\n        } else if (error != null) {\n          // If there was an error with `toBSON()` and the object wasn't\n          // already converted to a string representation, rethrow it.\n          // Open to better ideas on how to handle this.\n          throw error;\n        }\n      }\n    }\n  }\n\n  if (sub) {\n    return x;\n  }\n\n  return util.inspect(x, false, 10, color).replace(/\\n/g, '').replace(/\\s{2,}/g, ' ');\n}\n/**\n * Retrieves information about this collections indexes.\n *\n * @param {Function} callback\n * @method getIndexes\n * @api public\n */\n\n\nNativeCollection.prototype.getIndexes = NativeCollection.prototype.indexInformation;\n/*!\n * Module exports.\n */\n\nmodule.exports = NativeCollection;","map":{"version":3,"names":["MongooseCollection","require","MongooseError","Collection","ObjectId","getConstructorName","stream","util","NativeCollection","name","conn","options","collection","Promise","modelName","_closed","apply","arguments","prototype","__proto__","onOpen","_this","db","call","onClose","force","syncCollectionMethods","watch","find","aggregate","iter","i","args","Array","from","debug","base","lastArg","length","opId","$wasForceClosed","error","_args","callback","_shouldBufferCommands","buffer","Error","emit","_id","collectionName","method","promise","timeout","addQueue","slice","collectionOperationCallback","clearTimeout","concat","resolve","reject","err","res","bufferTimeoutMS","_getBufferTimeoutMS","setTimeout","removed","removeQueue","message","result","Writable","$printToStream","color","shell","$print","params","ret","then","key","Object","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","get","undefined","moduleName","functionCall","join","j","$format","unshift","console","info","write","arg","type","format","inspectable","representation","inspect","custom","map","o","formatObjectId","x","toHexString","formatDate","toUTCString","obj","sub","toBSON","clone","transform","constructorName","sub_type","toString","keys","numKeys","_error","_constructorName","id","isArray","replace","getIndexes","indexInformation","module","exports"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseCollection = require('../../collection');\nconst MongooseError = require('../../error/mongooseError');\nconst Collection = require('mongodb').Collection;\nconst ObjectId = require('./objectid');\nconst getConstructorName = require('../../helpers/getConstructorName');\nconst stream = require('stream');\nconst util = require('util');\n\n/**\n * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) collection implementation.\n *\n * All methods methods from the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver are copied and wrapped in queue management.\n *\n * @inherits Collection\n * @api private\n */\n\nfunction NativeCollection(name, conn, options) {\n  this.collection = null;\n  this.Promise = options.Promise || Promise;\n  this.modelName = options.modelName;\n  delete options.modelName;\n  this._closed = false;\n  MongooseCollection.apply(this, arguments);\n}\n\n/*!\n * Inherit from abstract Collection.\n */\n\nNativeCollection.prototype.__proto__ = MongooseCollection.prototype;\n\n/**\n * Called when the connection opens.\n *\n * @api private\n */\n\nNativeCollection.prototype.onOpen = function() {\n  const _this = this;\n\n  _this.collection = _this.conn.db.collection(_this.name);\n  MongooseCollection.prototype.onOpen.call(_this);\n  return _this.collection;\n};\n\n/**\n * Called when the connection closes\n *\n * @api private\n */\n\nNativeCollection.prototype.onClose = function(force) {\n  MongooseCollection.prototype.onClose.call(this, force);\n};\n\n/*!\n * ignore\n */\n\nconst syncCollectionMethods = { watch: true, find: true, aggregate: true };\n\n/*!\n * Copy the collection methods and make them subject to queues\n */\n\nfunction iter(i) {\n  NativeCollection.prototype[i] = function() {\n    const collection = this.collection;\n    const args = Array.from(arguments);\n    const _this = this;\n    const debug = _this &&\n      _this.conn &&\n      _this.conn.base &&\n      _this.conn.base.options &&\n      _this.conn.base.options.debug;\n    const lastArg = arguments[arguments.length - 1];\n    const opId = new ObjectId();\n\n    // If user force closed, queueing will hang forever. See #5664\n    if (this.conn.$wasForceClosed) {\n      const error = new MongooseError('Connection was force closed');\n      if (args.length > 0 &&\n        typeof args[args.length - 1] === 'function') {\n        args[args.length - 1](error);\n        return;\n      } else {\n        throw error;\n      }\n    }\n\n    let _args = args;\n    let callback = null;\n    if (this._shouldBufferCommands() && this.buffer) {\n      if (syncCollectionMethods[i] && typeof lastArg !== 'function') {\n        throw new Error('Collection method ' + i + ' is synchronous');\n      }\n\n      this.conn.emit('buffer', {\n        _id: opId,\n        modelName: _this.modelName,\n        collectionName: _this.name,\n        method: i,\n        args: args\n      });\n\n      let callback;\n      let _args = args;\n      let promise = null;\n      let timeout = null;\n      if (syncCollectionMethods[i]) {\n        this.addQueue(() => {\n          lastArg.call(this, null, this[i].apply(this, _args.slice(0, _args.length - 1)));\n        }, []);\n      } else if (typeof lastArg === 'function') {\n        callback = function collectionOperationCallback() {\n          if (timeout != null) {\n            clearTimeout(timeout);\n          }\n          return lastArg.apply(this, arguments);\n        };\n        _args = args.slice(0, args.length - 1).concat([callback]);\n      } else {\n        promise = new this.Promise((resolve, reject) => {\n          callback = function collectionOperationCallback(err, res) {\n            if (timeout != null) {\n              clearTimeout(timeout);\n            }\n            if (err != null) {\n              return reject(err);\n            }\n            resolve(res);\n          };\n          _args = args.concat([callback]);\n          this.addQueue(i, _args);\n        });\n      }\n\n      const bufferTimeoutMS = this._getBufferTimeoutMS();\n      timeout = setTimeout(() => {\n        const removed = this.removeQueue(i, _args);\n        if (removed) {\n          const message = 'Operation `' + this.name + '.' + i + '()` buffering timed out after ' +\n            bufferTimeoutMS + 'ms';\n          const err = new MongooseError(message);\n          this.conn.emit('buffer-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, error: err });\n          callback(err);\n        }\n      }, bufferTimeoutMS);\n\n      if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n        this.addQueue(i, _args);\n        return;\n      }\n\n      return promise;\n    } else if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n      callback = function collectionOperationCallback(err, res) {\n        if (err != null) {\n          _this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, error: err });\n        } else {\n          _this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, result: res });\n        }\n        return lastArg.apply(this, arguments);\n      };\n      _args = args.slice(0, args.length - 1).concat([callback]);\n    }\n\n    if (debug) {\n      if (typeof debug === 'function') {\n        debug.apply(_this,\n          [_this.name, i].concat(args.slice(0, args.length - 1)));\n      } else if (debug instanceof stream.Writable) {\n        this.$printToStream(_this.name, i, args, debug);\n      } else {\n        const color = debug.color == null ? true : debug.color;\n        const shell = debug.shell == null ? false : debug.shell;\n        this.$print(_this.name, i, args, color, shell);\n      }\n    }\n\n    this.conn.emit('operation-start', { _id: opId, modelName: _this.modelName, collectionName: this.name, method: i, params: _args });\n\n    try {\n      if (collection == null) {\n        const message = 'Cannot call `' + this.name + '.' + i + '()` before initial connection ' +\n          'is complete if `bufferCommands = false`. Make sure you `await mongoose.connect()` if ' +\n          'you have `bufferCommands = false`.';\n        throw new MongooseError(message);\n      }\n\n      if (syncCollectionMethods[i] && typeof lastArg === 'function') {\n        return lastArg.call(this, null, collection[i].apply(collection, _args.slice(0, _args.length - 1)));\n      }\n\n      const ret = collection[i].apply(collection, _args);\n      if (ret != null && typeof ret.then === 'function') {\n        return ret.then(\n          res => {\n            this.conn.emit('operation-end', { _id: opId, modelName: this.modelName, collectionName: this.name, method: i, result: res });\n            return res;\n          },\n          err => {\n            this.conn.emit('operation-end', { _id: opId, modelName: this.modelName, collectionName: this.name, method: i, error: err });\n            throw err;\n          }\n        );\n      }\n      return ret;\n    } catch (error) {\n      // Collection operation may throw because of max bson size, catch it here\n      // See gh-3906\n      if (typeof lastArg === 'function') {\n        return lastArg(error);\n      } else {\n        this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: this.name, method: i, error: error });\n\n        throw error;\n      }\n    }\n  };\n}\n\nfor (const key of Object.getOwnPropertyNames(Collection.prototype)) {\n  // Janky hack to work around gh-3005 until we can get rid of the mongoose\n  // collection abstraction\n  const descriptor = Object.getOwnPropertyDescriptor(Collection.prototype, key);\n  // Skip properties with getters because they may throw errors (gh-8528)\n  if (descriptor.get !== undefined) {\n    continue;\n  }\n  if (typeof Collection.prototype[key] !== 'function') {\n    continue;\n  }\n\n  iter(key);\n}\n\n/**\n * Debug print helper\n *\n * @api public\n * @method $print\n */\n\nNativeCollection.prototype.$print = function(name, i, args, color, shell) {\n  const moduleName = color ? '\\x1B[0;36mMongoose:\\x1B[0m ' : 'Mongoose: ';\n  const functionCall = [name, i].join('.');\n  const _args = [];\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j], color, shell));\n    }\n  }\n  const params = '(' + _args.join(', ') + ')';\n\n  console.info(moduleName + functionCall + params);\n};\n\n/**\n * Debug print helper\n *\n * @api public\n * @method $print\n */\n\nNativeCollection.prototype.$printToStream = function(name, i, args, stream) {\n  const functionCall = [name, i].join('.');\n  const _args = [];\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j]));\n    }\n  }\n  const params = '(' + _args.join(', ') + ')';\n\n  stream.write(functionCall + params, 'utf8');\n};\n\n/**\n * Formatter for debug print args\n *\n * @api public\n * @method $format\n */\n\nNativeCollection.prototype.$format = function(arg, color, shell) {\n  const type = typeof arg;\n  if (type === 'function' || type === 'undefined') return '';\n  return format(arg, false, color, shell);\n};\n\n/*!\n * Debug print helper\n */\n\nfunction inspectable(representation) {\n  const ret = {\n    inspect: function() { return representation; }\n  };\n  if (util.inspect.custom) {\n    ret[util.inspect.custom] = ret.inspect;\n  }\n  return ret;\n}\nfunction map(o) {\n  return format(o, true);\n}\nfunction formatObjectId(x, key) {\n  x[key] = inspectable('ObjectId(\"' + x[key].toHexString() + '\")');\n}\nfunction formatDate(x, key, shell) {\n  if (shell) {\n    x[key] = inspectable('ISODate(\"' + x[key].toUTCString() + '\")');\n  } else {\n    x[key] = inspectable('new Date(\"' + x[key].toUTCString() + '\")');\n  }\n}\nfunction format(obj, sub, color, shell) {\n  if (obj && typeof obj.toBSON === 'function') {\n    obj = obj.toBSON();\n  }\n  if (obj == null) {\n    return obj;\n  }\n\n  const clone = require('../../helpers/clone');\n  let x = clone(obj, { transform: false });\n  const constructorName = getConstructorName(x);\n\n  if (constructorName === 'Binary') {\n    x = 'BinData(' + x.sub_type + ', \"' + x.toString('base64') + '\")';\n  } else if (constructorName === 'ObjectID') {\n    x = inspectable('ObjectId(\"' + x.toHexString() + '\")');\n  } else if (constructorName === 'Date') {\n    x = inspectable('new Date(\"' + x.toUTCString() + '\")');\n  } else if (constructorName === 'Object') {\n    const keys = Object.keys(x);\n    const numKeys = keys.length;\n    let key;\n    for (let i = 0; i < numKeys; ++i) {\n      key = keys[i];\n      if (x[key]) {\n        let error;\n        if (typeof x[key].toBSON === 'function') {\n          try {\n            // `session.toBSON()` throws an error. This means we throw errors\n            // in debug mode when using transactions, see gh-6712. As a\n            // workaround, catch `toBSON()` errors, try to serialize without\n            // `toBSON()`, and rethrow if serialization still fails.\n            x[key] = x[key].toBSON();\n          } catch (_error) {\n            error = _error;\n          }\n        }\n        const _constructorName = getConstructorName(x[key]);\n        if (_constructorName === 'Binary') {\n          x[key] = 'BinData(' + x[key].sub_type + ', \"' +\n            x[key].buffer.toString('base64') + '\")';\n        } else if (_constructorName === 'Object') {\n          x[key] = format(x[key], true);\n        } else if (_constructorName === 'ObjectID') {\n          formatObjectId(x, key);\n        } else if (_constructorName === 'Date') {\n          formatDate(x, key, shell);\n        } else if (_constructorName === 'ClientSession') {\n          x[key] = inspectable('ClientSession(\"' +\n            (\n              x[key] &&\n              x[key].id &&\n              x[key].id.id &&\n              x[key].id.id.buffer || ''\n            ).toString('hex') + '\")');\n        } else if (Array.isArray(x[key])) {\n          x[key] = x[key].map(map);\n        } else if (error != null) {\n          // If there was an error with `toBSON()` and the object wasn't\n          // already converted to a string representation, rethrow it.\n          // Open to better ideas on how to handle this.\n          throw error;\n        }\n      }\n    }\n  }\n  if (sub) {\n    return x;\n  }\n\n  return util.\n    inspect(x, false, 10, color).\n    replace(/\\n/g, '').\n    replace(/\\s{2,}/g, ' ');\n}\n\n/**\n * Retrieves information about this collections indexes.\n *\n * @param {Function} callback\n * @method getIndexes\n * @api public\n */\n\nNativeCollection.prototype.getIndexes = NativeCollection.prototype.indexInformation;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = NativeCollection;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}