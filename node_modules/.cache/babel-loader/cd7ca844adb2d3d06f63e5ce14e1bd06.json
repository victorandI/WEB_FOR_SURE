{"ast":null,"code":"'use strict';\n/*!\n * ignore\n */\n\nmodule.exports = function (val) {\n  if (Array.isArray(val)) {\n    if (!val.every(v => typeof v === 'number' || typeof v === 'string')) {\n      throw new Error('$type array values must be strings or numbers');\n    }\n\n    return val;\n  }\n\n  if (typeof val !== 'number' && typeof val !== 'string') {\n    throw new Error('$type parameter must be number, string, or array of numbers and strings');\n  }\n\n  return val;\n};","map":{"version":3,"names":["module","exports","val","Array","isArray","every","v","Error"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/schema/operators/type.js"],"sourcesContent":["'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = function(val) {\n  if (Array.isArray(val)) {\n    if (!val.every(v => typeof v === 'number' || typeof v === 'string')) {\n      throw new Error('$type array values must be strings or numbers');\n    }\n    return val;\n  }\n\n  if (typeof val !== 'number' && typeof val !== 'string') {\n    throw new Error('$type parameter must be number, string, or array of numbers and strings');\n  }\n\n  return val;\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAc;EAC7B,IAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;IACtB,IAAI,CAACA,GAAG,CAACG,KAAJ,CAAUC,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,QAArD,CAAL,EAAqE;MACnE,MAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;IACD;;IACD,OAAOL,GAAP;EACD;;EAED,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,QAA9C,EAAwD;IACtD,MAAM,IAAIK,KAAJ,CAAU,yEAAV,CAAN;EACD;;EAED,OAAOL,GAAP;AACD,CAbD"},"metadata":{},"sourceType":"script"}