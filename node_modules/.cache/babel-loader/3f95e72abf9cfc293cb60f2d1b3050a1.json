{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nconst CastError = require('../error/cast');\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst ObjectExpectedError = require('../error/objectExpected');\n\nconst SchemaSubdocumentOptions = require('../options/SchemaSubdocumentOptions');\n\nconst SchemaType = require('../schematype');\n\nconst $exists = require('./operators/exists');\n\nconst castToNumber = require('./operators/helpers').castToNumber;\n\nconst discriminator = require('../helpers/model/discriminator');\n\nconst geospatial = require('./operators/geospatial');\n\nconst getConstructor = require('../helpers/discriminator/getConstructor');\n\nconst handleIdOption = require('../helpers/schema/handleIdOption');\n\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\n\nconst utils = require('../utils');\n\nlet Subdocument;\nmodule.exports = SubdocumentPath;\n/**\n * Single nested subdocument SchemaType constructor.\n *\n * @param {Schema} schema\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SubdocumentPath(schema, path, options) {\n  const schemaTypeIdOption = SubdocumentPath.defaultOptions && SubdocumentPath.defaultOptions._id;\n\n  if (schemaTypeIdOption != null) {\n    options = options || {};\n    options._id = schemaTypeIdOption;\n  }\n\n  schema = handleIdOption(schema, options);\n  this.caster = _createConstructor(schema);\n  this.caster.path = path;\n  this.caster.prototype.$basePath = path;\n  this.schema = schema;\n  this.$isSingleNested = true;\n  SchemaType.call(this, path, options, 'Embedded');\n}\n/*!\n * ignore\n */\n\n\nSubdocumentPath.prototype = Object.create(SchemaType.prototype);\nSubdocumentPath.prototype.constructor = SubdocumentPath;\nSubdocumentPath.prototype.OptionsConstructor = SchemaSubdocumentOptions;\n/*!\n * ignore\n */\n\nfunction _createConstructor(schema, baseClass) {\n  // lazy load\n  Subdocument || (Subdocument = require('../types/subdocument'));\n\n  const _embedded = function SingleNested(value, path, parent) {\n    this.$__parent = parent;\n    Subdocument.apply(this, arguments);\n\n    if (parent == null) {\n      return;\n    }\n\n    this.$session(parent.$session());\n  };\n\n  schema._preCompile();\n\n  const proto = baseClass != null ? baseClass.prototype : Subdocument.prototype;\n  _embedded.prototype = Object.create(proto);\n\n  _embedded.prototype.$__setSchema(schema);\n\n  _embedded.prototype.constructor = _embedded;\n  _embedded.schema = schema;\n  _embedded.$isSingleNested = true;\n  _embedded.events = new EventEmitter();\n\n  _embedded.prototype.toBSON = function () {\n    return this.toObject(internalToObjectOptions);\n  }; // apply methods\n\n\n  for (const i in schema.methods) {\n    _embedded.prototype[i] = schema.methods[i];\n  } // apply statics\n\n\n  for (const i in schema.statics) {\n    _embedded[i] = schema.statics[i];\n  }\n\n  for (const i in EventEmitter.prototype) {\n    _embedded[i] = EventEmitter.prototype[i];\n  }\n\n  return _embedded;\n}\n/*!\n * Special case for when users use a common location schema to represent\n * locations for use with $geoWithin.\n * https://docs.mongodb.org/manual/reference/operator/query/geoWithin/\n *\n * @param {Object} val\n * @api private\n */\n\n\nSubdocumentPath.prototype.$conditionalHandlers.$geoWithin = function handle$geoWithin(val) {\n  return {\n    $geometry: this.castForQuery(val.$geometry)\n  };\n};\n/*!\n * ignore\n */\n\n\nSubdocumentPath.prototype.$conditionalHandlers.$near = SubdocumentPath.prototype.$conditionalHandlers.$nearSphere = geospatial.cast$near;\nSubdocumentPath.prototype.$conditionalHandlers.$within = SubdocumentPath.prototype.$conditionalHandlers.$geoWithin = geospatial.cast$within;\nSubdocumentPath.prototype.$conditionalHandlers.$geoIntersects = geospatial.cast$geoIntersects;\nSubdocumentPath.prototype.$conditionalHandlers.$minDistance = castToNumber;\nSubdocumentPath.prototype.$conditionalHandlers.$maxDistance = castToNumber;\nSubdocumentPath.prototype.$conditionalHandlers.$exists = $exists;\n/**\n * Casts contents\n *\n * @param {Object} value\n * @api private\n */\n\nSubdocumentPath.prototype.cast = function (val, doc, init, priorVal, options) {\n  if (val && val.$isSingleNested && val.parent === doc) {\n    return val;\n  }\n\n  if (val != null && (typeof val !== 'object' || Array.isArray(val))) {\n    throw new ObjectExpectedError(this.path, val);\n  }\n\n  const Constructor = getConstructor(this.caster, val);\n  let subdoc; // Only pull relevant selected paths and pull out the base path\n\n  const parentSelected = doc && doc.$__ && doc.$__.selected || {};\n  const path = this.path;\n  const selected = Object.keys(parentSelected).reduce((obj, key) => {\n    if (key.startsWith(path + '.')) {\n      obj = obj || {};\n      obj[key.substring(path.length + 1)] = parentSelected[key];\n    }\n\n    return obj;\n  }, null);\n  options = Object.assign({}, options, {\n    priorDoc: priorVal\n  });\n\n  if (init) {\n    subdoc = new Constructor(void 0, selected, doc);\n    subdoc.$init(val);\n  } else {\n    if (Object.keys(val).length === 0) {\n      return new Constructor({}, selected, doc, undefined, options);\n    }\n\n    return new Constructor(val, selected, doc, undefined, options);\n  }\n\n  return subdoc;\n};\n/**\n * Casts contents for query\n *\n * @param {string} [$conditional] optional query operator (like `$eq` or `$in`)\n * @param {any} value\n * @api private\n */\n\n\nSubdocumentPath.prototype.castForQuery = function ($conditional, val, options) {\n  let handler;\n\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional);\n    }\n\n    return handler.call(this, val);\n  }\n\n  val = $conditional;\n\n  if (val == null) {\n    return val;\n  }\n\n  if (this.options.runSetters) {\n    val = this._applySetters(val);\n  }\n\n  const Constructor = getConstructor(this.caster, val);\n  const overrideStrict = options != null && options.strict != null ? options.strict : void 0;\n\n  try {\n    val = new Constructor(val, overrideStrict);\n  } catch (error) {\n    // Make sure we always wrap in a CastError (gh-6803)\n    if (!(error instanceof CastError)) {\n      throw new CastError('Embedded', val, this.path, error, this);\n    }\n\n    throw error;\n  }\n\n  return val;\n};\n/**\n * Async validation on this single nested doc.\n *\n * @api private\n */\n\n\nSubdocumentPath.prototype.doValidate = function (value, fn, scope, options) {\n  const Constructor = getConstructor(this.caster, value);\n\n  if (value && !(value instanceof Constructor)) {\n    value = new Constructor(value, null, scope != null && scope.$__ != null ? scope : null);\n  }\n\n  if (options && options.skipSchemaValidators) {\n    if (!value) {\n      return fn(null);\n    }\n\n    return value.validate(fn);\n  }\n\n  SchemaType.prototype.doValidate.call(this, value, function (error) {\n    if (error) {\n      return fn(error);\n    }\n\n    if (!value) {\n      return fn(null);\n    }\n\n    value.validate(fn);\n  }, scope, options);\n};\n/**\n * Synchronously validate this single nested doc\n *\n * @api private\n */\n\n\nSubdocumentPath.prototype.doValidateSync = function (value, scope, options) {\n  if (!options || !options.skipSchemaValidators) {\n    const schemaTypeError = SchemaType.prototype.doValidateSync.call(this, value, scope);\n\n    if (schemaTypeError) {\n      return schemaTypeError;\n    }\n  }\n\n  if (!value) {\n    return;\n  }\n\n  return value.validateSync();\n};\n/**\n * Adds a discriminator to this single nested subdocument.\n *\n * #### Example:\n *     const shapeSchema = Schema({ name: String }, { discriminatorKey: 'kind' });\n *     const schema = Schema({ shape: shapeSchema });\n *\n *     const singleNestedPath = parentSchema.path('shape');\n *     singleNestedPath.discriminator('Circle', Schema({ radius: Number }));\n *\n * @param {String} name\n * @param {Schema} schema fields to add to the schema for instances of this sub-class\n * @param {Object|string} [options] If string, same as `options.value`.\n * @param {String} [options.value] the string stored in the `discriminatorKey` property. If not specified, Mongoose uses the `name` parameter.\n * @param {Boolean} [options.clone=true] By default, `discriminator()` clones the given `schema`. Set to `false` to skip cloning.\n * @return {Function} the constructor Mongoose will use for creating instances of this discriminator model\n * @see discriminators /docs/discriminators.html\n * @api public\n */\n\n\nSubdocumentPath.prototype.discriminator = function (name, schema, options) {\n  options = options || {};\n  const value = utils.isPOJO(options) ? options.value : options;\n  const clone = typeof options.clone === 'boolean' ? options.clone : true;\n\n  if (schema.instanceOfSchema && clone) {\n    schema = schema.clone();\n  }\n\n  schema = discriminator(this.caster, name, schema, value);\n  this.caster.discriminators[name] = _createConstructor(schema, this.caster);\n  return this.caster.discriminators[name];\n};\n/**\n * Sets a default option for all SubdocumentPath instances.\n *\n * #### Example:\n *\n *     // Make all numbers have option `min` equal to 0.\n *     mongoose.Schema.Embedded.set('required', true);\n *\n * @param {String} option - The option you'd like to set the value for\n * @param {*} value - value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\n\nSubdocumentPath.defaultOptions = {};\nSubdocumentPath.set = SchemaType.set;\n/*!\n * ignore\n */\n\nSubdocumentPath.prototype.clone = function () {\n  const options = Object.assign({}, this.options);\n  const schematype = new this.constructor(this.schema, this.path, options);\n  schematype.validators = this.validators.slice();\n\n  if (this.requiredValidator !== undefined) {\n    schematype.requiredValidator = this.requiredValidator;\n  }\n\n  schematype.caster.discriminators = Object.assign({}, this.caster.discriminators);\n  return schematype;\n};","map":{"version":3,"names":["CastError","require","EventEmitter","ObjectExpectedError","SchemaSubdocumentOptions","SchemaType","$exists","castToNumber","discriminator","geospatial","getConstructor","handleIdOption","internalToObjectOptions","utils","Subdocument","module","exports","SubdocumentPath","schema","path","options","schemaTypeIdOption","defaultOptions","_id","caster","_createConstructor","prototype","$basePath","$isSingleNested","call","Object","create","constructor","OptionsConstructor","baseClass","_embedded","SingleNested","value","parent","$__parent","apply","arguments","$session","_preCompile","proto","$__setSchema","events","toBSON","toObject","i","methods","statics","$conditionalHandlers","$geoWithin","handle$geoWithin","val","$geometry","castForQuery","$near","$nearSphere","cast$near","$within","cast$within","$geoIntersects","cast$geoIntersects","$minDistance","$maxDistance","cast","doc","init","priorVal","Array","isArray","Constructor","subdoc","parentSelected","$__","selected","keys","reduce","obj","key","startsWith","substring","length","assign","priorDoc","$init","undefined","$conditional","handler","Error","runSetters","_applySetters","overrideStrict","strict","error","doValidate","fn","scope","skipSchemaValidators","validate","doValidateSync","schemaTypeError","validateSync","name","isPOJO","clone","instanceOfSchema","discriminators","set","schematype","validators","slice","requiredValidator"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/schema/SubdocumentPath.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst CastError = require('../error/cast');\nconst EventEmitter = require('events').EventEmitter;\nconst ObjectExpectedError = require('../error/objectExpected');\nconst SchemaSubdocumentOptions = require('../options/SchemaSubdocumentOptions');\nconst SchemaType = require('../schematype');\nconst $exists = require('./operators/exists');\nconst castToNumber = require('./operators/helpers').castToNumber;\nconst discriminator = require('../helpers/model/discriminator');\nconst geospatial = require('./operators/geospatial');\nconst getConstructor = require('../helpers/discriminator/getConstructor');\nconst handleIdOption = require('../helpers/schema/handleIdOption');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst utils = require('../utils');\n\nlet Subdocument;\n\nmodule.exports = SubdocumentPath;\n\n/**\n * Single nested subdocument SchemaType constructor.\n *\n * @param {Schema} schema\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SubdocumentPath(schema, path, options) {\n  const schemaTypeIdOption = SubdocumentPath.defaultOptions &&\n    SubdocumentPath.defaultOptions._id;\n  if (schemaTypeIdOption != null) {\n    options = options || {};\n    options._id = schemaTypeIdOption;\n  }\n\n  schema = handleIdOption(schema, options);\n\n  this.caster = _createConstructor(schema);\n  this.caster.path = path;\n  this.caster.prototype.$basePath = path;\n  this.schema = schema;\n  this.$isSingleNested = true;\n  SchemaType.call(this, path, options, 'Embedded');\n}\n\n/*!\n * ignore\n */\n\nSubdocumentPath.prototype = Object.create(SchemaType.prototype);\nSubdocumentPath.prototype.constructor = SubdocumentPath;\nSubdocumentPath.prototype.OptionsConstructor = SchemaSubdocumentOptions;\n\n/*!\n * ignore\n */\n\nfunction _createConstructor(schema, baseClass) {\n  // lazy load\n  Subdocument || (Subdocument = require('../types/subdocument'));\n\n  const _embedded = function SingleNested(value, path, parent) {\n    this.$__parent = parent;\n    Subdocument.apply(this, arguments);\n\n    if (parent == null) {\n      return;\n    }\n    this.$session(parent.$session());\n  };\n\n  schema._preCompile();\n\n  const proto = baseClass != null ? baseClass.prototype : Subdocument.prototype;\n  _embedded.prototype = Object.create(proto);\n  _embedded.prototype.$__setSchema(schema);\n  _embedded.prototype.constructor = _embedded;\n  _embedded.schema = schema;\n  _embedded.$isSingleNested = true;\n  _embedded.events = new EventEmitter();\n  _embedded.prototype.toBSON = function() {\n    return this.toObject(internalToObjectOptions);\n  };\n\n  // apply methods\n  for (const i in schema.methods) {\n    _embedded.prototype[i] = schema.methods[i];\n  }\n\n  // apply statics\n  for (const i in schema.statics) {\n    _embedded[i] = schema.statics[i];\n  }\n\n  for (const i in EventEmitter.prototype) {\n    _embedded[i] = EventEmitter.prototype[i];\n  }\n\n  return _embedded;\n}\n\n/*!\n * Special case for when users use a common location schema to represent\n * locations for use with $geoWithin.\n * https://docs.mongodb.org/manual/reference/operator/query/geoWithin/\n *\n * @param {Object} val\n * @api private\n */\n\nSubdocumentPath.prototype.$conditionalHandlers.$geoWithin = function handle$geoWithin(val) {\n  return { $geometry: this.castForQuery(val.$geometry) };\n};\n\n/*!\n * ignore\n */\n\nSubdocumentPath.prototype.$conditionalHandlers.$near =\nSubdocumentPath.prototype.$conditionalHandlers.$nearSphere = geospatial.cast$near;\n\nSubdocumentPath.prototype.$conditionalHandlers.$within =\nSubdocumentPath.prototype.$conditionalHandlers.$geoWithin = geospatial.cast$within;\n\nSubdocumentPath.prototype.$conditionalHandlers.$geoIntersects =\n  geospatial.cast$geoIntersects;\n\nSubdocumentPath.prototype.$conditionalHandlers.$minDistance = castToNumber;\nSubdocumentPath.prototype.$conditionalHandlers.$maxDistance = castToNumber;\n\nSubdocumentPath.prototype.$conditionalHandlers.$exists = $exists;\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @api private\n */\n\nSubdocumentPath.prototype.cast = function(val, doc, init, priorVal, options) {\n  if (val && val.$isSingleNested && val.parent === doc) {\n    return val;\n  }\n\n  if (val != null && (typeof val !== 'object' || Array.isArray(val))) {\n    throw new ObjectExpectedError(this.path, val);\n  }\n\n  const Constructor = getConstructor(this.caster, val);\n\n  let subdoc;\n\n  // Only pull relevant selected paths and pull out the base path\n  const parentSelected = doc && doc.$__ && doc.$__.selected || {};\n  const path = this.path;\n  const selected = Object.keys(parentSelected).reduce((obj, key) => {\n    if (key.startsWith(path + '.')) {\n      obj = obj || {};\n      obj[key.substring(path.length + 1)] = parentSelected[key];\n    }\n    return obj;\n  }, null);\n  options = Object.assign({}, options, { priorDoc: priorVal });\n  if (init) {\n    subdoc = new Constructor(void 0, selected, doc);\n    subdoc.$init(val);\n  } else {\n    if (Object.keys(val).length === 0) {\n      return new Constructor({}, selected, doc, undefined, options);\n    }\n\n    return new Constructor(val, selected, doc, undefined, options);\n  }\n\n  return subdoc;\n};\n\n/**\n * Casts contents for query\n *\n * @param {string} [$conditional] optional query operator (like `$eq` or `$in`)\n * @param {any} value\n * @api private\n */\n\nSubdocumentPath.prototype.castForQuery = function($conditional, val, options) {\n  let handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional);\n    }\n    return handler.call(this, val);\n  }\n  val = $conditional;\n  if (val == null) {\n    return val;\n  }\n\n  if (this.options.runSetters) {\n    val = this._applySetters(val);\n  }\n\n  const Constructor = getConstructor(this.caster, val);\n  const overrideStrict = options != null && options.strict != null ?\n    options.strict :\n    void 0;\n\n  try {\n    val = new Constructor(val, overrideStrict);\n  } catch (error) {\n    // Make sure we always wrap in a CastError (gh-6803)\n    if (!(error instanceof CastError)) {\n      throw new CastError('Embedded', val, this.path, error, this);\n    }\n    throw error;\n  }\n  return val;\n};\n\n/**\n * Async validation on this single nested doc.\n *\n * @api private\n */\n\nSubdocumentPath.prototype.doValidate = function(value, fn, scope, options) {\n  const Constructor = getConstructor(this.caster, value);\n\n  if (value && !(value instanceof Constructor)) {\n    value = new Constructor(value, null, (scope != null && scope.$__ != null) ? scope : null);\n  }\n\n  if (options && options.skipSchemaValidators) {\n    if (!value) {\n      return fn(null);\n    }\n    return value.validate(fn);\n  }\n\n  SchemaType.prototype.doValidate.call(this, value, function(error) {\n    if (error) {\n      return fn(error);\n    }\n    if (!value) {\n      return fn(null);\n    }\n\n    value.validate(fn);\n  }, scope, options);\n};\n\n/**\n * Synchronously validate this single nested doc\n *\n * @api private\n */\n\nSubdocumentPath.prototype.doValidateSync = function(value, scope, options) {\n  if (!options || !options.skipSchemaValidators) {\n    const schemaTypeError = SchemaType.prototype.doValidateSync.call(this, value, scope);\n    if (schemaTypeError) {\n      return schemaTypeError;\n    }\n  }\n  if (!value) {\n    return;\n  }\n  return value.validateSync();\n};\n\n/**\n * Adds a discriminator to this single nested subdocument.\n *\n * #### Example:\n *     const shapeSchema = Schema({ name: String }, { discriminatorKey: 'kind' });\n *     const schema = Schema({ shape: shapeSchema });\n *\n *     const singleNestedPath = parentSchema.path('shape');\n *     singleNestedPath.discriminator('Circle', Schema({ radius: Number }));\n *\n * @param {String} name\n * @param {Schema} schema fields to add to the schema for instances of this sub-class\n * @param {Object|string} [options] If string, same as `options.value`.\n * @param {String} [options.value] the string stored in the `discriminatorKey` property. If not specified, Mongoose uses the `name` parameter.\n * @param {Boolean} [options.clone=true] By default, `discriminator()` clones the given `schema`. Set to `false` to skip cloning.\n * @return {Function} the constructor Mongoose will use for creating instances of this discriminator model\n * @see discriminators /docs/discriminators.html\n * @api public\n */\n\nSubdocumentPath.prototype.discriminator = function(name, schema, options) {\n  options = options || {};\n  const value = utils.isPOJO(options) ? options.value : options;\n  const clone = typeof options.clone === 'boolean'\n    ? options.clone\n    : true;\n\n  if (schema.instanceOfSchema && clone) {\n    schema = schema.clone();\n  }\n\n  schema = discriminator(this.caster, name, schema, value);\n\n  this.caster.discriminators[name] = _createConstructor(schema, this.caster);\n\n  return this.caster.discriminators[name];\n};\n\n/**\n * Sets a default option for all SubdocumentPath instances.\n *\n * #### Example:\n *\n *     // Make all numbers have option `min` equal to 0.\n *     mongoose.Schema.Embedded.set('required', true);\n *\n * @param {String} option - The option you'd like to set the value for\n * @param {*} value - value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nSubdocumentPath.defaultOptions = {};\n\nSubdocumentPath.set = SchemaType.set;\n\n/*!\n * ignore\n */\n\nSubdocumentPath.prototype.clone = function() {\n  const options = Object.assign({}, this.options);\n  const schematype = new this.constructor(this.schema, this.path, options);\n  schematype.validators = this.validators.slice();\n  if (this.requiredValidator !== undefined) {\n    schematype.requiredValidator = this.requiredValidator;\n  }\n  schematype.caster.discriminators = Object.assign({}, this.caster.discriminators);\n  return schematype;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}