{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nconst EventEmitter = require('events').EventEmitter;\n/*!\n * ignore\n */\n\n\nclass ChangeStream extends EventEmitter {\n  constructor(changeStreamThunk, pipeline, options) {\n    super();\n    this.driverChangeStream = null;\n    this.closed = false;\n    this.bindedEvents = false;\n    this.pipeline = pipeline;\n    this.options = options; // This wrapper is necessary because of buffering.\n\n    changeStreamThunk((err, driverChangeStream) => {\n      if (err != null) {\n        this.emit('error', err);\n        return;\n      }\n\n      this.driverChangeStream = driverChangeStream;\n      this.emit('ready');\n    });\n  }\n\n  _bindEvents() {\n    if (this.bindedEvents) {\n      return;\n    }\n\n    this.bindedEvents = true;\n\n    if (this.driverChangeStream == null) {\n      this.once('ready', () => {\n        this.driverChangeStream.on('close', () => {\n          this.closed = true;\n        });\n        ['close', 'change', 'end', 'error'].forEach(ev => {\n          this.driverChangeStream.on(ev, data => this.emit(ev, data));\n        });\n      });\n      return;\n    }\n\n    this.driverChangeStream.on('close', () => {\n      this.closed = true;\n    });\n    ['close', 'change', 'end', 'error'].forEach(ev => {\n      this.driverChangeStream.on(ev, data => {\n        this.emit(ev, data);\n      });\n    });\n  }\n\n  hasNext(cb) {\n    return this.driverChangeStream.hasNext(cb);\n  }\n\n  next(cb) {\n    return this.driverChangeStream.next(cb);\n  }\n\n  on(event, handler) {\n    this._bindEvents();\n\n    return super.on(event, handler);\n  }\n\n  once(event, handler) {\n    this._bindEvents();\n\n    return super.once(event, handler);\n  }\n\n  _queue(cb) {\n    this.once('ready', () => cb());\n  }\n\n  close() {\n    this.closed = true;\n\n    if (this.driverChangeStream) {\n      this.driverChangeStream.close();\n    }\n  }\n\n}\n/*!\n * ignore\n */\n\n\nmodule.exports = ChangeStream;","map":{"version":3,"names":["EventEmitter","require","ChangeStream","constructor","changeStreamThunk","pipeline","options","driverChangeStream","closed","bindedEvents","err","emit","_bindEvents","once","on","forEach","ev","data","hasNext","cb","next","event","handler","_queue","close","module","exports"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/cursor/ChangeStream.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst EventEmitter = require('events').EventEmitter;\n\n/*!\n * ignore\n */\n\nclass ChangeStream extends EventEmitter {\n  constructor(changeStreamThunk, pipeline, options) {\n    super();\n\n    this.driverChangeStream = null;\n    this.closed = false;\n    this.bindedEvents = false;\n    this.pipeline = pipeline;\n    this.options = options;\n\n    // This wrapper is necessary because of buffering.\n    changeStreamThunk((err, driverChangeStream) => {\n      if (err != null) {\n        this.emit('error', err);\n        return;\n      }\n\n      this.driverChangeStream = driverChangeStream;\n      this.emit('ready');\n    });\n  }\n\n  _bindEvents() {\n    if (this.bindedEvents) {\n      return;\n    }\n\n    this.bindedEvents = true;\n\n    if (this.driverChangeStream == null) {\n      this.once('ready', () => {\n        this.driverChangeStream.on('close', () => {\n          this.closed = true;\n        });\n\n        ['close', 'change', 'end', 'error'].forEach(ev => {\n          this.driverChangeStream.on(ev, data => this.emit(ev, data));\n        });\n      });\n\n      return;\n    }\n\n    this.driverChangeStream.on('close', () => {\n      this.closed = true;\n    });\n\n    ['close', 'change', 'end', 'error'].forEach(ev => {\n      this.driverChangeStream.on(ev, data => {\n        this.emit(ev, data);\n      });\n    });\n  }\n\n  hasNext(cb) {\n    return this.driverChangeStream.hasNext(cb);\n  }\n\n  next(cb) {\n    return this.driverChangeStream.next(cb);\n  }\n\n  on(event, handler) {\n    this._bindEvents();\n    return super.on(event, handler);\n  }\n\n  once(event, handler) {\n    this._bindEvents();\n    return super.once(event, handler);\n  }\n\n  _queue(cb) {\n    this.once('ready', () => cb());\n  }\n\n  close() {\n    this.closed = true;\n    if (this.driverChangeStream) {\n      this.driverChangeStream.close();\n    }\n  }\n}\n\n/*!\n * ignore\n */\n\nmodule.exports = ChangeStream;\n"],"mappings":"AAAA;AAEA;AACA;AACA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,YAAvC;AAEA;AACA;AACA;;;AAEA,MAAME,YAAN,SAA2BF,YAA3B,CAAwC;EACtCG,WAAW,CAACC,iBAAD,EAAoBC,QAApB,EAA8BC,OAA9B,EAAuC;IAChD;IAEA,KAAKC,kBAAL,GAA0B,IAA1B;IACA,KAAKC,MAAL,GAAc,KAAd;IACA,KAAKC,YAAL,GAAoB,KAApB;IACA,KAAKJ,QAAL,GAAgBA,QAAhB;IACA,KAAKC,OAAL,GAAeA,OAAf,CAPgD,CAShD;;IACAF,iBAAiB,CAAC,CAACM,GAAD,EAAMH,kBAAN,KAA6B;MAC7C,IAAIG,GAAG,IAAI,IAAX,EAAiB;QACf,KAAKC,IAAL,CAAU,OAAV,EAAmBD,GAAnB;QACA;MACD;;MAED,KAAKH,kBAAL,GAA0BA,kBAA1B;MACA,KAAKI,IAAL,CAAU,OAAV;IACD,CARgB,CAAjB;EASD;;EAEDC,WAAW,GAAG;IACZ,IAAI,KAAKH,YAAT,EAAuB;MACrB;IACD;;IAED,KAAKA,YAAL,GAAoB,IAApB;;IAEA,IAAI,KAAKF,kBAAL,IAA2B,IAA/B,EAAqC;MACnC,KAAKM,IAAL,CAAU,OAAV,EAAmB,MAAM;QACvB,KAAKN,kBAAL,CAAwBO,EAAxB,CAA2B,OAA3B,EAAoC,MAAM;UACxC,KAAKN,MAAL,GAAc,IAAd;QACD,CAFD;QAIA,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,EAA2B,OAA3B,EAAoCO,OAApC,CAA4CC,EAAE,IAAI;UAChD,KAAKT,kBAAL,CAAwBO,EAAxB,CAA2BE,EAA3B,EAA+BC,IAAI,IAAI,KAAKN,IAAL,CAAUK,EAAV,EAAcC,IAAd,CAAvC;QACD,CAFD;MAGD,CARD;MAUA;IACD;;IAED,KAAKV,kBAAL,CAAwBO,EAAxB,CAA2B,OAA3B,EAAoC,MAAM;MACxC,KAAKN,MAAL,GAAc,IAAd;IACD,CAFD;IAIA,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,EAA2B,OAA3B,EAAoCO,OAApC,CAA4CC,EAAE,IAAI;MAChD,KAAKT,kBAAL,CAAwBO,EAAxB,CAA2BE,EAA3B,EAA+BC,IAAI,IAAI;QACrC,KAAKN,IAAL,CAAUK,EAAV,EAAcC,IAAd;MACD,CAFD;IAGD,CAJD;EAKD;;EAEDC,OAAO,CAACC,EAAD,EAAK;IACV,OAAO,KAAKZ,kBAAL,CAAwBW,OAAxB,CAAgCC,EAAhC,CAAP;EACD;;EAEDC,IAAI,CAACD,EAAD,EAAK;IACP,OAAO,KAAKZ,kBAAL,CAAwBa,IAAxB,CAA6BD,EAA7B,CAAP;EACD;;EAEDL,EAAE,CAACO,KAAD,EAAQC,OAAR,EAAiB;IACjB,KAAKV,WAAL;;IACA,OAAO,MAAME,EAAN,CAASO,KAAT,EAAgBC,OAAhB,CAAP;EACD;;EAEDT,IAAI,CAACQ,KAAD,EAAQC,OAAR,EAAiB;IACnB,KAAKV,WAAL;;IACA,OAAO,MAAMC,IAAN,CAAWQ,KAAX,EAAkBC,OAAlB,CAAP;EACD;;EAEDC,MAAM,CAACJ,EAAD,EAAK;IACT,KAAKN,IAAL,CAAU,OAAV,EAAmB,MAAMM,EAAE,EAA3B;EACD;;EAEDK,KAAK,GAAG;IACN,KAAKhB,MAAL,GAAc,IAAd;;IACA,IAAI,KAAKD,kBAAT,EAA6B;MAC3B,KAAKA,kBAAL,CAAwBiB,KAAxB;IACD;EACF;;AAjFqC;AAoFxC;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiBxB,YAAjB"},"metadata":{},"sourceType":"script"}