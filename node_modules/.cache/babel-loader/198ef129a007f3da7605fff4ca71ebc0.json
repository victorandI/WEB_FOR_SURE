{"ast":null,"code":"'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n/**\n * The options defined on an ObjectId schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ testId: mongoose.ObjectId });\n *     schema.path('testId').options; // SchemaObjectIdOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaObjectIdOptions\n */\n\n\nclass SchemaObjectIdOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n/**\n * If truthy, uses Mongoose's default built-in ObjectId path.\n *\n * @api public\n * @property auto\n * @memberOf SchemaObjectIdOptions\n * @type Boolean\n * @instance\n */\n\n\nObject.defineProperty(SchemaObjectIdOptions.prototype, 'auto', opts);\n/**\n * Sets default [populate options](/docs/populate.html#query-conditions).\n *\n * #### Example:\n *     const schema = new Schema({\n *       child: {\n *         type: 'ObjectId',\n *         ref: 'Child',\n *         populate: { select: 'name' }\n *       }\n *     });\n *     const Parent = mongoose.model('Parent', schema);\n *\n *     // Automatically adds `.select('name')`\n *     Parent.findOne().populate('child');\n *\n * @api public\n * @property populate\n * @memberOf SchemaObjectIdOptions\n * @type Object\n * @instance\n */\n\nObject.defineProperty(SchemaObjectIdOptions.prototype, 'populate', opts);\n/*!\n * ignore\n */\n\nmodule.exports = SchemaObjectIdOptions;","map":{"version":3,"names":["SchemaTypeOptions","require","SchemaObjectIdOptions","opts","Object","defineProperty","prototype","module","exports"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/options/SchemaObjectIdOptions.js"],"sourcesContent":["'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on an ObjectId schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ testId: mongoose.ObjectId });\n *     schema.path('testId').options; // SchemaObjectIdOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaObjectIdOptions\n */\n\nclass SchemaObjectIdOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If truthy, uses Mongoose's default built-in ObjectId path.\n *\n * @api public\n * @property auto\n * @memberOf SchemaObjectIdOptions\n * @type Boolean\n * @instance\n */\n\nObject.defineProperty(SchemaObjectIdOptions.prototype, 'auto', opts);\n\n/**\n * Sets default [populate options](/docs/populate.html#query-conditions).\n *\n * #### Example:\n *     const schema = new Schema({\n *       child: {\n *         type: 'ObjectId',\n *         ref: 'Child',\n *         populate: { select: 'name' }\n *       }\n *     });\n *     const Parent = mongoose.model('Parent', schema);\n *\n *     // Automatically adds `.select('name')`\n *     Parent.findOne().populate('child');\n *\n * @api public\n * @property populate\n * @memberOf SchemaObjectIdOptions\n * @type Object\n * @instance\n */\n\nObject.defineProperty(SchemaObjectIdOptions.prototype, 'populate', opts);\n\n/*!\n * ignore\n */\n\nmodule.exports = SchemaObjectIdOptions;"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,qBAAN,SAAoCF,iBAApC,CAAsD;;AAEtD,MAAMG,IAAI,GAAGF,OAAO,CAAC,mBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,cAAP,CAAsBH,qBAAqB,CAACI,SAA5C,EAAuD,MAAvD,EAA+DH,IAA/D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,cAAP,CAAsBH,qBAAqB,CAACI,SAA5C,EAAuD,UAAvD,EAAmEH,IAAnE;AAEA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAP,GAAiBN,qBAAjB"},"metadata":{},"sourceType":"script"}