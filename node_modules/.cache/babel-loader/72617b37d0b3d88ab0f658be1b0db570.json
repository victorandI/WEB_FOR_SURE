{"ast":null,"code":"/* eslint strict:off */\n\n/* eslint no-var: off */\n\n/* eslint no-redeclare: off */\nvar stringToParts = require('./stringToParts'); // These properties are special and can open client libraries to security\n// issues\n\n\nvar ignoreProperties = ['__proto__', 'constructor', 'prototype'];\n/**\n * Returns the value of object `o` at the given `path`.\n *\n * ####Example:\n *\n *     var obj = {\n *         comments: [\n *             { title: 'exciting!', _doc: { title: 'great!' }}\n *           , { title: 'number dos' }\n *         ]\n *     }\n *\n *     mpath.get('comments.0.title', o)         // 'exciting!'\n *     mpath.get('comments.0.title', o, '_doc') // 'great!'\n *     mpath.get('comments.title', o)           // ['exciting!', 'number dos']\n *\n *     // summary\n *     mpath.get(path, o)\n *     mpath.get(path, o, special)\n *     mpath.get(path, o, map)\n *     mpath.get(path, o, special, map)\n *\n * @param {String} path\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which receives each individual found value. The value returned from `map` is used in the original values place.\n */\n\nexports.get = function (path, o, special, map) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n  var parts = 'string' == typeof path ? stringToParts(path) : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var obj = o,\n      part;\n\n  for (var i = 0; i < parts.length; ++i) {\n    part = parts[i];\n\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      // reading a property from the array items\n      var paths = parts.slice(i); // Need to `concat()` to avoid `map()` calling a constructor of an array\n      // subclass\n\n      return [].concat(obj).map(function (item) {\n        return item ? exports.get(paths, item, special || lookup, map) : map(undefined);\n      });\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      var _from = special && obj[special] ? obj[special] : obj;\n\n      obj = _from instanceof Map ? _from.get(part) : _from[part];\n    }\n\n    if (!obj) return map(obj);\n  }\n\n  return map(obj);\n};\n/**\n * Returns true if `in` returns true for every piece of the path\n *\n * @param {String} path\n * @param {Object} o\n */\n\n\nexports.has = function (path, o) {\n  var parts = typeof path === 'string' ? stringToParts(path) : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var len = parts.length;\n  var cur = o;\n\n  for (var i = 0; i < len; ++i) {\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\n    }\n\n    if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n      return false;\n    }\n\n    cur = cur[parts[i]];\n  }\n\n  return true;\n};\n/**\n * Deletes the last piece of `path`\n *\n * @param {String} path\n * @param {Object} o\n */\n\n\nexports.unset = function (path, o) {\n  var parts = typeof path === 'string' ? stringToParts(path) : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var len = parts.length;\n  var cur = o;\n\n  for (var i = 0; i < len; ++i) {\n    if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n      return false;\n    }\n\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\n    } // Disallow any updates to __proto__ or special properties.\n\n\n    if (ignoreProperties.indexOf(parts[i]) !== -1) {\n      return false;\n    }\n\n    if (i === len - 1) {\n      delete cur[parts[i]];\n      return true;\n    }\n\n    cur = cur instanceof Map ? cur.get(parts[i]) : cur[parts[i]];\n  }\n\n  return true;\n};\n/**\n * Sets the `val` at the given `path` of object `o`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which is passed each individual value before setting it. The value returned from `map` is used in the original values place.\n */\n\n\nexports.set = function (path, val, o, special, map, _copying) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n  var parts = 'string' == typeof path ? stringToParts(path) : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  if (null == o) return;\n\n  for (var i = 0; i < parts.length; ++i) {\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\n    } // Silently ignore any updates to `__proto__`, these are potentially\n    // dangerous if using mpath with unsanitized data.\n\n\n    if (ignoreProperties.indexOf(parts[i]) !== -1) {\n      return;\n    }\n  } // the existance of $ in a path tells us if the user desires\n  // the copying of an array instead of setting each value of\n  // the array to the one by one to matching positions of the\n  // current array. Unless the user explicitly opted out by passing\n  // false, see Automattic/mongoose#6273\n\n\n  var copy = _copying || /\\$/.test(path) && _copying !== false,\n      obj = o,\n      part;\n\n  for (var i = 0, len = parts.length - 1; i < len; ++i) {\n    part = parts[i];\n\n    if ('$' == part) {\n      if (i == len - 1) {\n        break;\n      } else {\n        continue;\n      }\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      var paths = parts.slice(i);\n\n      if (!copy && Array.isArray(val)) {\n        for (var j = 0; j < obj.length && j < val.length; ++j) {\n          // assignment of single values of array\n          exports.set(paths, val[j], obj[j], special || lookup, map, copy);\n        }\n      } else {\n        for (var j = 0; j < obj.length; ++j) {\n          // assignment of entire value\n          exports.set(paths, val, obj[j], special || lookup, map, copy);\n        }\n      }\n\n      return;\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      var _to = special && obj[special] ? obj[special] : obj;\n\n      obj = _to instanceof Map ? _to.get(part) : _to[part];\n    }\n\n    if (!obj) return;\n  } // process the last property of the path\n\n\n  part = parts[len]; // use the special property if exists\n\n  if (special && obj[special]) {\n    obj = obj[special];\n  } // set the value on the last branch\n\n\n  if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n    if (!copy && Array.isArray(val)) {\n      _setArray(obj, val, part, lookup, special, map);\n    } else {\n      for (var j = 0; j < obj.length; ++j) {\n        var item = obj[j];\n\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val);\n          }\n        }\n      }\n    }\n  } else {\n    if (lookup) {\n      lookup(obj, part, map(val));\n    } else if (obj instanceof Map) {\n      obj.set(part, map(val));\n    } else {\n      obj[part] = map(val);\n    }\n  }\n};\n/*!\n * Split a string path into components delimited by '.' or\n * '[\\d+]'\n *\n * #### Example:\n *     stringToParts('foo[0].bar.1'); // ['foo', '0', 'bar', '1']\n */\n\n\nexports.stringToParts = stringToParts;\n/*!\n * Recursively set nested arrays\n */\n\nfunction _setArray(obj, val, part, lookup, special, map) {\n  for (var item, j = 0; j < obj.length && j < val.length; ++j) {\n    item = obj[j];\n\n    if (Array.isArray(item) && Array.isArray(val[j])) {\n      _setArray(item, val[j], part, lookup, special, map);\n    } else if (item) {\n      if (lookup) {\n        lookup(item, part, map(val[j]));\n      } else {\n        if (item[special]) item = item[special];\n        item[part] = map(val[j]);\n      }\n    }\n  }\n}\n/*!\n * Returns the value passed to it.\n */\n\n\nfunction K(v) {\n  return v;\n}","map":{"version":3,"names":["stringToParts","require","ignoreProperties","exports","get","path","o","special","map","lookup","length","undefined","K","parts","Array","isArray","TypeError","obj","part","i","test","paths","slice","concat","item","_from","Map","has","len","cur","unset","indexOf","set","val","_copying","copy","j","_to","_setArray","v"],"sources":["B:/web_project_react/web_car_react/node_modules/mpath/lib/index.js"],"sourcesContent":["/* eslint strict:off */\n/* eslint no-var: off */\n/* eslint no-redeclare: off */\n\nvar stringToParts = require('./stringToParts');\n\n// These properties are special and can open client libraries to security\n// issues\nvar ignoreProperties = ['__proto__', 'constructor', 'prototype'];\n\n/**\n * Returns the value of object `o` at the given `path`.\n *\n * ####Example:\n *\n *     var obj = {\n *         comments: [\n *             { title: 'exciting!', _doc: { title: 'great!' }}\n *           , { title: 'number dos' }\n *         ]\n *     }\n *\n *     mpath.get('comments.0.title', o)         // 'exciting!'\n *     mpath.get('comments.0.title', o, '_doc') // 'great!'\n *     mpath.get('comments.title', o)           // ['exciting!', 'number dos']\n *\n *     // summary\n *     mpath.get(path, o)\n *     mpath.get(path, o, special)\n *     mpath.get(path, o, map)\n *     mpath.get(path, o, special, map)\n *\n * @param {String} path\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which receives each individual found value. The value returned from `map` is used in the original values place.\n */\n\nexports.get = function(path, o, special, map) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? stringToParts(path)\n    : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var obj = o,\n      part;\n\n  for (var i = 0; i < parts.length; ++i) {\n    part = parts[i];\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      // reading a property from the array items\n      var paths = parts.slice(i);\n\n      // Need to `concat()` to avoid `map()` calling a constructor of an array\n      // subclass\n      return [].concat(obj).map(function(item) {\n        return item\n          ? exports.get(paths, item, special || lookup, map)\n          : map(undefined);\n      });\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      var _from = special && obj[special] ? obj[special] : obj;\n      obj = _from instanceof Map ?\n        _from.get(part) :\n        _from[part];\n    }\n\n    if (!obj) return map(obj);\n  }\n\n  return map(obj);\n};\n\n/**\n * Returns true if `in` returns true for every piece of the path\n *\n * @param {String} path\n * @param {Object} o\n */\n\nexports.has = function(path, o) {\n  var parts = typeof path === 'string' ?\n    stringToParts(path) :\n    path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var len = parts.length;\n  var cur = o;\n  for (var i = 0; i < len; ++i) {\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\n    }\n    if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n      return false;\n    }\n    cur = cur[parts[i]];\n  }\n\n  return true;\n};\n\n/**\n * Deletes the last piece of `path`\n *\n * @param {String} path\n * @param {Object} o\n */\n\nexports.unset = function(path, o) {\n  var parts = typeof path === 'string' ?\n    stringToParts(path) :\n    path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var len = parts.length;\n  var cur = o;\n  for (var i = 0; i < len; ++i) {\n    if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n      return false;\n    }\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\n    }\n    // Disallow any updates to __proto__ or special properties.\n    if (ignoreProperties.indexOf(parts[i]) !== -1) {\n      return false;\n    }\n    if (i === len - 1) {\n      delete cur[parts[i]];\n      return true;\n    }\n    cur = cur instanceof Map ? cur.get(parts[i]) : cur[parts[i]];\n  }\n\n  return true;\n};\n\n/**\n * Sets the `val` at the given `path` of object `o`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which is passed each individual value before setting it. The value returned from `map` is used in the original values place.\n */\n\nexports.set = function(path, val, o, special, map, _copying) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? stringToParts(path)\n    : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  if (null == o) return;\n\n  for (var i = 0; i < parts.length; ++i) {\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\n    }\n    // Silently ignore any updates to `__proto__`, these are potentially\n    // dangerous if using mpath with unsanitized data.\n    if (ignoreProperties.indexOf(parts[i]) !== -1) {\n      return;\n    }\n  }\n\n  // the existance of $ in a path tells us if the user desires\n  // the copying of an array instead of setting each value of\n  // the array to the one by one to matching positions of the\n  // current array. Unless the user explicitly opted out by passing\n  // false, see Automattic/mongoose#6273\n  var copy = _copying || (/\\$/.test(path) && _copying !== false),\n      obj = o,\n      part;\n\n  for (var i = 0, len = parts.length - 1; i < len; ++i) {\n    part = parts[i];\n\n    if ('$' == part) {\n      if (i == len - 1) {\n        break;\n      } else {\n        continue;\n      }\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      var paths = parts.slice(i);\n      if (!copy && Array.isArray(val)) {\n        for (var j = 0; j < obj.length && j < val.length; ++j) {\n          // assignment of single values of array\n          exports.set(paths, val[j], obj[j], special || lookup, map, copy);\n        }\n      } else {\n        for (var j = 0; j < obj.length; ++j) {\n          // assignment of entire value\n          exports.set(paths, val, obj[j], special || lookup, map, copy);\n        }\n      }\n      return;\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      var _to = special && obj[special] ? obj[special] : obj;\n      obj = _to instanceof Map ?\n        _to.get(part) :\n        _to[part];\n    }\n\n    if (!obj) return;\n  }\n\n  // process the last property of the path\n\n  part = parts[len];\n\n  // use the special property if exists\n  if (special && obj[special]) {\n    obj = obj[special];\n  }\n\n  // set the value on the last branch\n  if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n    if (!copy && Array.isArray(val)) {\n      _setArray(obj, val, part, lookup, special, map);\n    } else {\n      for (var j = 0; j < obj.length; ++j) {\n        var item = obj[j];\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val);\n          }\n        }\n      }\n    }\n  } else {\n    if (lookup) {\n      lookup(obj, part, map(val));\n    } else if (obj instanceof Map) {\n      obj.set(part, map(val));\n    } else {\n      obj[part] = map(val);\n    }\n  }\n};\n\n/*!\n * Split a string path into components delimited by '.' or\n * '[\\d+]'\n *\n * #### Example:\n *     stringToParts('foo[0].bar.1'); // ['foo', '0', 'bar', '1']\n */\n\nexports.stringToParts = stringToParts;\n\n/*!\n * Recursively set nested arrays\n */\n\nfunction _setArray(obj, val, part, lookup, special, map) {\n  for (var item, j = 0; j < obj.length && j < val.length; ++j) {\n    item = obj[j];\n    if (Array.isArray(item) && Array.isArray(val[j])) {\n      _setArray(item, val[j], part, lookup, special, map);\n    } else if (item) {\n      if (lookup) {\n        lookup(item, part, map(val[j]));\n      } else {\n        if (item[special]) item = item[special];\n        item[part] = map(val[j]);\n      }\n    }\n  }\n}\n\n/*!\n * Returns the value passed to it.\n */\n\nfunction K(v) {\n  return v;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}