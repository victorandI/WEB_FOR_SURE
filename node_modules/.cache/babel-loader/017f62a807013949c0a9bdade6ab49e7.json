{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DropDatabaseOperation = exports.DropCollectionOperation = void 0;\n\nconst command_1 = require(\"./command\");\n\nconst operation_1 = require(\"./operation\");\n/** @internal */\n\n\nclass DropCollectionOperation extends command_1.CommandOperation {\n  constructor(db, name, options) {\n    super(db, options);\n    this.options = options;\n    this.name = name;\n  }\n\n  execute(server, session, callback) {\n    super.executeCommand(server, session, {\n      drop: this.name\n    }, (err, result) => {\n      if (err) return callback(err);\n      if (result.ok) return callback(undefined, true);\n      callback(undefined, false);\n    });\n  }\n\n}\n\nexports.DropCollectionOperation = DropCollectionOperation;\n/** @internal */\n\nclass DropDatabaseOperation extends command_1.CommandOperation {\n  constructor(db, options) {\n    super(db, options);\n    this.options = options;\n  }\n\n  execute(server, session, callback) {\n    super.executeCommand(server, session, {\n      dropDatabase: 1\n    }, (err, result) => {\n      if (err) return callback(err);\n      if (result.ok) return callback(undefined, true);\n      callback(undefined, false);\n    });\n  }\n\n}\n\nexports.DropDatabaseOperation = DropDatabaseOperation;\n(0, operation_1.defineAspects)(DropCollectionOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DropDatabaseOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"mappings":";;;;;;;AAIA;;AACA;AAKA;;;AACA,MAAaA,uBAAb,SAA6CC,0BAA7C,CAAsE;EAIpEC,YAAYC,EAAZ,EAAoBC,IAApB,EAAkCC,OAAlC,EAAgE;IAC9D,MAAMF,EAAN,EAAUE,OAAV;IACA,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKD,IAAL,GAAYA,IAAZ;EACD;;EAEQE,OAAO,CACdC,MADc,EAEdC,OAFc,EAGdC,QAHc,EAGa;IAE3B,MAAMC,cAAN,CAAqBH,MAArB,EAA6BC,OAA7B,EAAsC;MAAEG,IAAI,EAAE,KAAKP;IAAb,CAAtC,EAA2D,CAACQ,GAAD,EAAMC,MAAN,KAAgB;MACzE,IAAID,GAAJ,EAAS,OAAOH,QAAQ,CAACG,GAAD,CAAf;MACT,IAAIC,MAAM,CAACC,EAAX,EAAe,OAAOL,QAAQ,CAACM,SAAD,EAAY,IAAZ,CAAf;MACfN,QAAQ,CAACM,SAAD,EAAY,KAAZ,CAAR;IACD,CAJD;EAKD;;AApBmE;;AAAtEC;AA0BA;;AACA,MAAaC,qBAAb,SAA2ChB,0BAA3C,CAAoE;EAGlEC,YAAYC,EAAZ,EAAoBE,OAApB,EAAgD;IAC9C,MAAMF,EAAN,EAAUE,OAAV;IACA,KAAKA,OAAL,GAAeA,OAAf;EACD;;EACQC,OAAO,CACdC,MADc,EAEdC,OAFc,EAGdC,QAHc,EAGa;IAE3B,MAAMC,cAAN,CAAqBH,MAArB,EAA6BC,OAA7B,EAAsC;MAAEU,YAAY,EAAE;IAAhB,CAAtC,EAA2D,CAACN,GAAD,EAAMC,MAAN,KAAgB;MACzE,IAAID,GAAJ,EAAS,OAAOH,QAAQ,CAACG,GAAD,CAAf;MACT,IAAIC,MAAM,CAACC,EAAX,EAAe,OAAOL,QAAQ,CAACM,SAAD,EAAY,IAAZ,CAAf;MACfN,QAAQ,CAACM,SAAD,EAAY,KAAZ,CAAR;IACD,CAJD;EAKD;;AAjBiE;;AAApEC;AAoBA,+BAAchB,uBAAd,EAAuC,CAACmB,mBAAOC,eAAR,CAAvC;AACA,+BAAcH,qBAAd,EAAqC,CAACE,mBAAOC,eAAR,CAArC","names":["DropCollectionOperation","command_1","constructor","db","name","options","execute","server","session","callback","executeCommand","drop","err","result","ok","undefined","exports","DropDatabaseOperation","dropDatabase","operation_1","WRITE_OPERATION"],"sources":["B:\\web_project_react\\web_car_react\\node_modules\\mongodb\\src\\operations\\drop.ts"],"sourcesContent":["import type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport type DropCollectionOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropCollectionOperation extends CommandOperation<boolean> {\n  override options: DropCollectionOptions;\n  name: string;\n\n  constructor(db: Db, name: string, options: DropCollectionOptions) {\n    super(db, options);\n    this.options = options;\n    this.name = name;\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<boolean>\n  ): void {\n    super.executeCommand(server, session, { drop: this.name }, (err, result) => {\n      if (err) return callback(err);\n      if (result.ok) return callback(undefined, true);\n      callback(undefined, false);\n    });\n  }\n}\n\n/** @public */\nexport type DropDatabaseOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropDatabaseOperation extends CommandOperation<boolean> {\n  override options: DropDatabaseOptions;\n\n  constructor(db: Db, options: DropDatabaseOptions) {\n    super(db, options);\n    this.options = options;\n  }\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<boolean>\n  ): void {\n    super.executeCommand(server, session, { dropDatabase: 1 }, (err, result) => {\n      if (err) return callback(err);\n      if (result.ok) return callback(undefined, true);\n      callback(undefined, false);\n    });\n  }\n}\n\ndefineAspects(DropCollectionOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropDatabaseOperation, [Aspect.WRITE_OPERATION]);\n"]},"metadata":{},"sourceType":"script"}