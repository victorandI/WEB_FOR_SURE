{"ast":null,"code":"/**\n * The default built-in validator error messages. These may be customized.\n *\n *     // customize within each schema or globally like so\n *     const mongoose = require('mongoose');\n *     mongoose.Error.messages.String.enum  = \"Your custom message for {PATH}.\";\n *\n * As you might have noticed, error messages support basic templating\n *\n * - `{PATH}` is replaced with the invalid document path\n * - `{VALUE}` is replaced with the invalid value\n * - `{TYPE}` is replaced with the validator type such as \"regexp\", \"min\", or \"user defined\"\n * - `{MIN}` is replaced with the declared min value for the Number.min validator\n * - `{MAX}` is replaced with the declared max value for the Number.max validator\n *\n * Click the \"show code\" link below to see all defaults.\n *\n * @static messages\n * @receiver MongooseError\n * @api public\n */\n'use strict';\n\nconst msg = module.exports = exports = {};\nmsg.DocumentNotFoundError = null;\nmsg.general = {};\nmsg.general.default = 'Validator failed for path `{PATH}` with value `{VALUE}`';\nmsg.general.required = 'Path `{PATH}` is required.';\nmsg.Number = {};\nmsg.Number.min = 'Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).';\nmsg.Number.max = 'Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).';\nmsg.Number.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\nmsg.Date = {};\nmsg.Date.min = 'Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).';\nmsg.Date.max = 'Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).';\nmsg.String = {};\nmsg.String.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\nmsg.String.match = 'Path `{PATH}` is invalid ({VALUE}).';\nmsg.String.minlength = 'Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).';\nmsg.String.maxlength = 'Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).';","map":{"version":3,"names":["msg","module","exports","DocumentNotFoundError","general","default","required","Number","min","max","enum","Date","String","match","minlength","maxlength"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/error/messages.js"],"sourcesContent":["\n/**\n * The default built-in validator error messages. These may be customized.\n *\n *     // customize within each schema or globally like so\n *     const mongoose = require('mongoose');\n *     mongoose.Error.messages.String.enum  = \"Your custom message for {PATH}.\";\n *\n * As you might have noticed, error messages support basic templating\n *\n * - `{PATH}` is replaced with the invalid document path\n * - `{VALUE}` is replaced with the invalid value\n * - `{TYPE}` is replaced with the validator type such as \"regexp\", \"min\", or \"user defined\"\n * - `{MIN}` is replaced with the declared min value for the Number.min validator\n * - `{MAX}` is replaced with the declared max value for the Number.max validator\n *\n * Click the \"show code\" link below to see all defaults.\n *\n * @static messages\n * @receiver MongooseError\n * @api public\n */\n\n'use strict';\n\nconst msg = module.exports = exports = {};\n\nmsg.DocumentNotFoundError = null;\n\nmsg.general = {};\nmsg.general.default = 'Validator failed for path `{PATH}` with value `{VALUE}`';\nmsg.general.required = 'Path `{PATH}` is required.';\n\nmsg.Number = {};\nmsg.Number.min = 'Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).';\nmsg.Number.max = 'Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).';\nmsg.Number.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\n\nmsg.Date = {};\nmsg.Date.min = 'Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).';\nmsg.Date.max = 'Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).';\n\nmsg.String = {};\nmsg.String.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\nmsg.String.match = 'Path `{PATH}` is invalid ({VALUE}).';\nmsg.String.minlength = 'Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).';\nmsg.String.maxlength = 'Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).';\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,GAAG,GAAGC,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAG,EAAvC;AAEAF,GAAG,CAACG,qBAAJ,GAA4B,IAA5B;AAEAH,GAAG,CAACI,OAAJ,GAAc,EAAd;AACAJ,GAAG,CAACI,OAAJ,CAAYC,OAAZ,GAAsB,yDAAtB;AACAL,GAAG,CAACI,OAAJ,CAAYE,QAAZ,GAAuB,4BAAvB;AAEAN,GAAG,CAACO,MAAJ,GAAa,EAAb;AACAP,GAAG,CAACO,MAAJ,CAAWC,GAAX,GAAiB,qEAAjB;AACAR,GAAG,CAACO,MAAJ,CAAWE,GAAX,GAAiB,qEAAjB;AACAT,GAAG,CAACO,MAAJ,CAAWG,IAAX,GAAkB,wDAAlB;AAEAV,GAAG,CAACW,IAAJ,GAAW,EAAX;AACAX,GAAG,CAACW,IAAJ,CAASH,GAAT,GAAe,kEAAf;AACAR,GAAG,CAACW,IAAJ,CAASF,GAAT,GAAe,iEAAf;AAEAT,GAAG,CAACY,MAAJ,GAAa,EAAb;AACAZ,GAAG,CAACY,MAAJ,CAAWF,IAAX,GAAkB,wDAAlB;AACAV,GAAG,CAACY,MAAJ,CAAWC,KAAX,GAAmB,qCAAnB;AACAb,GAAG,CAACY,MAAJ,CAAWE,SAAX,GAAuB,qFAAvB;AACAd,GAAG,CAACY,MAAJ,CAAWG,SAAX,GAAuB,oFAAvB"},"metadata":{},"sourceType":"script"}