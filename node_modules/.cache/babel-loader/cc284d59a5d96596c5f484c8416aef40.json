{"ast":null,"code":"'use strict';\n\nconst getConstructorName = require('../getConstructorName');\n\nmodule.exports = function allServersUnknown(topologyDescription) {\n  if (getConstructorName(topologyDescription) !== 'TopologyDescription') {\n    return false;\n  }\n\n  const servers = Array.from(topologyDescription.servers.values());\n  return servers.length > 0 && servers.every(server => server.type === 'Unknown');\n};","map":{"version":3,"names":["getConstructorName","require","module","exports","allServersUnknown","topologyDescription","servers","Array","from","values","length","every","server","type"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/topology/allServersUnknown.js"],"sourcesContent":["'use strict';\n\nconst getConstructorName = require('../getConstructorName');\n\nmodule.exports = function allServersUnknown(topologyDescription) {\n  if (getConstructorName(topologyDescription) !== 'TopologyDescription') {\n    return false;\n  }\n\n  const servers = Array.from(topologyDescription.servers.values());\n  return servers.length > 0 && servers.every(server => server.type === 'Unknown');\n};"],"mappings":"AAAA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,uBAAD,CAAlC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,mBAA3B,EAAgD;EAC/D,IAAIL,kBAAkB,CAACK,mBAAD,CAAlB,KAA4C,qBAAhD,EAAuE;IACrE,OAAO,KAAP;EACD;;EAED,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAWH,mBAAmB,CAACC,OAApB,CAA4BG,MAA5B,EAAX,CAAhB;EACA,OAAOH,OAAO,CAACI,MAAR,GAAiB,CAAjB,IAAsBJ,OAAO,CAACK,KAAR,CAAcC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgB,SAAxC,CAA7B;AACD,CAPD"},"metadata":{},"sourceType":"script"}