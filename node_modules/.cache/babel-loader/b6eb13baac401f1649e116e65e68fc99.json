{"ast":null,"code":"'use strict';\n\nmodule.exports = parallelLimit;\n/*!\n * ignore\n */\n\nfunction parallelLimit(fns, limit, callback) {\n  let numInProgress = 0;\n  let numFinished = 0;\n  let error = null;\n\n  if (limit <= 0) {\n    throw new Error('Limit must be positive');\n  }\n\n  if (fns.length === 0) {\n    return callback(null, []);\n  }\n\n  for (let i = 0; i < fns.length && i < limit; ++i) {\n    _start();\n  }\n\n  function _start() {\n    fns[numFinished + numInProgress](_done(numFinished + numInProgress));\n    ++numInProgress;\n  }\n\n  const results = [];\n\n  function _done(index) {\n    return (err, res) => {\n      --numInProgress;\n      ++numFinished;\n\n      if (error != null) {\n        return;\n      }\n\n      if (err != null) {\n        error = err;\n        return callback(error);\n      }\n\n      results[index] = res;\n\n      if (numFinished === fns.length) {\n        return callback(null, results);\n      } else if (numFinished + numInProgress < fns.length) {\n        _start();\n      }\n    };\n  }\n}","map":{"version":3,"names":["module","exports","parallelLimit","fns","limit","callback","numInProgress","numFinished","error","Error","length","i","_start","_done","results","index","err","res"],"sources":["B:/web_project_react/web_car_react/node_modules/mongoose/lib/helpers/parallelLimit.js"],"sourcesContent":["'use strict';\n\nmodule.exports = parallelLimit;\n\n/*!\n * ignore\n */\n\nfunction parallelLimit(fns, limit, callback) {\n  let numInProgress = 0;\n  let numFinished = 0;\n  let error = null;\n\n  if (limit <= 0) {\n    throw new Error('Limit must be positive');\n  }\n\n  if (fns.length === 0) {\n    return callback(null, []);\n  }\n\n  for (let i = 0; i < fns.length && i < limit; ++i) {\n    _start();\n  }\n\n  function _start() {\n    fns[numFinished + numInProgress](_done(numFinished + numInProgress));\n    ++numInProgress;\n  }\n\n  const results = [];\n\n  function _done(index) {\n    return (err, res) => {\n      --numInProgress;\n      ++numFinished;\n\n      if (error != null) {\n        return;\n      }\n      if (err != null) {\n        error = err;\n        return callback(error);\n      }\n\n      results[index] = res;\n\n      if (numFinished === fns.length) {\n        return callback(null, results);\n      } else if (numFinished + numInProgress < fns.length) {\n        _start();\n      }\n    };\n  }\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AAEA;AACA;AACA;;AAEA,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,KAA5B,EAAmCC,QAAnC,EAA6C;EAC3C,IAAIC,aAAa,GAAG,CAApB;EACA,IAAIC,WAAW,GAAG,CAAlB;EACA,IAAIC,KAAK,GAAG,IAAZ;;EAEA,IAAIJ,KAAK,IAAI,CAAb,EAAgB;IACd,MAAM,IAAIK,KAAJ,CAAU,wBAAV,CAAN;EACD;;EAED,IAAIN,GAAG,CAACO,MAAJ,KAAe,CAAnB,EAAsB;IACpB,OAAOL,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAf;EACD;;EAED,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAACO,MAAR,IAAkBC,CAAC,GAAGP,KAAtC,EAA6C,EAAEO,CAA/C,EAAkD;IAChDC,MAAM;EACP;;EAED,SAASA,MAAT,GAAkB;IAChBT,GAAG,CAACI,WAAW,GAAGD,aAAf,CAAH,CAAiCO,KAAK,CAACN,WAAW,GAAGD,aAAf,CAAtC;IACA,EAAEA,aAAF;EACD;;EAED,MAAMQ,OAAO,GAAG,EAAhB;;EAEA,SAASD,KAAT,CAAeE,KAAf,EAAsB;IACpB,OAAO,CAACC,GAAD,EAAMC,GAAN,KAAc;MACnB,EAAEX,aAAF;MACA,EAAEC,WAAF;;MAEA,IAAIC,KAAK,IAAI,IAAb,EAAmB;QACjB;MACD;;MACD,IAAIQ,GAAG,IAAI,IAAX,EAAiB;QACfR,KAAK,GAAGQ,GAAR;QACA,OAAOX,QAAQ,CAACG,KAAD,CAAf;MACD;;MAEDM,OAAO,CAACC,KAAD,CAAP,GAAiBE,GAAjB;;MAEA,IAAIV,WAAW,KAAKJ,GAAG,CAACO,MAAxB,EAAgC;QAC9B,OAAOL,QAAQ,CAAC,IAAD,EAAOS,OAAP,CAAf;MACD,CAFD,MAEO,IAAIP,WAAW,GAAGD,aAAd,GAA8BH,GAAG,CAACO,MAAtC,EAA8C;QACnDE,MAAM;MACP;IACF,CAnBD;EAoBD;AACF"},"metadata":{},"sourceType":"script"}